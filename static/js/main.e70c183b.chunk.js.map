{"version":3,"sources":["jsonArray/frameworks/echarts/series/scatter/index.js","jsonArray/frameworks/react/framework/SemanticUI.js","jsonArray/frameworks/react/plugins/Excel.jsx","jsonArray/frameworks/fileIO/fromFile.js","jsonArray/frameworks/react/ReactLibraryFramework.js","jsonArray/data_types/datetime.js","jsonArray/Series.js","Documentation/examples/data sync /^/.//.*$","Documentation/examples/Echarts sync /^/.//.*$","Documentation/examples/Table sync /^/.//.*$","Documentation/doc/Demo/BasicExample.doc","Documentation/doc/Echarts/Bar/Pareto.doc","Documentation/doc/Echarts/Bar/Simple.doc","Documentation/doc/Echarts/Bar/Stacked.doc","Documentation/doc/Echarts/Boxplot/AllSamples.doc","Documentation/doc/Echarts/Boxplot/AllSamplesGrouped.doc","Documentation/doc/Echarts/Boxplot/FilteredOverlay.doc","Documentation/doc/Echarts/Boxplot/Simple.doc","Documentation/doc/Echarts/Custom/HorizontalLine.doc","Documentation/doc/Echarts/Custom/Selection.doc","Documentation/doc/Echarts/Custom/Simple.doc","Documentation/doc/Echarts/Custom/Style.doc","Documentation/doc/Echarts/Custom/Zoom.doc","Documentation/doc/Echarts/Custom/ZoomSlider.doc","Documentation/doc/Echarts/Custom/ZoomVertical.doc","Documentation/doc/Echarts/Custom/onClick.doc","Documentation/doc/Echarts/Format/Legend.doc","Documentation/doc/Echarts/Format/ToolboxExample.doc","Documentation/doc/Echarts/Heatmap/Simple.doc","Documentation/doc/Echarts/Line/ErrorBars.doc","Documentation/doc/Echarts/Line/Highlight.doc","Documentation/doc/Echarts/Line/Simple.doc","Documentation/doc/Echarts/Pie/FromSeries.doc","Documentation/doc/Echarts/Pie/Simple.doc","Documentation/doc/Echarts/RectGrid/Custom.doc","Documentation/doc/Echarts/RectGrid/Simple.doc","Documentation/doc/Echarts/Scatter/ColorBy.doc","Documentation/doc/Echarts/Scatter/Labeled.doc","Documentation/doc/Echarts/Scatter/Simple.doc","Documentation/doc/Echarts/Selection/SelectionScatter.doc","Documentation/doc/Echarts/Tooltips/tooltips.doc","Documentation/doc/Table/AccordianTable.doc","Documentation/doc/Table/AlternatingStyle.doc","Documentation/doc/Table/Checkbox.doc","Documentation/doc/Table/ColumnFilters.doc","Documentation/doc/Table/LazyLoading.doc","Documentation/doc/Table/MultiRowCol.doc","Documentation/doc/Table/MultirowTable.doc","Documentation/doc/Table/NoHeader.doc","Documentation/doc/Table/ParentFilterCol.doc","Documentation/doc/Table/ParentSortCol.doc","Documentation/doc/Table/SimpleTable.doc","Documentation/doc/Table/TableFormat.doc","Documentation/install.py","jsonArray/frameworks/react/table/utilities/ColGroupsToCol.js","jsonArray/frameworks/react/table/header/Filter/ColumnFilter.jsx","jsonArray/frameworks/react/table/header/Cell/index.jsx","jsonArray/frameworks/react/table/header/SingleRow/ColumnRow.jsx","jsonArray/frameworks/react/table/header/SingleRow/index.jsx","jsonArray/frameworks/react/table/header/MultiRow/CategoryRow.jsx","jsonArray/frameworks/react/table/header/MultiRow/index.jsx","jsonArray/frameworks/react/table/header/DataFrameHeader.jsx","jsonArray/frameworks/react/table/header/SeriesHeader.jsx","jsonArray/frameworks/react/table/cell/coloredSquare.jsx","jsonArray/frameworks/react/table/cell/onClickFunc.jsx","jsonArray/frameworks/react/table/cell/cellType.jsx","jsonArray/frameworks/react/table/cell/booleanCircle.jsx","jsonArray/frameworks/react/table/cell/index.jsx","jsonArray/frameworks/react/table/body/Row.jsx","jsonArray/frameworks/react/table/body/SeriesRow.jsx","jsonArray/frameworks/react/table/body/AccordianRow.jsx","jsonArray/frameworks/react/table/body/MultiRow.jsx","jsonArray/frameworks/react/table/body/index.jsx","jsonArray/frameworks/react/table/Table.js","jsonArray/frameworks/echarts/series/scatter/scatterBy.js","jsonArray/data_types/format/valueToString.js","Documentation/examples/Echarts/Area/Simple.jsx","Documentation/examples/Echarts/Bar/Pareto.jsx","Documentation/examples/Echarts/Bar/Simple.jsx","Documentation/examples/Echarts/Bar/Stacked.jsx","Documentation/examples/Echarts/Boxplot/AllSamples.jsx","Documentation/examples/Echarts/Boxplot/AllSamplesGrouped.jsx","Documentation/examples/Echarts/Boxplot/FilteredOverlay.jsx","Documentation/examples/Echarts/Boxplot/Simple.jsx","Documentation/examples/Echarts/Custom/HorizontalLine.jsx","Documentation/examples/Echarts/Custom/Selection.jsx","jsonArray/index.jsx","Documentation/examples/Echarts/Custom/Simple.jsx","Documentation/examples/Echarts/Custom/Style.jsx","Documentation/examples/Echarts/Custom/Zoom.jsx","Documentation/examples/Echarts/Custom/ZoomSlider.jsx","Documentation/examples/Echarts/Custom/ZoomVertical.jsx","Documentation/examples/Echarts/Custom/onClick.jsx","Documentation/examples/Echarts/Format/Legend.jsx","Documentation/examples/Echarts/Format/ToolboxExample.jsx","Documentation/examples/getData.js","Documentation/examples/Echarts/Heatmap/Simple.jsx","Documentation/examples/Echarts/Line/ErrorBars.jsx","Documentation/examples/Echarts/Line/Highlight.jsx","Documentation/examples/Echarts/Line/Simple.jsx","Documentation/examples/Echarts/Pie/FromSeries.jsx","Documentation/examples/Echarts/Pie/Simple.jsx","Documentation/examples/Echarts/RectGrid/Custom.jsx","Documentation/examples/Echarts/RectGrid/Simple.jsx","Documentation/examples/Echarts/Scatter/ColorBy.jsx","Documentation/examples/Echarts/Scatter/Labeled.jsx","Documentation/examples/Echarts/Scatter/Simple.jsx","Documentation/examples/Echarts/Selection/SelectionScatter.jsx","Documentation/examples/Echarts/Tooltips/tooltips.jsx","Documentation/examples/Echarts/config.js","Documentation/examples/Table/Accordian/AccordianTable.jsx","Documentation/examples/Table/Filtering/ColumnFilters.jsx","Documentation/examples/Table/Header/MultiRow.jsx","Documentation/examples/Table/Header/NoHeader.jsx","Documentation/examples/Table/LazyLoading/LazyLoading.jsx","Documentation/examples/Table/MultiRow/MultiRowCol.jsx","Documentation/examples/Table/MultiRow/MultirowTable.jsx","Documentation/examples/Table/ParentFilterCol.jsx","Documentation/examples/Table/ParentSortCol.jsx","Documentation/examples/Table/SpecialContent/Checkbox.jsx","Documentation/examples/Table/Style/AlternatingStyle.jsx","Documentation/examples/Table/Style/SimpleTable.jsx","Documentation/examples/Table/Style/TableFormat.jsx","Documentation/examples/Table/config.js","Documentation/components/jsonArray.js","Documentation/index.jsx","jsonArray/frameworks/fileIO/extract.js","jsonArray/frameworks/react/framework/Components.jsx","Documentation/examples/Demo/BasicExample.jsx","Documentation/components/Example.jsx","Documentation/components/Header.jsx","jsonArray/jsonObject.js","jsonArray/data_types/format/arrayToString.js","jsonArray/data_types/format/strFormat.js","jsonArray/frameworks/echarts/tooltips.js","jsonArray/frameworks/echarts/axis.js","jsonArray/frameworks/echarts/options/features/axline.js","jsonArray/frameworks/echarts/options/charts/line.js","jsonArray/frameworks/echarts/series/line/rollingAvg/CenterWindow.js","jsonArray/frameworks/echarts/series/line/rollingAvg/index.js","jsonArray/frameworks/echarts/series/line/rollingAvg/TailingWindow.js","jsonArray/frameworks/echarts/options/charts/rollingAvg.js","jsonArray/frameworks/echarts/options/charts/boxplot.js","jsonArray/frameworks/echarts/options/charts/heatmap.js","jsonArray/frameworks/echarts/options/charts/scatter.js","jsonArray/frameworks/echarts/options/charts/bar.js","jsonArray/frameworks/echarts/options/charts/pareto.js","jsonArray/frameworks/echarts/series/grid/index.js","jsonArray/frameworks/echarts/options/charts/grid.js","jsonArray/frameworks/echarts/series/pie/index.js","jsonArray/frameworks/echarts/options/charts/pie/index.js","jsonArray/frameworks/echarts/series/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/waterfall.js","jsonArray/frameworks/echarts/options/index.js","jsonArray/frameworks/echarts/options/format/Toolbox.js","jsonArray/frameworks/echarts/options/features/Selection.js","jsonArray/frameworks/echarts/options/features/DataZoom.js","jsonArray/frameworks/echarts/options/features/Highlight.js","jsonArray/frameworks/echarts/options/format/legend.js","jsonArray/frameworks/echarts/components.js","jsonArray/frameworks/echarts/series/features/Vline.js","jsonArray/frameworks/echarts/series/features/Circle.jsx","jsonArray/frameworks/echarts/series/features/Hline.js","jsonArray/frameworks/echarts/series/index.js","jsonArray/frameworks/echarts/series/features/ErrorBars.js","jsonArray/statistics/array.js","jsonArray/statistics/matrix.js","jsonArray/jsonArray.js","Documentation/components/CodeRender.jsx","Documentation/components/Sidebar.jsx","Documentation/config.js","jsonArray/data_types/dtypes.js","jsonArray/frameworks/react/plugins/Plugins.js","jsonArray/frameworks/react/ReactComponents.js","jsonArray/frameworks/echarts/series/line/index.js","jsonArray/frameworks/echarts/series/waterfall/index.js","jsonArray/frameworks/react/plugins/echarts/EchartsReact.jsx","jsonArray/frameworks/react/plugins/echarts/index.jsx","jsonArray/frameworks/echarts/series/boxplot/index.js","jsonArray/frameworks/echarts/series/boxplot/scatter_overlay.js","jsonArray/frameworks/echarts/series/bar/bar.js","jsonArray/frameworks/echarts/series/bar/index.js","Documentation sync /^/.//.*$","jsonArray/frameworks/echarts/series/propsToSeries.js","jsonArray/frameworks/react/plugins/fileIO.jsx","index.js","Documentation/examples sync /^/.//.*$","jsonArray/frameworks/colors/pallet/entropy_pallet.js","jsonArray/frameworks/colors/pallet/entropy_8bit.js","jsonArray/frameworks/colors/pallet/reds.js","jsonArray/frameworks/colors/Colors.js"],"names":["scatter","props","json_array","jsonArray","color","groupId","undefined","coordinates","i","length","temp","colx","coly","colorBy","push","Series","name","type","data","propsToSeries","label","formatter","params","dataIndex","show","position","fontSize","SemanticUI","require","SemanticUILibrary","Excel","bind","Table","Dropdown","ToCsv","this","button","Button","ReactLibraryFramework","react","buttonStyle","margin","buttonProps","input","Input","inputStyle","inputProps","icon","placeholder","table","th","HeaderCell","thead","Header","td","Cell","tr","Row","body","Body","image","Image","Icon","checkbox","Checkbox","values","ascending","plottype","columns","filter","r","column","unique","options","forEach","element","key","text","value","child_props","Form","Field","control","Select","search","clearable","multiple","onChange","e","d","callback","state","filename","fileInputRef","React","createRef","console","log","component","style","onClick","current","click","defaultValue","hidden","ref","event","fileHandler","target","className","readOnly","files","fileObj","setState","ExcelRenderer","err","response","alert","rows","header","splice","Component","parser","http","zlib","fromFileLibrary","fromUrl","toCsv","url","a","from_url","from_file","file","parse","download","complete","results","row","Object","keys","from_gz_url","buffer","get","res","gunzip","createGunzip","pipe","on","toString","join","VALUE","datetime","self","moment","__proto__","prototype","format","strftime","week","year","isoWeek","timedelta","inplace","date","param_keys","pkey","add","includes","index","object","dtypes","dtype","DataTypes","parse_series","bins","min","max","binNum","count","item","j","bin","logic","unique_values","ordered","Set","concat","sort","map","x","b","Math","reduce","sum","variable","func","obj","Number","isNaN","entries","val","compute","y","ReactComponents","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","toColumns","columnGroups","flat","ColumnFilter","col","_","uniqueId","padding","headerCellOnClick","columnOnClick","col_name","col_number","filterValues","columnFilterOnChange","filters","Segment","Group","raised","compact","width","boxShadow","border","backgroundColor","basic","textAlign","maxWidth","minHeight","selection","fluid","columnNames","colNumber","ColComponent","thProps","thStyle","tableName","ColumnRow","col_offset","colCells","accordian","table_data","trProps","trStyle","DataFrameHeader","headerrow","theadProps","theadStyle","TableRow","catCells","categories","cat","MultiRowHeader","toColumn","showHeader","SeriesHeader","coloredSquare","colorHex","colors","fillAndEdge","preserveAspectRatio","viewBox","transform","display","height","overflow","stroke","edge","strokeWidth","fill","onClickFunc","row_idx","row_data","cellOnClick","cellType","cellContent","valueToString","componentOnClick","imageProps","imageStyle","IconProps","iconStyle","CheckboxProps","checkboxStyle","checked","booleanColor","radius","cx","cy","booleanCircle","whiteSpace","overflowWrap","cell","cellBackgroundColor","cellStyle","tdProps","tdStyle","col_span","row_span","rowOnClick","setSelectedRow","rowStyle","alternateStyle","rowColor","idx","__index__","rowBackgroundColor","selectedRow","cellContentOnly","multirow_idx","SeriesRow","__value__","AccordianRow","useState","visible","setVisible","AccordianTable","json_obj","accordianFunc","accordianColumns","AccordianComponent","iconOnClick","iconColor","accordianComponent","semanticUI","tableStyle","accordianHeader","accordianProps","rowSpan","colSpan","MultiRow","modProps","multirowSpan","multirow","multirowStyle","span_len","span","ceil","TableBody","onHover","setOnHover","lazyLoading","renderedRows","step","lazyLoadingStep","setRenderedRows","onMouseOver","onMouseOut","bodyProps","bodyStyle","SeriesTable","Render","sortBy","setSortBy","sortAscending","setSortAscending","setFilters","lazyLoadingStart","sortable","content","filterable","sortedColumn","sort_values","filt","scatter_by","group","groupby","series","color_value","numeric","percentage","float","string","format_float","format_int","format_array","format_object","format_boolean","format_scientific","format_percentage","format_datetime","format_string","pow","toFixed","toExponential","formatted","parseFloat","slice","SimpleScatter","pivot","pivot_table","echarts","Echarts","option","stack","smooth","lineStyle","showSymbol","areaStyle","opacity","emphasis","focus","tooltip","trigger","axisPointer","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","graphic","LinearGradient","offset","getData","echartsOptions","pareto","ratio","Bar","StackedScatter","stack_col","stacked_id","stacked","AllSamples","Boxplot","allSample","overlayFilter","CATEGORY2","SimpleLine","axhline","onSelect","line","echartsStyle","zoom","scroll","sliders","selected","setSelected","DevelopmentExample","pie","path","Heatmap","append_series","echartsSeries","errorbars","avg","rotate","xtick_padding","highlight","Line","SimplePie","create_column","QRB","FORCE_INK","DEV","SBL","pieFromSeries","rectGrid","circle","RectGrid","ColorByScatter","Scatter","from_DataFrame","horizontal","as","importConfig","config","indev","localConfig","groups","astype","ColumnFilters","SimpleTable","category","JsonArray","ParentSortColumn","CheckboxTable","checkboxField","array","max_length","mapping","rename","__inplace__","df","newCol","df1","df2","col_left","col_right","how","on_right","on_left","df1_rows","df2_rows","Array","isArray","__groupby__","atts","temp_keys","assign","s","counts","split_val","split","id_att","summaryType","row_val","column_val","rval","by_row","cval","by_col","temp_json","sep","col1","col2","combine","sample_index","new_col","ex_columns","enable","Examples","setCategory","subcategory","setSubCategory","docType","setDocType","getConfig","fillna","inverted","Navbar","Column","stretched","PageContent","examples","exampleComponents","title","vertical","jsxDir","docDir","example","size","Item","active","Papa","browserInterface","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","parentNode","removeChild","csv","unparse","csvData","Blob","wrapper","src","alt","Example","showCode","setShowCode","dir","default","NullComponent","description","Controls","jsonObject","key_name","value_name","json_object","arrayToString","tab_count","tab_space","max_width","value_to_string","col_width","spacing","row_array","whitespace","col_spacing","format_columns","format_row","jsonArray_str","strFormat","echartsTooltip","sample","echartsAxis","axis","initialize","scale","axisLabel","units","Axline","markLine","symbol","to_category","to_date","CenterWindow","midStart","floor","midEnd","rollingAvg","avgType","rolling_average","TailingWindow","boxplot","to_value","dynamic_range","heatmap","visualMap","calculable","orient","inRange","bar","tick_values","Pareto","att","total","cumsum","row_apply","color_col","get_color","renderItem","renderRectangle","animation","legendHoverLink","silent","encode","z","zlevel","api","xCoor","yCoor","coord","shape","minValue","maxValue","hide","avoidLabelOverlap","labelLine","fontWeight","pieChart","fromSeries","waterfall","generate_options","RollingAvg","Grid","Pie","PieFromSeries","Waterfall","dataZoom","restore","xAxisIndex","outOfBrush","colorAlpha","scrollZoom","start","end","filterMode","showDataShadow","handleSize","handleIcon","yAxisIndex","features","indexOf","local_variables","delete","top","eChartsComponents","Vline","colz","itemStyle","normal","borderWidth","xValue","highPoint","lowPoint","children","transition","x1","y1","x2","y2","visual","render","Circle","Hline","yValue","zIndex","ErrorBars","dropna","mean","arrayStats","forward_diff","yValues","pStep","nStep","JSON","stringify","hasOwnProperty","init","subset","stats","col_names","convert","rcol","gcol","bcol","colorCol","toHex","rgbToHex","colorType","CodeRender","rel_path","source","setSource","ext","syntax","fetch","then","circular","downloadFile","editorProps","$blockScrolling","Infinity","maxLines","minLines","mode","tabSize","theme","Sidebar","menuItems","flat_categories","subcategories","subMenuItems","subcat","Menu","sub_categories","pointing","secondary","set_dtypes","dtype_col","String","apply","set_label","number","toLowerCase","replace","data_type","dtype1","dtype2","priority","temp_dtype","dtypePriority","existing","parse_column","enabledComponents","excel","components","FileIO","echartsLibrary","pos","waferfallDiff","neg","abs","barBorderColor","EchartsReact","onEvents","batch","iloc","Histogram","plot_options","binning","react_echarts","split_values","dates","datetimes","t","Date","start_date","month","getMonth","day","getDate","getFullYear","formatDate","timeframe","_props","prepareBoxplotData","group_values","echartsData","boxData","outliers","copy_column","scatterFunc","scatter_overlay","BarPlot","symbolSize","lw","extract","FileIOLibrary","ReactDOM","getElementById","ENTROPY","ENTROPY_8BIT","REDS","color_type","invert","color_hex","convertHex","step_size","max_colors","hex","parseInt","substring","int_to_color","v","round","shadeHexColor","percent","f","p","R","G","B","componentToHex","c","g"],"mappings":"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","file":"static/js/main.e70c183b.chunk.js","sourcesContent":["/**\n * echarts Scatter\n * =================\n *\n * Converts json arrays into echart scatter series object\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport jsonArray from '../../../../jsonArray'\nimport propsToSeries from '../propsToSeries'\n\n/**\n * Convert the json_array to a list of x/y cooridnates\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\n * @param  {string} coly  column 2 name\n * @param  {object} params parameters used to customize the plot\n * @return {Object}       local object contents\n */\nexport default function scatter( props ){\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n  // set default color scheme for specific label types\n  var color = props.color\n  switch( props.groupId ){\n    case true:\n      color = 'red'\n      break\n\n    case false:\n      color = 'blue'\n      break\n\n    case 'MARKED':\n      color = 'green'\n      break\n\n    default:\n      if( color === undefined ) color = 'blue'\n      break\n  }\n\n\n  // convert the json array to a list of lists containing data\n  var coordinates = []\n  for( var i=0; i < json_array.length; i++ ){\n    var temp\n\n    // the dataframe index was pushed into the plot data in addition to the\n    // data used for plotting. This was used to locate the part by index\n    // number after splitting it for visualization purposes\n    temp = [\n      json_array[i][props.colx],\n      json_array[i][props.coly],\n      json_array[i]['__index__']]\n\n    if( props.colorBy !== undefined) temp.push(props.colorBy)\n\n    coordinates.push(temp)\n  }\n\n  var Series = {\n    name: 'scatter',\n    type: 'scatter',\n    color: color,\n    data: coordinates\n  }\n\n  Series = propsToSeries(props, Series)\n\n  // add tooltips when the label is provided\n  if( props.colorBy !== undefined ){\n    Series['emphasis'] = {\n      label: {\n        formatter: function( params){\n          return `${coordinates[params.dataIndex][2]}`\n        },\n        show: true,\n        position: 'top',\n        color: color ,\n        fontSize: 16\n      }\n    }\n  }\n\n  return [Series]\n\n}\n","/**\n * Semantic UI Framework\n * =======================\n *\n * Extends the jsonArray functionality to include specific\n * functions for formatting semantic UI components\n *\n * :Author: Nik Sumikawa\n * :Date: Aug 4, 2020\n */\n\n\nimport React from \"react\";\n\nimport ReactLibraryFramework from '../ReactLibraryFramework'\n\nvar SemanticUI\ntry{ SemanticUI = require('semantic-ui-react') }catch{}\n\n\nexport default class SemanticUILibrary extends ReactLibraryFramework{\n  constructor(data){\n    super(data)\n\n    // must bind this to all internal functions or they will be\n    // lost when rendering via react\n    this.Excel = this.Excel.bind(this)\n    this.Table = this.Table.bind(this)\n    this.Dropdown = this.Dropdown.bind(this)\n    this.ToCsv = this.ToCsv.bind(this)\n\n  }\n\n  Excel( props ){\n    return Excel( this.props(props) )\n  }\n\n  Table( props ){\n    return Table( this.props(props) )\n  }\n\n  Dropdown( props ){\n    return Dropdown( this.props(props) )\n  }\n\n  ToCsv( props ){\n    const fileIO = require('../plugins/fileIO')\n    return fileIO.ToCsv( {...this.props(props), ...{button: SemanticUI.Button}})\n  }\n\n\n}\n\n\n// returns the excel reader using teh Semantic UI Framework for input controls\nexport function Excel( props ){\n\n  var Excel = props.data.react.Excel\n\n  if( SemanticUI === undefined ){\n    return <Excel />\n  }\n\n  return(\n    <Excel\n      {...props}\n      button = {SemanticUI.Button}\n      buttonStyle = {{margin:0}}\n      buttonProps = {{...{color: 'blue'}, ...props.buttonProps}}\n\n      input = {SemanticUI.Input}\n      inputStyle = {{margin:0}}\n      inputProps = {{icon: 'file', placeholder: 'xlsx, csv, ...' }}\n      />\n    )\n}\n\n\n\n// returns a table formatted using the Semantic UI table Framework\nexport function Table(props){\n\n  var Table = props.data.react.Table\n\n  if( SemanticUI === undefined ) return Table\n\n  return(\n    <Table\n      {...props}\n      table = {SemanticUI.Table}\n      th = {SemanticUI.Table.HeaderCell}\n      thead = {SemanticUI.Table.Header}\n      td = {SemanticUI.Table.Cell}\n      tr = {SemanticUI.Table.Row}\n      body = {SemanticUI.Table.Body}\n\n      button = {SemanticUI.Table.Button}\n      image = {SemanticUI.Table.Image}\n      icon = {SemanticUI.Icon}\n      checkbox = {SemanticUI.Checkbox}\n      />\n    )\n\n}\n\n\nexport function Dropdown( props ){\n\n  // set ascending order as a default for dropdown content\n  var ascending = true\n  if( props.ascending !== undefined ) ascending = props.ascending\n\n\n  // retrieve the unique calues from the specified column\n  var values\n  switch( props.plottype ){\n    case 'column':\n      values = props.data.columns\n      break\n\n    case 'value' :\n      values = props.data\n        .filter(r => r[props.column] !== undefined )\n        .unique( props.column, ascending )\n      break\n\n    default :\n      values = props.data\n        .filter(r => r[props.column] !== undefined )\n        .unique( props.column, ascending )\n      break\n  }\n\n  var options = []\n\n  // push the values into the array formatted for the dropdown menu\n  values.forEach( element => options.push({\n     key:  element, text: element, value: element\n  }) )\n\n  const child_props = props\n  delete child_props.data\n\n  return(\n    <SemanticUI.Form.Field\n      {...child_props}\n      key={`dropdown-${props.column}`}\n      control={SemanticUI.Select}\n      label={props.column}\n      options={options}\n      search={true}\n      clearable={true}\n      multiple={(props.multiple === undefined) ? false : props.multiple}\n      placeholder={props.column}\n      onChange={(e, d) => (props.callback !== undefined) ? props.callback({[props.column]: d.value}) : null}\n    />\n  )\n}\n\n// <SemanticUI.Dropdown\n//   {...child_props}\n//   options={options}\n//   key={`dropdown-${props.column}`}\n//   />\n","/*!\n\n*/\n\n\nimport React from \"react\";\n\nimport {ExcelRenderer} from 'react-excel-renderer';\n\nimport {Button, Input} from '../framework/Components'\n\nimport jsonArray from '../../../jsonArray'\n\n// export default function DefaultFunction(){ console.log('not implemented')}\n\nexport default class Excel extends React.Component{\n\n\n  constructor( props ) {\n    super(props)\n\n    this.state = { name: 'excel', filename: '' }\n  }\n\n  // returns the React components used to select the csv file for parsing\n  // and to display the name of the file in an input component\n  render(){\n\n    var fileInputRef = React.createRef();\n\n    console.log( 'button props', this.props)\n    return (\n      <>\n        <Button\n          {...this.props.buttonProps}\n          component= {this.props.button}\n          key={`${this.state.name}-Button`}\n          style={this.props.buttonStyle}\n          onClick={() => fileInputRef.current.click()}\n          defaultValue={this.props.defaultValue === undefined ? 'Upload' : this.props.defaultValue}\n          />\n\n        <input\n          key={`${this.state.name}-hidden-input`}\n          type=\"file\"\n          hidden\n          ref={fileInputRef}\n          onChange={(event) => this.fileHandler(event) }\n          onClick={(event)=> { event.target.value = null }}\n          style={{\"padding\":\"10px\"}} />\n\n\n        <Input\n          {...this.props.inputProps}\n          component= {this.props.input}\n          style={{...this.props.inputStyle, ...{\"paddingTop\":\"0px\"}}}\n          key={`${this.state.name}-input`}\n          type=\"text\"\n          className=\"form-control\"\n          value={this.state.filename}\n          readOnly\n          />\n      </>\n    )\n\n  }\n\n  // parses the selected file. An error is thrown when this\n  // routine fails. Otherwise a jsonArray object is returned\n  // via the callback function\n  fileHandler( event ){\n\n    if(event.target.files.length){\n\n      const fileObj = event.target.files[0];\n      this.setState( {filename: fileObj.name} )\n\n      ExcelRenderer(fileObj, (err, response) => {\n\n        if(err){\n          alert('csv parsing error: ' + err);\n        }\n        else{\n\n          var data = response.rows\n          var columns\n\n          // assume that the first row contains a header\n          if( this.props.header !== false ){\n              columns = data[0]\n              data = data.splice(1)\n          }\n\n          // convert the data to a json array\n          const json_array = new jsonArray(data)\n\n          // set the column names when defined\n          if( columns !== undefined ) json_array.columns = columns\n\n\n          if( this.props.callback !== undefined ){\n            this.props.callback( json_array )\n          }\n        }\n      });\n    }\n\n  }\n\n\n}\n","/**\n * cSV to jsonArray\n * ==================\n *\n * pluggin that supports the json to csv module. This converts the a\n * csv file stored remotely into a json Array\n *\n * @author Nik Sumikawa\n * @date Aug 20, 2020\n */\n\nimport jsonArray from '../../jsonArray'\nimport toCsv from './extract'\n\n// import papaparser when available\nvar parser\ntry{ parser = require(\"papaparse\"); }catch{}\n\nvar http = require(\"http\"), zlib = require(\"zlib\");\n\n\nexport default class fromFileLibrary{\n  constructor(data){\n\n    this.json_array = data\n\n    // must bind this to all internal functions or they will be\n    // lost when rendering via react\n    this.fromUrl = this.fromUrl.bind(this)\n    this.toCsv = this.toCsv.bind(this)\n  }\n\n  async fromUrl( url, callback, params={} ){\n\n    // // retrieve the data from the url and parse out the text\n    // const res = await fetch( url )\n    // var text = await res.text();\n    //\n    // // parse the csv and return a json array containing the data\n    // return from_file(text, {header: true})\n\n    return from_url( url, callback, params )\n  }\n\n  toCsv( filename='file.csv' ){\n    toCsv(this.json_array, filename)\n  }\n}\n\n\n\n/**\n * Returns a json array with the contents of the csv file\n * provided at the url address\n * @param  {string} url url address where the data is stored\n * @return {Array}     jsonArray containing the csv data\n */\nexport function from_file( file, params={} ){\n\n  if( parser === undefined ){\n    console.log( 'papaparser not installed' )\n    return\n  }\n\n\n  const data = parser.parse(\n    file,\n    { ...{params},\n      ...{\n        header: true\n      }\n  })\n\n  // console.log( data )\n  return new jsonArray( data.data )\n}\n\n\n\n/**\n* Returns a json array with the contents of the csv file\n* provided at the url address\n* @param  {string} url url address where the data is stored\n* @return {Array}     jsonArray containing the csv data\n*/\nexport async function from_url( url, callback, params={} ){\n\n  if( parser === undefined ){\n    console.log( 'papaparser not installed' )\n    return\n  }\n\n\n  // var data\n\n  return await parser.parse(\n    url,\n    { ...{params},\n      ...{\n        download: true,\n        header: true,\n        complete: function(results) {\n          if( callback !== undefined ){\n\n            // convert to a json Array and remove all missing rows\n            var json_array = new jsonArray( results.data )\n            json_array = json_array.filter(row => Object.keys(row).length > 2)\n\n            // perform callback to update parent state\n            callback( json_array )\n          }\n        }\n\n      }\n  })\n\n}\n\n\n\n/**\n* Returns a json array with the contents of the csv file\n* provided at the url address\n* @param  {string} url url address where the data is stored\n* @return {Array}     jsonArray containing the csv data\n*/\nexport async function from_gz_url( url, callback, params={} ){\n\n  if( parser === undefined ){\n    console.log( 'papaparser not installed' )\n    return\n  }\n\n  // buffer to store the streamed decompression\n  var buffer = [];\n\n  http.get(url, function(res) {\n      // pipe the response into the gunzip to decompress\n      var gunzip = zlib.createGunzip();\n      res.pipe(gunzip);\n\n      gunzip.on('data', function(data) {\n          // decompression chunk ready, add it to the buffer\n          buffer.push(data.toString())\n\n      }).on(\"end\", function() {\n        parser.parse(\n          buffer.join(\"\"),\n          { ...{params},\n            ...{\n              header: true,\n              complete: function(results) {\n                // console.log( results )\n\n                var data = results.data\n                data = data.filter( row => row.VALUE !== '1')\n\n\n                if( callback !== undefined ){\n                  // convert to a json Array and remove all missing rows\n                  var json_array = new jsonArray( data )\n                  // json_array = json_array.filter(row => Object.keys(row).length > 2)\n\n                  // perform callback to update parent state\n                  callback( json_array )\n                }\n              }\n\n            }\n        })\n\n      }).on(\"error\", function(e) {\n        console.log( 'failed' )\n          callback(e);\n      })\n  }).on('error', function(e) {\n    console.log( 'failed' )\n      callback(e)\n  });\n\n}\n","/**\n * React Library Framework\n * =========================\n *\n * Class used to store a global copy of the json array so it\n * can be automatically included as a prop into the desired\n * react component. This Framework is intended to be extended\n * upon for each component library\n *\n * @author Nik Sumikawa\n * @date Aug 28, 2020\n *\n */\n\n\nexport default class ReactLibraryFramework{\n\n  constructor(data){\n    // cast the data to a json_array data type\n    this.data = data\n  }\n\n  props( props ){\n    return {\n      ...props,\n      ...{\n        data: this.data\n      }}\n  }\n\n}\n","/**\n * Datetime\n * ===============\n *\n * extend the moments class to provide python datetime functions\n *\n * :Author: Nik Sumikawa\n * :Date: July 29, 2020\n */\n\n\nimport moment from 'moment';\n\n\n\nexport default function datetime( value ) {\n  var self = moment( value );\n\n  self.__proto__ = datetime.prototype;\n\n  return self;\n}\n\ndatetime.prototype.__proto__ = moment.prototype;\n\n// returns the date as a string based on the provided format\ndatetime.prototype.toString = function(format='YYYY-MM-DD'){\n  return this.format(format)\n}\n\n// returns the date as a string based on the provided format\ndatetime.prototype.strftime = function(format='YYYY-MM-DD'){\n  return this.format(format)\n}\n\n// returns the date as a string based on the provided format\ndatetime.prototype.week = function(){\n  return `${this.year()}-${this.isoWeek()}`\n}\n\n\n/**\n *  adds to the date based on the params object\n * @param  {objects}  params         'add' parameters with keys of days, months, years, etc.\n * @param  {Boolean} [inplace=false] When True, the local copy of the date will be changed.\n * @return {datetime}                updated datetime object\n */\ndatetime.prototype.timedelta = function(params, inplace=false){\n\n  // avoid mutating the original copy via cloning unless specified otherwise\n  var date = this\n  if( inplace === false ){\n    date = datetime(this)\n  }\n\n  /// retrieve the offset parameters\n  const param_keys = Object.keys( params )\n\n  // add the offset to the date\n  for( var i=0; i < param_keys.length; i++ ){\n    const pkey = param_keys[i]\n    date.add(params[pkey], pkey)\n  }\n\n  return date\n}\n","/**\n * JSON Object\n * ===============\n *\n * Class that aggregates common functions performed\n * on json objects\n *\n * :Author: Nik Sumikawa\n * :Date: April 29, 2020\n */\n\n\nimport DataTypes from './data_types/dtypes';\nimport ReactComponents from './frameworks/react/ReactComponents'\n\nimport jsonArray from './jsonArray'\n\n\n\nexport default class Series extends Object {\n\n  constructor(props={}) {\n    super()\n\n    const keys = Object.keys(props)\n\n    if( keys.includes('index') & keys.includes('value') ){\n      for( var i=0; i < props.value.length; i++ ){\n        this[props.index[i]] = props.value[i]\n      }\n    }\n\n    if( keys.includes('object') ){\n      const keys = Object.keys(props.object)\n      for( i=0; i < keys.length; i++ ){\n        this[keys[i]] = props.object[keys[i]]\n      }\n    }\n\n    // allow for mixed datatype, referenced by the keys.\n    // This is only applicable when the data types are provided.\n    // Otherwise, it is assumed that the data is from a single\n    // data type which will be parsed out\n    if( props.dtypes !== undefined ){\n      this.dtypes = props.dtypes\n      this.dtype = 'mixed'\n\n    }else{\n      this.dtype = props.dtype\n\n      // parse the data type from the data when one is not provided\n      if( this.dtype === undefined ){\n        this.dtype = new DataTypes().parse_series( this )\n      }\n\n    }\n\n    this.name = props.name\n    // this.dtype.parse_series( this )\n  }\n\n  get index(){\n    return Object.keys(this.data)\n  }\n\n  get values(){\n    return Object.values(this.data)\n  }\n\n  // copies the local data removes all metadata elements\n  get data(){\n    var data = {...this}\n    delete data.dtype\n    delete data.dtypes\n    delete data.name\n\n    return data\n  }\n\n\n  /**\n   * Discretizes (bins) the values for a specific column\n   * based on the users specifications\n   * @param  {String} col         Column name\n   * @param  {Object} [params={}] parameters to define the binning\n   * @return {Object}             jsonArray containing the binning results\n   */\n  binning( params={} ){\n\n    // placeholder for the bins\n    var bins = [];\n\n    // extract the parameters\n    const param_keys = Object.keys(params)\n\n    const min = this.min\n\n    // set defaults when none are provided\n    if( !param_keys.includes('bins') ) params['bins'] = 10\n    if( !param_keys.includes('interval') ){\n      const max = this.max\n      params['interval'] = (max-min)/params['bins']\n    }\n\n\n    //Setup Bins\n    for(var i = 0; i < params['bins']; i++ ){\n      bins.push({\n        binNum: i,\n        value: min + i*params['interval'],\n        max: min + (i+1)*params['interval'],\n        count: 0\n      })\n    }\n\n    //Loop through data and add to bin's count\n    for (i = 0; i < this.values.length; i++){\n      var item = this.values[i];\n\n      for (var j = 0; j < bins.length; j++){\n        var bin = bins[j];\n\n        // condition logic to account for the first step\n        // to include the minimum value\n        var logic = item > bin.value && item <= bin.max\n        if( j === 0) logic = item >= bin.value && item <= bin.max\n\n        if(logic){\n          bin.count++;\n          break\n        }\n      }\n    }\n\n    return new jsonArray( bins )\n  }\n\n\n  /**\n   * Counts the number of occurences for each unique value in the\n   * specified column and returns a jsonArray of the statistics\n   * @param  {String} col         Column name\n   * @param  {Object} [params={}] parameters to define the binning\n   * @return {Object}             jsonArray containing the binning results\n   */\n  get count(){\n\n    // placeholder for the results\n    var results = {};\n\n    const unique_values = this.unique()\n\n    // setup the results\n    for(var i = 0; i < unique_values.length; i++ ){\n      const value = unique_values[i]\n      results[value] = this.values.filter(item => item === value).length\n    }\n\n    return new Series({object: results})\n\n  }\n\n\n  /**\n   * Returns the number of occurences for each unique value\n   * @param  {Boolean} [ordered=false] When True, the unique values are returned in sorted order\n   * @return {Array}                   Array of unique values\n   */\n  unique( ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    var unique_values = [...new Set([...this.values])]\n\n    // When the column is an array type, concatinate all array values\n    if( this.dtype === 'array'){\n      var temp = []\n      for( var i=0; i < unique_values.length; i++ ){\n        if(unique_values[i] === undefined) continue\n        temp = temp.concat(unique_values[i])\n      }\n\n      // overwrite the unique values with the concatinated values\n      unique_values = [...new Set(temp)]\n    }\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        // order string type\n        if( this.dtype === 'string' ){\n          return unique_values.sort()\n        }\n\n        try{\n          unique_values = unique_values.map( x => +x)\n          unique_values = unique_values.sort(function(a,b){return a - b})\n        }catch{\n          // default to the standard sort\n          unique_values.sort()\n        }\n    }\n\n    return unique_values\n  }\n\n\n  /********************************************************************************\n  *  Math Functions\n  *  ===============================\n  *  Interface for computing common statistical functions\n  ********************************************************************************/\n  get max(){\n    if( this.values.length === 1 ) return this.values[0]\n    return Math.max(...this.values)\n  }\n\n  get min(){\n    if( this.values.length === 1 ) return this.values[0]\n    return Math.min(...this.values)\n  }\n\n  get sum(){\n    if( this.values.length === 1 ) return this.values[0]\n    return this.values.reduce((a,b) => a + b, 0)\n  }\n\n  get mean(){\n    if( this.values.length === 1 ) return this[0]\n    return this.sum / this.values.length\n  }\n\n\n\n  /**\n   * Applies the function using the variable and the local series\n   * as inputs. this is intended for arithmetic Functions\n   * @param  {mixed} variable variable or series\n   * @param  {function} func     function to apply on the local and variable data\n   * @return {Series}            Series containing the resuting data\n   */\n  compute(variable, func){\n\n    var data = {...this}\n\n    var obj = Number(variable)\n\n    var key, value\n    \n    // apply the function on the objects sharing the same key\n    if( isNaN(obj) ){\n\n      for ([key, value] of Object.entries(variable)) {\n        var val = data[key]\n        if( val === undefined ) val = 0\n        data[key] = func( val, value)\n      }\n\n    // perform the function using the object value directly\n    }else{\n      for ([key, value] of Object.entries(data)) {\n        data[key] = func( value, obj)\n      }\n    }\n\n    // return the data as a series\n    return new Series({\n      object: data,\n      dtype: this.dtype,\n      dtypes: this.dtypes,\n      name: this.name,\n    })\n  }\n\n  /**\n   * Performs addition on the local Series with the variable\n   * data. The variable can be an integer, string, or another\n   * series object. When a Series is given, the data is added\n   * based on the index\n   * @param  {mixed} variable input data (supports mixed type)\n   * @return {Series}         Series containing the results\n   */\n  add( variable ){\n    return this.compute( variable, (x, y) => {return x + y} )\n  }\n\n  /**\n   * Performs subtraction on the local Series with the variable\n   * data. The variable can be an integer, string, or another\n   * series object. When a Series is given, the data is added\n   * based on the index\n   * @param  {mixed} variable input data (supports mixed type)\n   * @return {Series}         Series containing the results\n   */\n  sub( variable ){\n    return this.compute( variable, (x, y) => {return x - y} )\n  }\n\n  /**\n   * Performs multiplication on the local Series with the variable\n   * data. The variable can be an integer, string, or another\n   * series object. When a Series is given, the data is added\n   * based on the index\n   * @param  {mixed} variable input data (supports mixed type)\n   * @return {Series}         Series containing the results\n   */\n  multiply( variable ){\n    return this.compute( variable, (x, y) => {return x * y} )\n  }\n\n  /**\n   * Performs division on the local Series with the variable\n   * data. The variable can be an integer, string, or another\n   * series object. When a Series is given, the data is added\n   * based on the index\n   * @param  {mixed} variable input data (supports mixed type)\n   * @return {Series}         Series containing the results\n   */\n  divide( variable ){\n    return this.compute( variable, (x, y) => {return x/y} )\n  }\n\n  get react(){ return new ReactComponents(this) }\n\n}\n","var map = {\n\t\"./jsonArray/data\": 166,\n\t\"./jsonArray/data.json\": 166,\n\t\"./jsonArray/yield_timeframe\": 167,\n\t\"./jsonArray/yield_timeframe.json\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1225;","var map = {\n\t\"./Area/Simple\": 154,\n\t\"./Area/Simple.jsx\": 154,\n\t\"./Area/config\": 168,\n\t\"./Area/config.json\": 168,\n\t\"./Bar/Pareto\": 169,\n\t\"./Bar/Pareto.jsx\": 169,\n\t\"./Bar/Simple\": 170,\n\t\"./Bar/Simple.jsx\": 170,\n\t\"./Bar/Stacked\": 171,\n\t\"./Bar/Stacked.jsx\": 171,\n\t\"./Bar/config\": 172,\n\t\"./Bar/config.json\": 172,\n\t\"./Boxplot/AllSamples\": 173,\n\t\"./Boxplot/AllSamples.jsx\": 173,\n\t\"./Boxplot/AllSamplesGrouped\": 174,\n\t\"./Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./Boxplot/FilteredOverlay\": 175,\n\t\"./Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./Boxplot/Simple\": 176,\n\t\"./Boxplot/Simple.jsx\": 176,\n\t\"./Boxplot/config\": 177,\n\t\"./Boxplot/config.json\": 177,\n\t\"./Custom/HorizontalLine\": 178,\n\t\"./Custom/HorizontalLine.jsx\": 178,\n\t\"./Custom/Selection\": 179,\n\t\"./Custom/Selection.jsx\": 179,\n\t\"./Custom/Simple\": 180,\n\t\"./Custom/Simple.jsx\": 180,\n\t\"./Custom/Style\": 181,\n\t\"./Custom/Style.jsx\": 181,\n\t\"./Custom/Zoom\": 182,\n\t\"./Custom/Zoom.jsx\": 182,\n\t\"./Custom/ZoomSlider\": 183,\n\t\"./Custom/ZoomSlider.jsx\": 183,\n\t\"./Custom/ZoomVertical\": 184,\n\t\"./Custom/ZoomVertical.jsx\": 184,\n\t\"./Custom/config\": 185,\n\t\"./Custom/config.json\": 185,\n\t\"./Custom/onClick\": 186,\n\t\"./Custom/onClick.jsx\": 186,\n\t\"./Format/Legend\": 187,\n\t\"./Format/Legend.jsx\": 187,\n\t\"./Format/ToolboxExample\": 188,\n\t\"./Format/ToolboxExample.jsx\": 188,\n\t\"./Format/config\": 189,\n\t\"./Format/config.json\": 189,\n\t\"./Heatmap/Simple\": 190,\n\t\"./Heatmap/Simple.jsx\": 190,\n\t\"./Heatmap/config\": 191,\n\t\"./Heatmap/config.json\": 191,\n\t\"./Line/ErrorBars\": 192,\n\t\"./Line/ErrorBars.jsx\": 192,\n\t\"./Line/Highlight\": 193,\n\t\"./Line/Highlight.jsx\": 193,\n\t\"./Line/Simple\": 194,\n\t\"./Line/Simple.jsx\": 194,\n\t\"./Line/config\": 195,\n\t\"./Line/config.json\": 195,\n\t\"./Pie/FromSeries\": 196,\n\t\"./Pie/FromSeries.jsx\": 196,\n\t\"./Pie/Simple\": 197,\n\t\"./Pie/Simple.jsx\": 197,\n\t\"./Pie/config\": 198,\n\t\"./Pie/config.json\": 198,\n\t\"./RectGrid/Custom\": 199,\n\t\"./RectGrid/Custom.jsx\": 199,\n\t\"./RectGrid/Simple\": 200,\n\t\"./RectGrid/Simple.jsx\": 200,\n\t\"./RectGrid/config\": 201,\n\t\"./RectGrid/config.json\": 201,\n\t\"./Scatter/ColorBy\": 202,\n\t\"./Scatter/ColorBy.jsx\": 202,\n\t\"./Scatter/Labeled\": 203,\n\t\"./Scatter/Labeled.jsx\": 203,\n\t\"./Scatter/Simple\": 204,\n\t\"./Scatter/Simple.jsx\": 204,\n\t\"./Scatter/config\": 205,\n\t\"./Scatter/config.json\": 205,\n\t\"./Selection/SelectionScatter\": 206,\n\t\"./Selection/SelectionScatter.jsx\": 206,\n\t\"./Selection/config\": 207,\n\t\"./Selection/config.json\": 207,\n\t\"./Tooltips/config\": 208,\n\t\"./Tooltips/config.json\": 208,\n\t\"./Tooltips/tooltips\": 209,\n\t\"./Tooltips/tooltips.jsx\": 209,\n\t\"./config\": 210,\n\t\"./config.js\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1226;","var map = {\n\t\"./Accordian/AccordianTable\": 211,\n\t\"./Accordian/AccordianTable.jsx\": 211,\n\t\"./Accordian/config\": 212,\n\t\"./Accordian/config.json\": 212,\n\t\"./Filtering/ColumnFilters\": 213,\n\t\"./Filtering/ColumnFilters.jsx\": 213,\n\t\"./Filtering/config\": 214,\n\t\"./Filtering/config.json\": 214,\n\t\"./Header/MultiRow\": 215,\n\t\"./Header/MultiRow.jsx\": 215,\n\t\"./Header/NoHeader\": 216,\n\t\"./Header/NoHeader.jsx\": 216,\n\t\"./Header/config\": 217,\n\t\"./Header/config.json\": 217,\n\t\"./LazyLoading/LazyLoading\": 218,\n\t\"./LazyLoading/LazyLoading.jsx\": 218,\n\t\"./LazyLoading/config\": 219,\n\t\"./LazyLoading/config.json\": 219,\n\t\"./MultiRow/MultiRowCol\": 220,\n\t\"./MultiRow/MultiRowCol.jsx\": 220,\n\t\"./MultiRow/MultirowTable\": 221,\n\t\"./MultiRow/MultirowTable.jsx\": 221,\n\t\"./MultiRow/config\": 222,\n\t\"./MultiRow/config.json\": 222,\n\t\"./ParentFilterCol\": 223,\n\t\"./ParentFilterCol.jsx\": 223,\n\t\"./ParentSortCol\": 224,\n\t\"./ParentSortCol.jsx\": 224,\n\t\"./SpecialContent/Checkbox\": 225,\n\t\"./SpecialContent/Checkbox.jsx\": 225,\n\t\"./SpecialContent/config\": 226,\n\t\"./SpecialContent/config.json\": 226,\n\t\"./Style/AlternatingStyle\": 227,\n\t\"./Style/AlternatingStyle.jsx\": 227,\n\t\"./Style/SimpleTable\": 228,\n\t\"./Style/SimpleTable.jsx\": 228,\n\t\"./Style/TableFormat\": 229,\n\t\"./Style/TableFormat.jsx\": 229,\n\t\"./Style/config\": 230,\n\t\"./Style/config.json\": 230,\n\t\"./config\": 231,\n\t\"./config.js\": 231\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1227;","export default __webpack_public_path__ + \"static/media/BasicExample.ac843189.doc\";","export default __webpack_public_path__ + \"static/media/Pareto.cd10626d.doc\";","export default __webpack_public_path__ + \"static/media/Simple.22f2ef01.doc\";","export default __webpack_public_path__ + \"static/media/Stacked.e90bda8f.doc\";","export default __webpack_public_path__ + \"static/media/AllSamples.65e3f3d0.doc\";","export default __webpack_public_path__ + \"static/media/AllSamplesGrouped.000a7bde.doc\";","export default __webpack_public_path__ + \"static/media/FilteredOverlay.ba8f9fe2.doc\";","export default __webpack_public_path__ + \"static/media/Simple.f5d99b5d.doc\";","export default __webpack_public_path__ + \"static/media/HorizontalLine.073328a2.doc\";","export default __webpack_public_path__ + \"static/media/Selection.0e464e6c.doc\";","export default __webpack_public_path__ + \"static/media/Simple.c1b030ed.doc\";","export default __webpack_public_path__ + \"static/media/Style.c2631124.doc\";","export default __webpack_public_path__ + \"static/media/Zoom.7b8b8c56.doc\";","export default __webpack_public_path__ + \"static/media/ZoomSlider.a641aa20.doc\";","export default __webpack_public_path__ + \"static/media/ZoomVertical.b2040182.doc\";","export default __webpack_public_path__ + \"static/media/onClick.7d0c8dcd.doc\";","export default __webpack_public_path__ + \"static/media/Legend.1e5a1354.doc\";","export default __webpack_public_path__ + \"static/media/ToolboxExample.6df749d7.doc\";","export default __webpack_public_path__ + \"static/media/Simple.0503129c.doc\";","export default __webpack_public_path__ + \"static/media/ErrorBars.22ed4cde.doc\";","export default __webpack_public_path__ + \"static/media/Highlight.698f2683.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ac51f74c.doc\";","export default __webpack_public_path__ + \"static/media/FromSeries.88c26aa6.doc\";","export default __webpack_public_path__ + \"static/media/Simple.9d2dde0a.doc\";","export default __webpack_public_path__ + \"static/media/Custom.acf1fca4.doc\";","export default __webpack_public_path__ + \"static/media/Simple.bf61f36d.doc\";","export default __webpack_public_path__ + \"static/media/ColorBy.04153bcb.doc\";","export default __webpack_public_path__ + \"static/media/Labeled.bd68d6b7.doc\";","export default __webpack_public_path__ + \"static/media/Simple.c4815354.doc\";","export default __webpack_public_path__ + \"static/media/SelectionScatter.3f3afb0e.doc\";","export default __webpack_public_path__ + \"static/media/tooltips.341b00b4.doc\";","export default __webpack_public_path__ + \"static/media/AccordianTable.5508e2fc.doc\";","export default __webpack_public_path__ + \"static/media/AlternatingStyle.936da475.doc\";","export default __webpack_public_path__ + \"static/media/Checkbox.6ab7fc93.doc\";","export default __webpack_public_path__ + \"static/media/ColumnFilters.80e2471c.doc\";","export default __webpack_public_path__ + \"static/media/LazyLoading.2e5bb088.doc\";","export default __webpack_public_path__ + \"static/media/MultiRowCol.da539d43.doc\";","export default __webpack_public_path__ + \"static/media/MultirowTable.511b81c2.doc\";","export default __webpack_public_path__ + \"static/media/NoHeader.3bacab0b.doc\";","export default __webpack_public_path__ + \"static/media/ParentFilterCol.3faa02af.doc\";","export default __webpack_public_path__ + \"static/media/ParentSortCol.1aa7b0ae.doc\";","export default __webpack_public_path__ + \"static/media/SimpleTable.eb399c82.doc\";","export default __webpack_public_path__ + \"static/media/TableFormat.e04e2f73.doc\";","export default __webpack_public_path__ + \"static/media/install.727080ea.py\";","\n/// convert the column group object to an array of columns\nexport default function toColumns(columnGroups, header=false){\n\n  var columns = Object.values(columnGroups)\n\n  /// remove the string values (these will be merged across header rows)\n  if( header === true ) columns = columns.filter(r => typeof r !== 'string' )\n\n  // flatten the arrays into a single array\n  return columns.flat()\n}\n","/**\n * Column Filter\n * ==============\n *\n * adds a dropdown menu to the column header, that can\n * be used to filter the column contents\n *\n * @author Nik Sumikawa\n * @Date Dec 1, 2020\n *\n */\n\nimport React from 'react';\n\nimport _ from 'lodash'\n\nimport { Dropdown, Segment } from 'semantic-ui-react'\n\nexport default function ColumnFilter( props ){\n\n  const unique_values = props.data.unique(props.col, true)\n  const options = unique_values.map(r => {\n    return {\n      key:`${r}-${_.uniqueId()}`,\n      text:`${r}`,\n      value:`${r}`,\n      style: {fontSize:'12px', padding: '0px', margin:0}\n    }})\n\n  var headerCellOnClick = null\n  if( props.columnOnClick !== undefined ){\n    // persist the onClick inputs to avoid mutation\n    headerCellOnClick = () => props.columnOnClick({\n      col_name: props.col,\n      col_number: props.col_number\n    })\n  }\n\n\n  var columnFilterOnChange = null\n  if( props.columnFilterOnChange !== undefined ){\n    // persist the onClick inputs to avoid mutation\n    columnFilterOnChange = (e, val) => props.columnFilterOnChange({\n      col_name: props.col,\n      col_number: props.col_number,\n      value: val.value\n    })\n  }\n\n  var filterValues\n  if( props.filters !== undefined ){\n    filterValues = (props.filters\n      .filter(r => r.col_name === props.col)\n      .map(r => r.value)\n    )\n\n    if( filterValues.length === 0 ){\n      filterValues = undefined\n    }else{\n      filterValues = filterValues[0]\n    }\n  }\n\n\n  return(\n    <Segment.Group\n      key={`Header-SeggyGroup-${props.col}`}\n      raised={false}\n      compact\n\n      style={{\n        width:'100%',\n        padding:0,\n        margin:0,\n        boxShadow: 'none',\n        border: '0',\n        backgroundColor:'transparent'}}>\n\n      <Segment\n        key={`Header-Title-${props.col}`}\n        basic\n        textAlign='center'\n        onClick={headerCellOnClick}\n        style={{\n          padding:0,\n          margin:0,\n          backgroundColor:'transparent',\n          border: '0'}} >\n        {props.col}\n      </Segment>\n\n      <Segment\n        key={`Header-Filter-${props.col}`}\n        basic\n        textAlign='center'\n        style={{\n          padding:0,\n          margin:0,\n          backgroundColor:'transparent',\n          border: '0'}}\n        >\n\n        <Dropdown\n          key={`Header-Dropdown-${props.col}}`}\n          style={{\n            margin:0,\n            padding:'0',\n            maxWidth: '100px',\n            minHeight: '10px',\n            fontSize: '10px',\n            color: '#212121'\n          }}\n          placeholder={'filter...'}\n          multiple\n          selection\n          fluid\n          value={filterValues}\n          onChange={columnFilterOnChange}\n          options={options}\n          icon= {null}\n\n\n          />\n      </Segment>\n    </Segment.Group>\n\n\n  )\n}\n","/**\n * Table Cell Framework\n * =======================\n *\n * Component used to render table cells\n *\n *  @author Nik Sumikawa\n *  @date Sept 18, 2021\n */\n\n\n\n\nimport React from 'react';\n\nimport {HeaderCell} from '../../../framework/Components'\n\nimport ColumnFilter from '../Filter/ColumnFilter'\n\n\n/**\n * [Cell description]\n * @param       {string} col column name\n * @param       {integer} colNumber column number\n * @constructor\n */\nexport default function Cell( props ) {\n\n  var col = props.col\n\n  //map the column name when the mapping exists\n  if( props.columnNames !== undefined ){\n    if( Object.keys(props.columnNames).includes(col) ){\n      col = props.columnNames[col]\n    }\n  }\n\n  // generate the standard Header onClick function\n  var headerCellOnClick = null\n  if( props.columnOnClick !== undefined ){\n    headerCellOnClick = () => props.columnOnClick({\n      col_name: col,\n      colNumber: props.colNumber\n    })\n  }\n\n  // replace the column component with a filter when filters are specified\n  var ColComponent = col\n  if( props.columnFilterOnChange !== undefined ){\n    headerCellOnClick = null\n\n    ColComponent = (\n      <ColumnFilter\n        {...props}\n        key = {`Header-ColFilter-${col}`}\n        col = {col}\n        colNumber = {props.colNumber}\n        />\n    )\n  }\n\n  // sorted={value === props.sortBy ? direction : null}\n\n  //populate the header cell\n  return(\n    <HeaderCell\n      {...props.thProps}\n      style={{...{textAlign:'center'}, ...props.thStyle}}\n      component={props.th}\n      defaultValue = {ColComponent}\n      key = {`${props.tableName}-th-${props.colNumber}`}\n      onClick={headerCellOnClick}\n      />\n  )\n\n}\n","/**\n * Table Row Framework\n * =======================\n *\n * Component used to render table Rows\n *\n *  @author Nik Sumikawa\n *  @date Sept 18, 2021\n */\n\n\nimport React from 'react';\n\nimport {HeaderCell, Row} from '../../../framework/Components'\nimport Cell from '../Cell'\n\nexport default function ColumnRow( props ) {\n\n  var col_offset = 0\n  var colCells = []\n\n  // add a leading column when specific parameters are provided\n  // in the table object\n  if( props.accordian === true ){\n    colCells.push(\n      <HeaderCell\n        {...props.thProps}\n        style={{...{textAlign:'center'}, ...props.thStyle}}\n        component={props.th}\n        defaultValue = {''}\n        key = {`${props.tableName}-th-0-ColRow`}\n        />\n    )\n    col_offset = col_offset + 1\n  }\n\n\n  // when no columns are provided as props, pull them from the data source\n  var columns = props.columns\n  if( columns === undefined ) columns = props.table_data.columns\n\n\n  for (var i=0; i < columns.length; i++ ){\n      //retrieve the column name from the data structure\n      var col = columns[i]\n      const colNumber = i + col_offset\n\n      //populate the header cell\n      colCells.push(\n        <Cell\n          {...props}\n          col = {col}\n          colNumber = {colNumber}\n          key = {`${props.tableName}-th-${colNumber}-ColRow`}\n          />\n      )\n\n  }\n\n\n  // define the header row\n  return (\n    <Row\n      {...props.trProps}\n      style={{...{textAlign:'center'}, ...props.trStyle}}\n      component={props.tr}\n      defaultValue={colCells}\n      key={`${props.tableName}-headerrow`}\n      />\n  )\n\n\n\n}\n","/**\n * Table Column Framework\n * =======================\n *\n * Add functionality to the base table driver to allow for\n * column header generation\n *\n *  @author Nik Sumikawa\n *  @date Aug 4, 2020\n */\n\n\n\nimport React from 'react';\n\nimport {Header} from '../../../framework/Components'\nimport ColumnRow from './ColumnRow'\n\nexport default function DataFrameHeader( props ) {\n\n  // define the header row\n  const headerrow = <ColumnRow {...props} />\n\n  return (\n      <Header\n        {...props.theadProps}\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\n        component={props.thead}\n        defaultValue={headerrow}\n        key = {`${props.tableName}-thead`}\n        />\n    );\n\n}\n","/**\n * Table Row Framework\n * =======================\n *\n * Component used to render table Rows\n *\n *  @author Nik Sumikawa\n *  @date Sept 18, 2021\n */\n\n\nimport React from 'react';\n\nimport {HeaderCell, Row} from '../../../framework/Components'\nimport Cell from '../Cell'\n\nexport default function TableRow( props ) {\n\n  var col_offset = 0\n  var catCells = []\n\n  // add a leading column when specific parameters are provided\n  // in the table object\n  if( props.accordian === true ){\n    catCells.push(\n      <HeaderCell\n        {...props.thProps}\n        style={{...{textAlign:'center'}, ...props.thStyle}}\n        component={props.th}\n        defaultValue = {''}\n        key = {`${props.tableName}-th-0-CategoryRow`}\n        />\n    )\n    col_offset = col_offset + 1\n  }\n\n\n  // when no columns are provided as props, pull them from the data source\n  var categories = Object.keys(props.columnGroups)\n\n  for (var i=0; i < categories.length; i++ ){\n      //retrieve the column name from the data structure\n      var cat = categories[i]\n      const colNumber = i + col_offset\n\n      // determine the col/row spanning based on the col group types\n      var thProps = {...props.thProps, ...{}}\n      if( typeof props.columnGroups[cat] === 'string' ){\n        thProps['rowSpan'] = 2\n      } else{\n        thProps['colSpan'] = props.columnGroups[cat].length\n      }\n\n      //populate the header cell\n      catCells.push(\n        <Cell\n          {...props}\n          col = {cat}\n          colNumber = {colNumber}\n          thProps={thProps}\n          key = {`${props.tableName}-th-${colNumber}-CategoryRow`}\n          />\n      )\n\n  }\n\n\n  // define the header row\n  return (\n    <Row\n      {...props.trProps}\n      style={{...{textAlign:'center'}, ...props.trStyle}}\n      component={props.tr}\n      defaultValue={catCells}\n      key={`${props.tableName}-CategoryRow`}\n      />\n  )\n\n\n\n}\n","/**\n * Table Column Framework\n * =======================\n *\n * Add functionality to the base table driver to allow for\n * column header generation\n *\n *  @author Nik Sumikawa\n *  @date Aug 4, 2020\n */\n\n\n\nimport React from 'react';\n\nimport toColumn from '../../utilities/ColGroupsToCol'\nimport { Table as SemanticTable } from 'semantic-ui-react'\n\n// import {Header} from '../../../framework/Components'\nimport ColumnRow from '../SingleRow/ColumnRow'\nimport CategoryRow from './CategoryRow'\n\nexport default function MultiRowHeader( props ) {\n\n  const columns = toColumn(props.columnGroups, true)\n\n  return (\n      <SemanticTable.Header>\n        <CategoryRow\n          key={`${props.tableName}-CombinedRow1`}\n          {...props}\n          />\n\n        <ColumnRow\n          key={`${props.tableName}-CombinedRow2`}\n          {...props}\n          columns = {columns}\n          />\n      </SemanticTable.Header>\n\n    );\n\n}\n","/**\n * Table Column Framework\n * =======================\n *\n * Add functionality to the base table driver to allow for\n * column header generation\n *\n *  @author Nik Sumikawa\n *  @date Aug 4, 2020\n */\n\n\n\nimport React from 'react';\n\nimport SingleRow from './SingleRow'\nimport MultiRow from './MultiRow'\n// import TableRow from './Row'\n\nexport default function DataFrameHeader( props ) {\n\n  // do not render header when visible is turned off\n  if( props.showHeader === false ) return null\n\n\n  if( props.columnGroups !== undefined ) return <MultiRow {...props}/>\n\n  // // return the standard single row\n  return <SingleRow {...props}/>\n\n}\n","/**\n * Table Column Framework\n * =======================\n *\n * Add functionality to the base table driver to allow for\n * column header generation\n *\n *  @author Nik Sumikawa\n *  @date Aug 4, 2020\n */\n\n\n\nimport React from 'react';\n\nimport {HeaderCell, Header, Row} from '../../framework/Components'\n\n\n\n/**\n * Returns the Table Header for data in Series Format\n * @param       {Object} props Parameter object\n * @constructor\n */\nexport default function SeriesHeader( props ) {\n\n  // do not render header when visible is turned off\n  if( props.showHeader === false ) return null\n\n  var data = props.table_data\n\n  // attempt to pull the name out of the series. Default to\n  // value when it's not available\n  var name = data.name\n  if( name === undefined ) name = 'value'\n\n  var row = []\n  const columns = ['', name]\n\n  for (var i=0; i < columns.length; i++ ){\n      //retrieve the column name from the data structure\n      var col = columns[i]\n\n\n      var headerCellOnClick = null\n      if( props.columnOnClick !== undefined ){\n        // persist the onClick inputs to avoid mutation\n        const col_name = col\n        const col_number = i\n        headerCellOnClick = () => props.columnOnClick({\n          col_name: col_name,\n          col_number: col_number\n        })\n      }\n\n      //populate the header cell\n      row.push(\n        <HeaderCell\n          {...props.thProps}\n          style={{...{textAlign:'center'}, ...props.thStyle}}\n          component={props.th}\n          defaultValue = {col}\n          key = {`${props.tableName}-th-${i}`}\n          onClick={headerCellOnClick}\n          />\n      )\n\n  }\n\n  // define the header row\n  const headerrow = (\n    <Row\n      {...props.trProps}\n      style={{...{textAlign:'center'}, ...props.trStyle}}\n      component={props.tr}\n      defaultValue={row}\n      key={`${props.tableName}-headerrow`}\n      />\n  )\n\n\n  return (\n      <Header\n        {...props.theadProps}\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\n        component={props.thead}\n        defaultValue={headerrow}\n        key = {`${props.tableName}-thead`}\n        />\n    );\n\n}\n","/**\n * Cells\n * =================\n * Routines for generating different Cell formats\n *\n * :Author: Nik Sumikawa\n * :Date: Jan 13, 2020\n */\n\n\n\nimport React from 'react';\n\n\nimport {fillAndEdge} from '../../../colors/Colors'\n\n\n\n\n/**\n * Returns a svg object containing a colored square\n * @param       {string} colorHex string containing the hex color value\n * @constructor\n */\nexport default function coloredSquare( colorHex, props ){\n\n  if( colorHex === undefined ) colorHex = '#B0B0B0'\n\n  const colors = fillAndEdge(colorHex)\n\n  return(\n    <svg preserveAspectRatio=\"xMinYMin meet\"\n      viewBox=\"0, 0, 40, 20\"\n      transform=\"scale(1, -1)\"\n      style={{\n        display: \"inline-block\",\n        width: \"40px\",\n        height: '100%',\n        overflow: \"visible\",\n      }}>\n\n      <rect\n        x=\"0\"\n        y=\"0\"\n        width=\"40\"\n        height=\"100%\"\n        stroke={colors.edge}\n        strokeWidth=\"1\"\n        fill={colors.fill}\n        />\n\n    </svg>\n  )\n\n\n}\n","/**\n * Cells\n * =================\n * Routines for generating different Cell formats\n *\n * :Author: Nik Sumikawa\n * :Date: Jan 13, 2020\n */\n\n\n/**\n * returns the onClick function when specified. Defaults to undefined\n * @param  {object} json_table  jsonTable object\n * @param  {string} col         column name\n * @param  {integer} row        row number\n * @return {function}           onClick function\n */\nexport default function onClickFunc( props ){\n\n  var onClick\n\n  // select the onClick function when provided globally\n  if( props.onClick !== undefined ){\n    onClick = () => props.onClick({\n      row: props.row_idx,\n      col: props.col,\n      value: props.value,\n      row_data: props.row\n      })\n  }\n\n  // extract the onClick function for the specific cell\n  if( props.cellOnClick !== undefined ){\n\n    // add the onClick function when one exists for the column\n    const onClickColumns = Object.keys(props.cellOnClick)\n    if( onClickColumns.includes(props.col) ){\n      onClick = () => props.cellOnClick[props.col]({\n        row: props.row_idx,\n        col: props.col,\n        value: props.value,\n        row_data: props.row\n        })\n    }\n  }\n\n  return onClick\n}\n","/**\n * Cells\n * =================\n * Routines for generating different Cell formats\n *\n * :Author: Nik Sumikawa\n * :Date: Jan 13, 2020\n */\n\n\n\nimport React from 'react';\n\nimport {Button, Image, Icon, Checkbox} from '../../framework/Components'\n\nimport valueToString from '../../../../data_types/format/valueToString'\n\nimport booleanCircle from './booleanCircle'\nimport coloredSquare from './coloredSquare'\nimport onClickFunc from './onClickFunc'\n\n\nexport default function cellType( props ) {\n  // populute each cell based on the specified column type. When no\n  // column type is provided, default to text format\n\n\n  const format = new valueToString()\n\n  //add the onclick fundtion. Default to do nothing when the function does not exist\n  var cellOnClick = onClickFunc( props )\n  var componentOnClick = onClickFunc( props )\n\n  var value = props.value\n  var cellContent\n\n  switch( props.dtype ){\n\n    case 'button':\n      cellOnClick = null\n\n      cellContent = (\n        <Button\n          {...props.buttonProps}\n          style={{...{textAlign:'center'}, ...props.buttonStyle}}\n          component={props.button}\n          key={`${props.tableName}-button-${props.col}-${props.row_idx}`}\n          defaultValue={value}\n          onClick={componentOnClick}\n          />\n      )\n      break;\n\n    case 'image':\n      cellOnClick = null\n      cellContent = (\n        <Image\n          {...props.imageProps}\n          style={{...{textAlign:'center'}, ...props.imageStyle}}\n          component={props.image}\n          key={`${props.tableName}-image-${props.col}-${props.row_idx}`}\n          defaultValue={value}\n          onClick={componentOnClick}\n          />\n      )\n      break;\n\n    case 'icon':\n      cellOnClick = null\n      cellContent = (\n        <Icon\n          {...props.IconProps}\n          key={`${props.tableName}-icon-${props.col}-${props.row_idx}`}\n          style={{...{textAlign:'center'}, ...props.iconStyle}}\n          component={props.icon}\n          name={value}\n          onClick={componentOnClick}\n          />\n      )\n      break;\n\n    case 'checkbox':\n      cellOnClick = null\n      cellContent = (\n        <Checkbox\n          {...props.CheckboxProps}\n          key={`${props.tableName}-checkbox-${props.col}-${props.row_idx}`}\n          style={{...{textAlign:'center'}, ...props.checkboxStyle}}\n          component={props.checkbox}\n          checked={value}\n          onClick={componentOnClick}\n          />\n      )\n      break;\n\n    // case 'function':\n    //   return props.table.function[col_name](props)\n\n    case 'boolean':\n      cellOnClick = null\n      cellContent = booleanCircle(value, componentOnClick, props)\n      break\n\n    case 'square':\n      cellOnClick = null\n      cellContent = coloredSquare(value, componentOnClick, props)\n      break\n\n    case 'hexcolor':\n      cellOnClick = null\n      cellContent = coloredSquare(value, componentOnClick, props)\n      break\n\n    case 'text':\n      cellContent = <p style={{whiteSpace:'pre'}}>{value}</p>\n      break\n\n    case 'float':\n      cellContent = format.toString(value, props.dtype)\n      break\n\n    case 'percent':\n    case 'percentage':\n      cellContent = format.toString(value, props.dtype)\n      break\n\n    case 'scientific':\n      cellContent = format.toString(value, props.dtype)\n      break\n\n    case 'datetime':\n      cellContent = format.toString(value, props.dtype)\n      break\n\n    case 'table':\n      cellContent = value\n      break\n\n    default:\n      cellContent = <p style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}}>{value}</p>\n  }\n\n\n  return {\n    cellContent: cellContent,\n    cellOnClick: cellOnClick\n  }\n\n}\n","/**\n * Cells\n * =================\n * Routines for generating different Cell formats\n *\n * :Author: Nik Sumikawa\n * :Date: Jan 13, 2020\n */\n\n\n\nimport React from 'react';\n\n\nimport {booleanColor} from '../../../colors/Colors'\n\n\n/**\n * Creates a green or red circle based on the value of the cell\n * @constructor\n */\nexport default function booleanCircle(value, onClick, props){\n\n  var colors = booleanColor( value )\n\n  var radius = 20\n  if( props.radius !== undefined ) radius = props.radius\n\n  return (\n\n      <svg preserveAspectRatio=\"xMinYMin meet\"\n           viewBox={`0, 0, ${radius}, ${radius}`}\n           transform=\"scale(1, -1)\"\n           style={{display: \"inline-block\",\n                   width: `${radius+4}px`,\n                   overflow: \"visible\",\n           }}>\n\n        <circle\n          cx={`${radius/2 - 2}`}\n          cy={`${radius/2 - 2}`}\n          r={`${radius/2}`}\n          stroke={colors.edge}\n          strokeWidth=\"1\"\n          fill={colors.fill}\n          onClick={onClick}\n          />\n\n       </svg>\n )\n\n\n}\n","/**\n * Cells\n * =================\n * Routines for generating different Cell formats\n *\n * :Author: Nik Sumikawa\n * :Date: Jan 13, 2020\n */\n\n\n\nimport React from 'react';\n\n\nimport {Cell as TableCell} from '../../framework/Components'\n\nimport cellType from './cellType'\n\n\nexport default function Cell( props ) {\n  // populute each cell based on the specified column type. When no\n  // column type is provided, default to text format\n\n  const cell = cellType(props)\n\n  var style = {textAlign:'center'}\n\n  // the background color can be provided as a field of table object.\n  // The background color parameter requires a json array with the\n  // same fields as the data table. What would normally contain the\n  // data now contains colors\n  if( props.cellBackgroundColor !== undefined ){\n    try{\n      const color = props.cellBackgroundColor[props.row_idx][props.col]\n      if( color !== undefined ) style['backgroundColor'] = color\n    }catch{}\n  }\n\n  if( props.cellStyle !== undefined ){\n    try{\n      style = {\n        ...style,\n        ...props.cellStyle[props.row_idx][props.col]\n\n      }\n    }catch{}\n  }\n\n  return (\n    <TableCell\n      {...props.tdProps}\n      style={{...props.tdStyle, ...style}}\n      component={props.td}\n      key = {`${props.tableName}-cell-${props.col}-${props.row_idx}`}\n      onClick={cell.cellOnClick}\n      defaultValue= {cell.cellContent}\n      />\n  )\n\n}\n","/**\n * Table Body\n * ================\n *\n * React components used to generate the Table Body\n *\n *  @author Nik Sumikawa\n *  @date Aug 27, 2020\n */\n\n\n\nimport React from 'react';\n\nimport Cell from '../cell'\nimport {Row as TableRow} from '../../framework/Components'\n\n\n\n\nexport default function Row( props ) {\n\n    const row_data = props.table_data[props.row_idx]\n    const row = []\n    for (var i=0; i < props.columns.length; i++ ){\n      const col = props.columns[i]\n\n      var tdProps = {...props.tdProps, ...{}}\n      if( props.col_span !== undefined ) tdProps['colSpan'] = props.col_span[col]\n      if( props.row_span !== undefined){\n        if (Object.keys(props.row_span).includes(col)) tdProps['rowSpan'] = props.row_span[col]\n      }\n\n\n      row.push(\n        <Cell\n          {...props}\n          row={row_data}\n          value={row_data[col]}\n          dtype={props.table_data.dtypes[col]}\n          key={`${props.tableName}-cell-${props.row_idx}-${i}`}\n          col = {col}\n          tdProps={tdProps}\n          />\n      )\n    }\n\n\n    // define the rowOnClick function to standardize the returned data\n    var rowOnClick = null\n    if( props.rowOnClick !== undefined ){\n      rowOnClick = () => {\n        props.setSelectedRow( props.row_idx );\n        props.rowOnClick({\n          row: props.row_idx,\n          row_data: row_data\n        })\n      }\n    }\n\n\n\n    // set the background color when the row is selected\n    var rowStyle = {textAlign:'center'}\n\n    if((props.alternateStyle === true)&(props.row_idx % 2 === 0) ){\n      rowStyle['backgroundColor'] = '#f6fcfe'\n    }\n\n    // Row background color allows for the control of the background\n    // color of multiple rows based on the index number\n    if( props.rowColor !== undefined ){\n      const rows = Object.keys(props.rowColor)\n      const idx = row_data.__index__.toString()\n      if( rows.includes(idx) ){\n        rowStyle = {textAlign:'center', backgroundColor: props.rowColor[idx]}\n      }\n    }\n\n    // Add custom row style\n    if( props.rowStyle !== undefined ){\n      if( props.rowStyle.length > props.row_idx ){\n        rowStyle = {...rowStyle, ...props.rowStyle[props.row_idx]}\n      }\n    }\n\n    // Row background color allows for the control of the background\n    // color of multiple rows based on the index number\n    if( props.rowBackgroundColor !== undefined ){\n      if( props.rowBackgroundColor.includes(row_data.__index__) ){\n        rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\n      }\n    }\n\n    if( props.row_idx === props.selectedRow ){\n      rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\n    }\n\n    // return the cell content not wrapped in a row element. This\n    // is needed for row extensions such as the accordian rows.\n    if( props.cellContentOnly === true ){\n      return row\n    }\n\n\n    return (\n      <TableRow\n        {...props.trProps}\n        style={{...rowStyle, ...props.trStyle}}\n        component={props.tr}\n        key={`${props.tableName}-row--${props.row_idx}--${props.multirow_idx}`}\n        onClick={rowOnClick}\n        defaultValue={row}\n        />\n    )\n}\n","/**\n * Table Body\n * ================\n *\n * React components used to generate the Table Body\n *\n *  @author Nik Sumikawa\n *  @date Aug 27, 2020\n */\n\n\n\nimport React from 'react';\n\n\nimport Cell from '../cell'\nimport {Row as TableRow} from '../../framework/Components'\n\n\n/**\n * Returns a Row of Cell components based on data Formatted\n * as a Series\n * @param       {Object} props data and style parameters\n */\nexport default function SeriesRow( props ) {\n\n  const index = props.table_data.index\n  const values = props.table_data.values\n\n  // format the row data to return in onClick functions\n  const row_data = {\n    __index__: index[props.row_idx],\n    __value__: values[props.row_idx],\n  }\n\n  // default the data type unless the table contains a datatype array\n  // which is provided manually for table customization\n  var dtype = props.table_data.dtype\n  if( props.table_data.dtypes !== undefined ) dtype = props.table_data.dtypes[row_data['__index__']]\n\n  const row = [\n    <Cell\n      {...props}\n      row={row_data}\n      value={row_data['__index__']}\n      dtype={'string'}\n      key={`${props.tableName}-cell-${props.row_idx}-${0}`}\n      col = {'__index__'}\n      />,\n\n    <Cell\n      {...props}\n      row={row_data}\n      value={row_data['__value__']}\n      dtype={dtype}\n      key={`${props.tableName}-cell-${props.row_idx}-${1}`}\n      col = {'__value__'}\n      />\n\n  ]\n\n\n\n  // define the rowOnClick function to standardize the returned data\n  var rowOnClick = null\n  if( props.rowOnClick !== undefined ){\n    rowOnClick = () => props.rowOnClick({\n      row: props.row_idx,\n      row_data: row_data\n    })\n  }\n\n  return (\n    <TableRow\n      {...props.trProps}\n      style={{...{textAlign:'center'}, ...props.trStyle}}\n      component={props.tr}\n      key={`${props.tableName}-row--${props.row_idx}`}\n      onClick={rowOnClick}\n      defaultValue={row}\n      />\n  )\n}\n","/**\n * Table Body\n * ================\n *\n * React components used to generate the Table Body\n *\n *  @author Nik Sumikawa\n *  @date Aug 27, 2020\n */\n\n\n\nimport React, {useState} from 'react';\n\nimport Cell from '../cell'\nimport {Row as TableRow} from '../../framework/Components'\n\nimport Row from './Row'\n\n/**\n * Accordian Tables are available after performing the groupby\n * function, where both metadata and the json object are available\n * based on the split.\n *\n * The accordian table shows the data based on the split described\n * by the parent table\n * @param       {[type]} props [description]\n * @constructor\n */\nexport default function AccordianRow( props ){\n\n  // state variable to track the visibility state of the accordian\n  const [visible, setVisible] = useState(false)\n\n  const row_data = props.table_data[props.row_idx]\n\n  // map the rowOnClick function to cellonClick to\n  // disable the onClick function of the icon row\n  var cellOnClick = {}\n  if( props.rowOnClick !== undefined ){\n    for( var i=0; i < props.columns.length; i++ ){\n      cellOnClick[props.columns[i]] = () => {\n        props.setSelectedRow( props.row_idx );\n        props.rowOnClick({\n          row: props.row_idx,\n          row_data: row_data,\n        })\n      }\n    }\n  }\n\n  // console.log( props.selectedRow, props)\n  // set the background color when the row is selected\n  var rowStyle = {textAlign:'center'}\n  if( props.row_idx === props.selectedRow ){\n    rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\n  }\n\n\n\n  var AccordianTable = row_data.json_obj\n\n  // when provided, apply the the function to transform the subgroup\n  if( props.accordianFunc !== undefined) AccordianTable = props.accordianFunc(AccordianTable)\n\n  var columns = AccordianTable.columns\n  if( props.accordianColumns !== undefined ) columns = props.accordianColumns\n\n  // select an icon based on the visible flag\n  var iconOnClick = () => {setVisible(!visible)}\n  var icon = 'caret right'\n  var iconColor = 'black'\n  if( visible === true ) icon = 'caret down'\n  if( AccordianTable.length === 0 ){\n    icon = 'ellipsis horizontal'\n    iconColor = '#D0D0D0'\n    iconOnClick = () => {console.log('no data to unfold')}\n  }\n\n  var AccordianComponent\n  if( props.accordianComponent !== undefined ){\n\n    AccordianComponent = (\n      <props.accordianComponent\n        {...props}\n        row={props.row_idx}\n        row_data={row_data}\n        />\n    )\n\n  }else{\n\n    AccordianComponent = (\n      <AccordianTable.react.semanticUI.Table\n        tableName={`accordianTable - ${props.tableName} - ${props.row_idx}`}\n        tableStyle={{padding:0, margin:0}}\n        columns={columns}\n        thStyle={{margin:0, padding:0}}\n        tdStyle={{margin:0, padding:0}}\n        showHeader={props.accordianHeader}\n        radius={10}\n        {...props.accordianProps}\n        />\n    )\n  }\n\n\n  return (\n    <>\n      <TableRow\n        {...props.trProps}\n        style={{...rowStyle, ...props.trStyle}}\n        component={props.tr}\n        key={`${props.tableName}-row--${props.row_idx}`}\n        defaultValue={\n          <>\n            <Cell\n              {...props}\n              tdProps={{rowSpan:(visible) ? 2 : 1}}\n              style={{maxWidth:'50px'}}\n              row={props.row_idx}\n              value={icon}\n              dtype={'icon'}\n              key={`${props.tableName}-accordian-control-${props.row_idx}`}\n              col = {'accordianEnable'}\n              onClick={iconOnClick}\n              iconStyle={{color:iconColor}}\n              />\n\n            <Row\n              {...props}\n              cellContentOnly={true}\n              cellOnClick={cellOnClick}\n              />\n          </>\n        }\n        />\n\n\n\n        { visible ?\n          <TableRow\n            {...props.trProps}\n            component={props.tr}\n            key={`${props.tableName}-accordian-row-${props.row_idx}`}\n            defaultValue={\n              <Cell\n                {...props}\n                tdProps={{colSpan:props.columns.length}}\n                tdStyle={{margin:0, padding:0}}\n                row={props.row_idx}\n                dtype={'table'}\n                key={`${props.tableName}-accordian-dropodwn-${props.row_idx}-${-1}`}\n                col = {'accordianTable'}\n                value={AccordianComponent}\n                />\n\n\n            }\n            />\n          : null\n        }\n\n\n    </>\n  )\n\n}\n","/**\n * Table Body\n * ================\n *\n * React components used to generate the Table Body\n *\n *  @author Nik Sumikawa\n *  @date Aug 27, 2020\n */\n\n\n\n\nimport Row from './Row'\n\n\nexport default function MultiRow( props ) {\n\n  const modProps = rowSpan(props)\n\n  var MultiRow = [Row(modProps)]\n\n  for( var i=0; i < props.multirow.length; i++ ){\n    const columns = props.multirow[i]\n\n    MultiRow.push(\n      Row({\n        ...props,\n        ...{\n          columns: columns,\n          multirow_idx: i,\n          col_span: colSpan(props, columns),\n          tdStyle: {\n            ...{textAlign: 'left'},\n            ...props.tdStyle,\n            ...props.multirowStyle\n          }\n        }\n      })\n    )\n\n  }\n\n  return MultiRow\n}\n\n\nfunction colSpan( props, columns ){\n\n  var span_len = props.columns.length\n  if( props.multirowSpan !== undefined ) span_len = span_len - props.multirowSpan.length\n\n  // compute the lower bound on column span width\n  const span = Math.ceil(span_len/columns.length)\n\n  var colSpan = {}\n  for( var i=0; i < columns.length; i++ ){\n    colSpan[columns[i]] = span\n\n    // shrink the last column when span does not align properly\n    if(  (columns.length - i*span) < 0 ){\n      colSpan[columns[i]] = columns.length - (i-1)*span\n    }\n  }\n\n  return colSpan\n\n}\n\nfunction rowSpan( props ){\n\n  var modProps = {...props, ...{}}\n\n\n  if( props.multirowSpan !== undefined ){\n\n    // const multiRowCol = [...new Set(props.multirowSpan.filter(x => props.columns.includes(x)))]\n    // const colDiff = [...new Set(props.multirowSpan.filter(x => !props.columns.includes(x)))]\n    //\n    // modProps.columns = multiRowCol.concat(colDiff)\n\n    modProps['row_span'] = {}\n    props.multirowSpan.map(r => modProps['row_span'][r] = props.multirow.length + 1 )\n  }\n\n  return modProps\n\n}\n","/**\n * Table Body\n * ================\n *\n * React components used to generate the Table Body\n *\n *  @author Nik Sumikawa\n *  @date Aug 27, 2020\n */\n\n\n\nimport React, {useState} from 'react';\n\nimport Series from '../../../../Series'\n\nimport {Body, Row as TableRow} from '../../framework/Components'\n\nimport Row from './Row'\nimport SeriesRow from './SeriesRow'\nimport AccordianRow from './AccordianRow'\nimport MultiRow from './MultiRow'\n\nexport default function TableBody( props ) {\n\n  const [selectedRow, setSelectedRow] = useState(props.selectedRow)\n  const [onHover, setOnHover] = useState(false)\n\n  // default to using the DataFrame Row Format\n  var Component = Row\n  var rows = props.table_data.length\n\n  // when lazy loading is implemented, limited the number of rows to render\n  if( (props.lazyLoading === true)&(props.renderedRows < rows) ){\n    rows = props.renderedRows\n  }\n\n  // overwrite the component with Accordian rows when specified\n  if( props.accordian === true ) Component = AccordianRow\n\n  // change component types when the data is of series type\n  if( props.table_data instanceof Series ){\n    Component = SeriesRow\n    rows = props.table_data.values.length\n  }\n\n  // change component types to MultiRow when the multirow props are present\n  if( props.multirow !== undefined ){\n    Component = MultiRow\n  }\n\n  const body = []\n  for (var i=0; i < rows; i++ ){\n\n    body.push(\n      <Component\n        {...props}\n        key={`${props.tableName}-Row-${i}`}\n        row_idx = {i}\n        selectedRow = {selectedRow}\n        setSelectedRow = {(value) => setSelectedRow(value)}\n        />\n    )\n  }\n\n  // add a row to show more rows, when there are more rows to show\n  if( (props.lazyLoading === true)&(props.renderedRows < props.table_data.length) ){\n    body.push(\n      <TableRow\n        {...props.trProps}\n        style={{...props.trStyle}}\n        component={props.tr}\n        key={`${props.tableName}-row--lazyloading`}\n        onClick={() => {\n          const step = (props.lazyLoadingStep === undefined ? 100 : props.lazyLoadingStep)\n          props.setRenderedRows(props.renderedRows + step)\n        }}\n        defaultValue={\n          <td\n            onMouseOver={()=>setOnHover(true)}\n            onMouseOut={()=>setOnHover(false)}\n            style={{backgroundColor: (onHover ? '#AFEEEE' : '#F0FFFF')}}\n            colSpan={props.columns.length}>\n            <h3>show more rows</h3>\n          </td>\n        }\n        />\n    )\n  }\n\n  return (\n    <Body\n      {...props.bodyProps}\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\n      component={props.body}\n      key={`${props.tableName}-body`}\n      defaultValue={body}\n      />\n  )\n\n\n}\n","/**\n * Semantic UI Framework\n * =======================\n *\n * Extends the jsonArray functionality to include specific\n * functions for formatting semantic UI components\n *\n * :Author: Nik Sumikawa\n * :Date: Aug 4, 2020\n */\n\n\nimport React, {useState} from 'react';\n\nimport jsonArray from '../../../jsonArray'\nimport Series from '../../../Series'\n\nimport ReactLibraryFramework from '../ReactLibraryFramework'\n\nimport toColumn from './utilities/ColGroupsToCol'\nimport {Table as TableComponent} from '../framework/Components'\nimport {SeriesHeader, DataFrameHeader} from './header'\nimport TableBody from './body'\n\n\n/**\n * Integrated table component  build into the jsonArray\n * @param       {String} props.tableName\n * @param       {Component} props.table base html component that can be overwritten by Framework component\n * @param       {Component} props.tr    base html component that can be overwritten by Framework component\n * @param       {Component} props.td    base html component that can be overwritten by Framework component\n * @param       {Component} props.th    base html component that can be overwritten by Framework component\n * @param       {Component} props.body  base html component that can be overwritten by Framework component\n * @param       {Component} props.button base html component that can be overwritten by Framework component\n * @param       {function} props.columnOnClick  function exectued when a column is selected\n * @param       {function} props.rowOnClick     function exectued when a row is selected\n * @param       {function} props.cellOnClick    function exectued when a cell is selected\n * @param       {Boolean} props.accordian  Not implemented\n * @param       {Boolean} props.accordianHeader  Not implemented\n * @param       {Boolean} props.accordianColumns  Not implemented\n * @param       {Boolean} props.accordianFunc  Not implemented\n * @param       {Boolean} props.showHeader when True, the table header will be shown\n * @param       {Boolean} props.sortable   When True, the table can be sorted by the columns\n * @param       {Array} props.columns     Array of column names\n * @param       {Array} props.columnNames Array of column names\n * @param       {String} props.sortBy     column name that will be presorted\n * @param       {String} props.sortAscending  sort column direction\n * @param       {boolean} props.lazingLoading  when True, only part of the table will be rendered with the ability to render in steps (lazy loading)\n * @param       {Integer} props.lazyLoadingStart  Number of rows to render on init\n * @param       {Integer} props.lazyLoadingStep   Number of rows to add when rerendering\n * @param       {Array} props.rowBackgroundColor set the background color of multiple rows based on the index number\n * @constructor\n */\nexport default class Table extends ReactLibraryFramework{\n  constructor(data){\n    super(data)\n\n    // must bind this to all internal functions or they will be\n    // lost when rendering via react\n    this.Table = this.Table.bind(this)\n  }\n\n  Table( props ){\n\n    // Render the table with a Series data structure\n    if( this.data instanceof Series ){\n      return SeriesTable( this.props(props) )\n    }\n\n    // default to render the table as a DataFrame type\n    return Render( this.props(props) )\n  }\n\n}\n\n\n\n\n/**\n * Renders the table based on the data and parameters specified in the\n // json table attribute. This was moved to it's own function in order\n // to be complient with React's requirement for useState functionality\n // to be implemented within a function\n * @param       {[type]} props [description]\n * @constructor\n */\nexport function Render( props ){\n\n  // internal variable to tracke the sorted column and sort order\n  const [sortBy, setSortBy] = useState(props.sortBy)\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\n  const [filters, setFilters] = useState(props.filters)\n  const [renderedRows, setRenderedRows] = useState((props.lazyLoadingStart === undefined) ? 100 : props.lazyLoadingStart)\n\n  // cast the data to a json_array data type\n  var table_data = props.data\n  if( !(table_data instanceof jsonArray) ){\n    table_data = new jsonArray(table_data)\n  }\n\n  // pull the column names from the props when available. Default\n  // to using all columns in the DataFrame\n  var columns = props.columns\n  if( props.columnGroups !== undefined) columns = toColumn(props.columnGroups, false)\n  if( columns === undefined ) columns = table_data.columns\n\n  // define the table name which will be used to define the keys\n  var tableName = props.tableName\n  if( tableName === undefined ) tableName = 'Table'\n\n  // enable the column onClick to track the selected column, which will\n  // be sorted when enabled\n  var columnOnClick = props.columnOnClick\n  if( props.sortable === true ){\n      columnOnClick = (content) => {\n        setSortBy( content.col_name );\n        setSortAscending( !sortAscending );\n      }\n  }\n\n  // enable the column onClick to track the selected column, which will\n  // be sorted when enabled\n  var columnFilterOnChange = props.columnFilterOnChange\n  if( props.filterable === true ){\n      columnFilterOnChange = (content) => {\n        var temp = filters\n        // manage initial conditions\n        if( temp === undefined ) temp = []\n\n        temp = temp.filter(r => r.col_name !== content.col_name)\n\n        // only push valid values (accounts for dropdown clearing)\n        if( content.value.length > 0 ) temp.push( content )\n        setFilters( temp )\n      }\n  }\n\n  // sort the data based on the column name specified in the parameters\n  // or the internal state variable when selection is enabled\n  var sortedColumn = sortBy\n  if( sortedColumn !== undefined ){\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\n  }\n\n  // filter Table based on the values stored in the filter object array\n  if( filters !== undefined ){\n    for( var i=0; i < filters.length; i ++ ){\n\n      const filt = filters[i]\n      if( !(columns.includes(filt.col_name)) ) continue\n      if( filt.value.length === 0 ) continue\n\n      table_data = table_data.filter(r => filt.value.includes(r[filt.col_name].toString()) )\n    }\n    // console.log( table_data)\n  }\n\n  return (\n    <TableComponent\n      {...props.bodyProps}\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\n      component={props.table}\n      key={`${tableName}-table`}\n      defaultValue={[\n\n        <DataFrameHeader\n          {...props}\n          key={`${tableName}-TableHeader`}\n          tableName = {tableName}\n          table_data={table_data}\n          columns = {columns}\n          filters = {filters}\n          columnOnClick = {columnOnClick}\n          columnFilterOnChange = {columnFilterOnChange}\n          />,\n\n        <TableBody\n          {...props}\n          key={`${tableName}-TableBody`}\n          tableName = {tableName}\n          table_data={table_data}\n          columns = {columns}\n          renderedRows = {renderedRows}\n          setRenderedRows = {setRenderedRows}\n          />\n        ]}\n      />\n\n  );\n\n}\n\n\n\n\n/**\n * Renders the a table for data of Series type\n * @param       {Object} props parameters for rendering Table\n * @constructor\n */\nexport function SeriesTable( props ){\n\n  // internal variable to tracke the sorted column and sort order\n  const [sortBy, setSortBy] = useState(props.sortBy)\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\n\n  var table_data = props.data\n\n  // define the table name which will be used to define the keys\n  var tableName = props.tableName\n  if( tableName === undefined ) tableName = 'SeriesTable'\n\n  // enable the column onClick to track the selected column, which will\n  // be sorted when enabled\n  var columnOnClick = props.columnOnClick\n  if( props.sortable === true ){\n      columnOnClick = (content) => {\n        setSortBy( content.col_name );\n        setSortAscending( !sortAscending );\n      }\n  }\n\n  // sort the data based on the column name specified in the parameters\n  // or the internal state variable when selection is enabled\n  var sortedColumn = sortBy\n  if( sortedColumn !== undefined ){\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\n  }\n\n  return (\n    <TableComponent\n      {...props.bodyProps}\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\n      component={props.table}\n      key={`${tableName}-table`}\n      defaultValue={[\n\n        <SeriesHeader\n          {...props}\n          key={`${tableName}-TableHeader`}\n          tableName = {tableName}\n          table_data={table_data}\n          columnOnClick = {columnOnClick}\n          />,\n\n        <TableBody\n          {...props}\n          key={`${tableName}-TableBody`}\n          tableName = {tableName}\n          table_data={table_data}\n          />\n        ]}\n      />\n\n  );\n\n}\n","/**\n * echarts Scatter by\n * ==================\n *\n * groups the data based on values in a given column\n * and creates a multicolored scatter plot\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport {color} from '../../../colors/Colors'\nimport jsonArray from '../../../../jsonArray'\n\nimport scatter from './index'\n\n/**\n * Returns a list of echarts scatter objects colored by the specified att\n *\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\n * @param  {string} coly  column 2 name\n * @param  {string} colorBy    color for grouping the samples\n * @return {Array}       Array of x/y cooridnates\n */\nexport default function scatter_by( props ){\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n  // group samples based on the specified column\n  const group = json_array.groupby([props.colorBy])\n\n  var series = []\n\n  for( var i=0; i < group.length; i++ ){\n\n    // extract the color based on the index and format the data\n    // from a json_array to a list of x/y coordinates\n    const color_value = color( i, 100, 'entropy_8bit' )\n\n    // create a data structure for plotting the scatter plot\n    series = series.concat( scatter({\n      ...props,\n      ...{\n        json_array: group[i].json_obj,\n        color: color_value,\n        groupId: group[i][props.colorBy],\n      }}\n    ))\n  }\n\n  return series\n}\n","/**\n * Value To String\n * ====================\n *\n * Converts values to string formats based on the provided\n * data types\n *\n * @author Nik Sumikawa\n * @date Aug 31, 2020\n *\n */\n\nimport datetime from '../datetime'\n\nexport default class valueToString{\n\n  // defaults\n  constructor(){\n\n    this.numeric = 8\n    this.percentage = 2\n    this.float = 4\n    this.string = 50\n\n  }\n\n  // returns a formatted string based on the value data type\n  toString( value, dtype ){\n\n    switch( dtype ){\n\n      case 'float': return this.format_float(value)\n      case 'int': return this.format_int(value)\n      case 'array': return this.format_array(value)\n      case 'object': return this.format_object(value)\n      case 'boolean': return this.format_boolean(value)\n\n      case 'scientific': return this.format_scientific( value )\n\n      case 'percent': return this.format_percentage( value )\n      case 'percentage': return this.format_percentage( value )\n\n      case 'datetime': return this.format_datetime( value )\n\n      default: return this.format_string( value )\n    }\n  }\n\n  // formats a float by removing resolution to 4 decimal points or\n  // converting it to scientific notation\n  format_float( value ){\n    if( value === undefined ) return '-'\n    if( value/Math.pow(10,this.float-1) > 0 ) return value.toFixed(this.float).toString()\n    return value.toExponential(this.float).toString()\n  }\n\n  // formats a value of percent data type into a percentage string\n  format_percentage( value ){\n    if( value === undefined ) return '-'\n    const formatted = (100*value).toFixed(this.percentage)\n    if( isNaN(formatted) ) return '-'\n    return `${formatted}%`\n  }\n\n  // limits the resolution of integers. Returns the original\n  // value when less than the maximum resolutions\n  format_int( value ){\n    if( value === undefined ) return '-'\n    if( value < Math.pow(10,this.numeric-1) ) return value.toString()\n    return value.toExponential(this.float).toString()\n  }\n\n  format_array( value ){\n    return value.toString()\n  }\n\n  format_object( value ){\n    return value.toString()\n  }\n\n  format_boolean( value ){\n    return value\n  }\n\n  format_scientific( value ){\n    return Number.parseFloat(value).toExponential(2)\n  }\n\n  format_datetime( value ){\n    return datetime(value).format('YYYY-MM-DD')\n  }\n\n\n  // limits the number of characters in a string\n  format_string( value ){\n    if( value.length > this.string ) return value.slice(1, this.string)\n    return value\n  }\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\nimport echarts from 'echarts'\n\nexport default function SimpleScatter( props ){\n\n  var data = [\n    {\"WEEK\":1,\"PRODUCT\":\"A\", \"VALUE\":97.08416666666666},\n    {\"WEEK\":2,\"PRODUCT\":\"A\", \"VALUE\":96.08416666666666},\n    {\"WEEK\":3,\"PRODUCT\":\"A\", \"VALUE\":95.08416666666666},\n    {\"WEEK\":4,\"PRODUCT\":\"A\", \"VALUE\":94.08416666666666},\n    {\"WEEK\":5,\"PRODUCT\":\"A\", \"VALUE\":93.08416666666666},\n    {\"WEEK\":6,\"PRODUCT\":\"A\", \"VALUE\":92.08416666666666},\n    {\"WEEK\":1,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\n    {\"WEEK\":2,\"PRODUCT\":\"B\", \"VALUE\":96.08416666666666},\n    {\"WEEK\":3,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\n    {\"WEEK\":4,\"PRODUCT\":\"B\", \"VALUE\":94.08416666666666},\n    {\"WEEK\":5,\"PRODUCT\":\"B\", \"VALUE\":92.08416666666666},\n    {\"WEEK\":6,\"PRODUCT\":\"B\", \"VALUE\":91.08416666666666},\n    {\"WEEK\":1,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\n    {\"WEEK\":2,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\n    {\"WEEK\":3,\"PRODUCT\":\"C\", \"VALUE\":93.08416666666666},\n    {\"WEEK\":4,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\n    {\"WEEK\":5,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\n    {\"WEEK\":6,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\n    ]\n\n  var json_array = new jsonArray( data )\n\n  // pivot the table\n  const pivot = json_array.pivot_table(\n    'PRODUCT',\n    'WEEK',\n    'sum',\n    'VALUE'\n  )\n\n  // extract a list of columns\n  const columns = pivot.columns.filter(r => r !== 'row')\n\n  var data = []\n\n  // combine the data for each row including data for columns with missing data\n  for( let i=0; i < pivot.length; i++ ){\n    var row = []\n    var id = pivot[i]['row']\n    console.log( 'what is the id', id)\n    for( let j=0; j < columns.length; j++ ){\n      row.push(pivot[i][columns[j]])\n    }\n    data.push( series(id, row) )\n  }\n\n\n  console.log( data )\n  console.log( options(data) )\n\n  // var option = json_array.echartsOptions\n  // option = option.scatter({\n  //   colx:'WEEK',\n  //   coly:'VALUE'\n  // })\n  //\n\n\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='zoom'\n      option = {options(data)}\n      />\n  )\n\n\n}\n\n\nfunction series( id, data ){\n  return {\n      name: id,\n      type: 'line',\n      stack: 'stack',\n      smooth: true,\n      lineStyle: {\n          width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n          opacity: 0.8,\n      //     color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n      //         offset: 0,\n      //         color: 'rgba(128, 255, 165)'\n      //     }, {\n      //         offset: 1,\n      //         color: 'rgba(1, 191, 236)'\n      //     }])\n      },\n      emphasis: {\n          focus: 'series'\n      },\n      data: data\n  }\n\n}\n\nfunction options( series ){\n\n  return {\n    color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\n    // title: {\n    //     text: '渐变堆叠面积图'\n    // },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'cross',\n            label: {\n                backgroundColor: '#6a7985'\n            }\n        }\n    },\n    legend: {\n        data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5', 'Line 6']\n    },\n    toolbox: {\n        feature: {\n            saveAsImage: {}\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: 'category',\n            boundaryGap: false,\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        }\n    ],\n    yAxis: [\n        {\n            type: 'value'\n        }\n    ],\n    series: series\n};\n\n}\n\n\nconst testoption = {\n    color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\n    title: {\n        text: '渐变堆叠面积图'\n    },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'cross',\n            label: {\n                backgroundColor: '#6a7985'\n            }\n        }\n    },\n    legend: {\n        data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5']\n    },\n    toolbox: {\n        feature: {\n            saveAsImage: {}\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: 'category',\n            boundaryGap: false,\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        }\n    ],\n    yAxis: [\n        {\n            type: 'value'\n        }\n    ],\n    series: [\n        {\n            name: 'Line 1',\n            type: 'line',\n            stack: '总量',\n            smooth: true,\n            lineStyle: {\n                width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n                opacity: 0.8,\n                // color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                //     offset: 0,\n                //     // color: 'rgba(128, 255, 165)'\n                // }, {\n                //     offset: 1,\n                //     // color: 'rgba(1, 191, 236)'\n                // }])\n            },\n            emphasis: {\n                focus: 'series'\n            },\n            data: [140, 232, 101, 264, 90, 340, 250]\n        },\n        {\n            name: 'Line 2',\n            type: 'line',\n            stack: '总量',\n            smooth: true,\n            lineStyle: {\n                width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n                opacity: 0.8,\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(0, 221, 255)'\n                }, {\n                    offset: 1,\n                    color: 'rgba(77, 119, 255)'\n                }])\n            },\n            emphasis: {\n                focus: 'series'\n            },\n            data: [120, 282, 111, 234, 220, 340, 310]\n        },\n        {\n            name: 'Line 3',\n            type: 'line',\n            stack: '总量',\n            smooth: true,\n            lineStyle: {\n                width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n                opacity: 0.8,\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(55, 162, 255)'\n                }, {\n                    offset: 1,\n                    color: 'rgba(116, 21, 219)'\n                }])\n            },\n            emphasis: {\n                focus: 'series'\n            },\n            data: [320, 132, 201, 334, 190, 130, 220]\n        },\n        {\n            name: 'Line 4',\n            type: 'line',\n            stack: '总量',\n            smooth: true,\n            lineStyle: {\n                width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n                opacity: 0.8,\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(255, 0, 135)'\n                }, {\n                    offset: 1,\n                    color: 'rgba(135, 0, 157)'\n                }])\n            },\n            emphasis: {\n                focus: 'series'\n            },\n            data: [220, 402, 231, 134, 190, 230, 120]\n        },\n        {\n            name: 'Line 5',\n            type: 'line',\n            stack: '总量',\n            smooth: true,\n            lineStyle: {\n                width: 0\n            },\n            showSymbol: false,\n            label: {\n                show: true,\n                position: 'top'\n            },\n            areaStyle: {\n                opacity: 0.8,\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(255, 191, 0)'\n                }, {\n                    offset: 1,\n                    color: 'rgba(224, 62, 76)'\n                }])\n            },\n            emphasis: {\n                focus: 'series'\n            },\n            data: [220, 302, 181, 234, 210, 290, 150]\n        }\n    ]\n};\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions.pareto({\n    col: 'CATEGORY1',\n    ratio: true,\n  })\n\n  console.log( json_array)\n  console.log(json_array.sum('COUNT'))\n\n  return(\n    <json_array.react.echarts.Echarts\n      key={`Pareto`}\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Bar\n      colx='id'\n      coly='COUNT'\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function StackedScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var stack_col = 'CATEGORY2'\n\n  var json_array = new jsonArray( data )\n  // create a pivot table so there is a unique column for each\n  // category you wish to stack (CATEGORY2 in this case)\n  var pivot = json_array.pivot_table('CATEGORY1', stack_col, 'count')\n\n  // retrieve the unique values for column you wish to stack\n  const stacked_id = json_array.unique(stack_col)\n\n  console.log( stacked_id)\n  return(\n    <pivot.react.echarts.Bar\n      colx = 'row'\n      coly = {stacked_id}\n      stacked = {true}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function AllSamples( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Boxplot\n      colx='CATEGORY1'\n      coly='id'\n      allSample = {true}\n\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function AllSamples( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Boxplot\n      colx='CATEGORY1'\n      coly='id'\n      allSample = {true}\n      colorBy='CATEGORY2'\n\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function AllSamples( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Boxplot\n      colx='CATEGORY1'\n      coly='id'\n      overlayFilter = {r => r.CATEGORY2 === '71F00295B-05'}\n      colorBy='CATEGORY2'\n\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Boxplot\n      colx='CATEGORY1'\n      coly='id'\n      />\n  )\n\n\n}\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option = option.axhline( 3.5 )\n\n  \n  return(\n    <json_array.react.echarts.Echarts\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option.selection()\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='selection'\n      option = {option}\n      onSelect={(val) => console.log('sss', val.data)}\n      />\n  )\n\n\n}\n","\nimport jsonArray from './jsonArray'\n\nexport default jsonArray\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.line({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  return(\n    <json_array.react.echarts.Echarts\n      option = {option}\n      />\n  )\n\n\n}\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.line({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  return(\n    <json_array.react.echarts.Echarts\n      option = {option}\n      echartsStyle={{height:'500px'}}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option.zoom({scroll:true})\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='zoom'\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option.zoom({sliders: {xAxis: true, yAxis: true}})\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='zoomslider'\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option.zoom({\n    scroll: true,\n    yAxis: true,\n    sliders: {yAxis:true}\n  })\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='zoom'\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const [selected, setSelected] = React.useState()\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  return(\n    <div>\n      <json_array.react.echarts.Echarts\n        key='selection'\n        option = {option}\n        onClick={(val) => setSelected(val.data)}\n        />\n\n      {(selected === undefined) ? null : <h2>Selected -- {selected.join(',')}</h2>}\n\n  </div>\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function DevelopmentExample( props ){\n\n  const data = [\n    {value: 1048, name: 'Bubba'},\n    {value: 735, name: 'Churro'},\n    {value: 580, name: 'Oates'},\n    {value: 484, name: 'Pistachio'},\n    {value: 300, name: 'Stu'}\n  ]\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.pie({\n    value: 'value',\n    label: 'name'\n  })\n\n  option.legend('left')\n\n  return(\n    <json_array.react.echarts.Echarts\n      option ={option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function DevelopmentExample( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  // retrieve the echarts plot option calss\n  var option = json_array.echarts.options\n\n  // generate a scatter plot format\n  option.scatter({\n    colx:'COUNT',\n    coly:'id',\n    colorBy:'CATEGORY2'\n  })\n\n  option.toolbox()\n\n  return(\n    <json_array.react.echarts.Echarts\n      option ={option}\n      />\n  )\n\n\n}\n","\n// retrieves data from the data repository. modularizing the data this way, makes\n// it possible to easily offload the data to an external location to reduce the\n// overall build size thus improving build and loading times\nexport default function getData( path ){\n  return require('./data/' + path)\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  console.log( data )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Heatmap\n      colx='__index__'\n      coly='COUNT'\n      value='id'\n      />\n  )\n\n\n}\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/yield_timeframe.json' )\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.line({\n    colx:'WP_LOTID',\n    coly:'AVG_YIELD'\n  })\n\n  option = option.append_series(\n    json_array.echartsSeries.errorbars({\n      colx:'__index__',\n      avg:'AVG_YIELD',\n      min:'MIN_YIELD',\n      max:'MAX_YIELD',\n    })\n  )\n\n  option.xAxis[0].rotate()\n\n  option.xtick_padding( 100 )\n\n  return(\n    <json_array.react.echarts.Echarts\n      option = {option}\n      />\n  )\n\n\n}\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/yield_timeframe.json' )\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.line({\n    colx:'WP_LOTID',\n    coly:'AVG_YIELD'\n  })\n\n  option = option.append_series(\n    json_array.echartsSeries.errorbars({\n      colx:'__index__',\n      avg:'AVG_YIELD',\n      min:'MIN_YIELD',\n      max:'MAX_YIELD',\n    })\n  )\n\n  option.xAxis[0].rotate()\n  option.xAxis[0].max = json_array.length\n  option.xAxis[0].min = -1\n\n\n  option.xtick_padding( 100 )\n\n  option = option.highlight({\n    colx:'WP_LOTID',\n    coly:'AVG_YIELD',\n    value: 'TZ62817.1C',\n\n  })\n\n  return(\n    <json_array.react.echarts.Echarts\n      option = {option}\n      />\n  )\n\n\n}\n","\nimport React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleLine( props ){\n\n  const data = getData( 'jsonArray/yield_timeframe.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Line\n      colx='WP_LOTID'\n      coly='AVG_YIELD'\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\n\n\nexport default function SimplePie( props ){\n\n  const data = [\n    {\"START_TIME\":\"2021-02-24 04:32:01\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-13 19:15:32\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69644.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-02-22 06:09:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70094.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-06 17:28:18\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-14 14:35:14\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-11 01:13:39\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-07 21:40:40\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70491.1X\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-10 07:42:45\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-14 19:43:32\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-07 03:49:22\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70484.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-22 13:21:03\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69643.1W\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-26 14:05:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-26 07:41:31\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70099.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-02-25 21:17:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-11 04:18:51\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70106.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-25 02:12:10\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-11 03:55:42\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-10 17:33:24\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-11 16:07:48\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71012.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-15 03:36:58\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-02-24 06:30:56\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69639.1A\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-16 08:49:56\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-10 10:03:11\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70101.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-09 21:34:30\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70483.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-14 14:09:28\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-13 18:25:51\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-13 01:25:29\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71018.1T\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-24 18:41:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-10 23:08:54\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-10 13:48:53\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-13 11:29:21\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70490.1F\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-23 20:52:06\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-14 12:30:11\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-03-02 18:32:23\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69221.1R\",\"FAB\":\"CHDFAB\",\"QRB\":true,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-15 03:36:57\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-02-23 10:26:55\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69253.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\n    {\"START_TIME\":\"2021-03-14 17:21:56\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\n    {\"START_TIME\":\"2021-02-28 04:32:00\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69641.1K\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"}]\n\n\n  var json_array = new jsonArray( data )\n\n  json_array = json_array.create_column('type', r => {\n    if(r.QRB === true) return 'QRB'\n    if(r.FORCE_INK === true) return 'FORCE_INK'\n    if(r.DEV === true) return 'DEV'\n    if(r.SBL === true) return 'SBL'\n    return 'OTHER'\n  })\n\n  // const col = 'type'\n  // const group = json_array.groupby([col])\n  //\n  // console.log( group )\n  var option = json_array.echartsOptions\n  option = option.pieFromSeries({\n    col: 'type'\n  })\n\n  option.legend('left')\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='pieFromSeries'\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\n\n\nexport default function SimplePie( props ){\n\n  const data = [\n    {value: 1048, name: 'Bubba'},\n    {value: 735, name: 'Churro'},\n    {value: 580, name: 'Oates'},\n    {value: 484, name: 'Pistachio'},\n    {value: 300, name: 'Stu'}\n  ]\n\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.pie({\n    value: 'value',\n    label: 'name'\n  })\n\n  option.legend('left')\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='zoom'\n      option = {option}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  var json_array =[\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\n  ]\n\n  json_array = new jsonArray( json_array )\n  json_array = json_array.create_column('x', r=>r[0])\n  json_array = json_array.create_column('y', r=>r[1])\n  json_array = json_array.create_column('v', r=>r[2])\n\n  var option = json_array.echartsOptions\n  // option = option.scatter({\n  //   colx: 'x',\n  //   coly: 'y',\n  //   // value: 'v',\n  //   // label: true\n  // })\n\n  option = option.rectGrid({\n      colx: 'x',\n      coly: 'y',\n      value: 'v',\n      label: true\n  })\n\n  option = option.append_series(\n      json_array.echartsSeries.circle({\n          data: [2,2],\n          radius: 150\n      })\n    )\n\n  // option = option.rectGrid({\n  //   colx: 'x',\n  //   coly: 'y',\n  //   // value: 'v',\n  //   label: true\n  // })\n  //\n  option.zoom({\n    scroll: true,\n    sliders : {\n      xAxis: true,\n      yAxis: true\n    }\n  })\n  // // option['xAxis'][0]['show'] = false\n  // // option['xAxis'][0]['min'] = function (value) { return value.min }\n  // // option['xAxis'][0]['max'] = function (value) { return 6 }\n  // // option['yAxis'][0]['min'] = function (value) { return  value.min - 1 }\n  // // option['yAxis'][0]['max'] = function (value) { return 6 }\n  // // option['xAxis']['max'] = 6\n  // // option['yAxis']['min'] = -1\n  // // option['yAxis']['max'] = 6\n  //\n  // option['dataZoom'] = [\n  //       {\n  //           type: 'slider',\n  //           show: true,\n  //           xAxisIndex: [0],\n  //           startValue: -1,\n  //           endValue: 6\n  //       },\n  //       {\n  //           type: 'slider',\n  //           show: true,\n  //           yAxisIndex: [0],\n  //           startValue: -1,\n  //           endValue: 6\n  //           // left: '93%',\n  //           // start: 0,\n  //           // end: 5\n  //       },\n  //       // {\n  //       //     type: 'inside',\n  //       //     xAxisIndex: [0],\n  //       //     // start: 1,\n  //       //     // end: 5\n  //       // },\n  //       // {\n  //       //     type: 'inside',\n  //       //     yAxisIndex: [0],\n  //       //     // start: 1,\n  //       //     // end: 5\n  //       // }\n  //   ]\n\n  console.log( option )\n  return(\n    <div>\n      this is still custom\n      <json_array.react.echarts.Echarts\n        key='zoomslider'\n        option = {option}\n        />\n    </div>\n\n    // echartsStyle={{height:'500px'}}\n\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  var json_array =[\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\n  ]\n\n\n  json_array = new jsonArray( json_array )\n  json_array = json_array.create_column('x', r=>r[0])\n  json_array = json_array.create_column('y', r=>r[1])\n  json_array = json_array.create_column('v', r=>r[2])\n\n  return(\n    <json_array.react.echarts.RectGrid\n      colx = {'x'}\n      coly = {'y'}\n      value = {'v'}\n      label = {true}\n      />\n    // echartsStyle={{height:'500px'}}\n\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function ColorByScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n\n  return(\n    <json_array.react.echarts.Scatter\n      colx='COUNT'\n      coly='id'\n      colorBy='CATEGORY2'\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  json_array = json_array.label(r => r.CATEGORY2 === '71F00295B-07')\n\n  return(\n    <json_array.react.echarts.Scatter\n      colx='COUNT'\n      coly='id'\n      label='label'\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  return(\n    <json_array.react.echarts.Scatter\n      colx='COUNT'\n      coly='id'\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n  var option = json_array.echartsOptions\n  option = option.scatter({\n    colx:'id',\n    coly:'COUNT'\n  })\n\n  option.zoom()\n\n  return(\n    <json_array.react.echarts.Echarts\n      key='selection'\n      option = {option}\n      onSelect={(val) => console.log('sss', val.data)}\n      />\n  )\n\n\n}\n","import React from \"react\";\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\nimport { Divider, Header } from 'semantic-ui-react'\n\nexport default function SimpleScatter( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n  var json_array = new jsonArray( data )\n\n\n  // retrieve the echarts plot option calss\n  var option = json_array.echarts.options\n\n  // generate a scatter plot format\n  option.scatter({\n    colx: 'COUNT',\n    coly: 'id',\n  })\n\n  console.log( json_array )\n  option.tooltip.from_DataFrame(\n    data,\n    ['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']\n  )\n\n\n\n  return(\n    <div>\n\n      <Divider horizontal>Example 1</Divider>\n      <Header as='h4'>Tooltips are provided as a parameter</Header>\n      <json_array.react.echarts.Scatter\n        colx='COUNT'\n        coly='id'\n        tooltip = {['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']}\n        />\n\n      <Divider horizontal>Example 2</Divider>\n      <Header as='h4'>Tooltips are added to the option. This enables more customization</Header>\n      <json_array.react.echarts.Echarts\n        option ={option}\n        />\n\n    </div>\n  )\n\n\n}\n","\nfunction importConfig( config, path, indev=false){\n\n  var localConfig = require('./' + path)\n\n  if( indev === false ){\n    for( var i=0; i < localConfig.length; i++ ){\n      localConfig[i]['indev'] = false\n    }\n  }\n\n  return config.concat(localConfig)\n}\n\n\nexport var config = []\n\nconfig = importConfig(config, 'Area/config.json', true)\nconfig = importConfig(config, 'Bar/config.json', false)\nconfig = importConfig(config, 'Boxplot/config.json', false)\nconfig = importConfig(config, 'Custom/config.json', false)\nconfig = importConfig(config, 'Format/config.json', false)\nconfig = importConfig(config, 'Heatmap/config.json', false)\nconfig = importConfig(config, 'Line/config.json', false)\nconfig = importConfig(config, 'RectGrid/config.json', false)\nconfig = importConfig(config, 'Scatter/config.json', false)\nconfig = importConfig(config, 'Selection/config.json', false)\nconfig = importConfig(config, 'Tooltips/config.json', false)\n","import React from 'react';\n\nimport jsonArray from 'jsonArray'\nimport getData from 'Documentation/examples/getData'\n\nexport default function AccordianTable( props ){\n\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n  var groups = json_array.groupby(['CATEGORY1', 'CATEGORY2'])\n\n\n  console.log( groups )\n  return (\n    <groups.react.semanticUI.Table\n      tableName = {'AccordianTable'}\n      columns={['CATEGORY1', 'CATEGORY2', 'count']}\n\n      accordian={true}\n      accordianColumns = {['id','VALUE', 'COUNT','image']}\n      accordianHeader = {true}\n      sortable={true}\n      />\n  )\n\n}\n","import React from 'react';\n\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function ColumnFilters( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'data'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      filterable={true}\n      sortable={true}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n  console.log( data )\n  const columnGroups = {\n    id: 'id',\n    category: ['CATEGORY1','CATEGORY2'],\n    data: ['COUNT','VALUE', 'image']\n  }\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'NoHeader'}\n      columnGroups={columnGroups}\n      sortable={true}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'NoHeader'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      sortable={true}\n      showHeader={false}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var JsonArray = new jsonArray( data )\n  JsonArray = JsonArray.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <JsonArray.react.semanticUI.Table\n      tableName = {'data'}\n      sortable={true}\n      lazyLoading = {true}\n      lazyLoadingStart = {5}\n      lazyLoadingStep = {5}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'MultiRowCol'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\n      multirowSpan={['COUNT']}\n      sortable={true}\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'MultiRow'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\n      sortable={true}\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\n      />\n  )\n\n}\n","import React from 'react';\n\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function ColumnFilters( props ){\n\n  const [filters, setFilters] = React.useState([])\n\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'ParentFilterCol'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      filters = {filters}\n      columnFilterOnChange = { (content) => {\n        var temp = filters\n        // manage initial conditions\n        if( temp === undefined ) temp = []\n\n        temp = temp.filter(r => r.col_name !== content.col_name)\n\n        // only push valid values (accounts for dropdown clearing)\n        if( content.value !== '' ) temp.push( content )\n        setFilters( temp )\n      }}\n      sortable={true}\n      />\n  )\n\n}\n","import React, {useState} from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function ParentSortColumn( props ){\n\n  const [sortBy, setSortBy] = useState(props.sortBy)\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'data'}\n      columnOnClick={(content) => {\n        setSortBy( content.col_name );\n        setSortAscending( !sortAscending );\n      }}\n      sortBy = {sortBy}\n      sortAscending = {sortAscending}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function CheckboxTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n\n  json_array = json_array.create_column( 'checkboxField', () => false )\n  json_array = json_array.astype({checkboxField: 'checkbox', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'data'}\n      columns={['checkboxField','COUNT','VALUE','id','CATEGORY1','CATEGORY2' ]}\n      sortable={true}\n      cellOnClick={{\n        checkboxField: (val) => {\n          alert('checkbox selected. see console for details')\n          console.log( 'cell was selected', val)\n      }}}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'data'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      sortable={true}\n      alternateStyle= {true}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'SimpleTable'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      sortable={true}\n      />\n  )\n\n}\n","import React from 'react';\n\nimport jsonArray from \"jsonArray\";\nimport getData from 'Documentation/examples/getData'\n\n\nexport default function SimpleTable( props ){\n\n  const data = getData( 'jsonArray/data.json' )\n\n  var json_array = new jsonArray( data )\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\n\n\n  return (\n    <json_array.react.semanticUI.Table\n      tableName = {'TableFormat'}\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\n      tdStyle={{padding:'2px 5px 2px 5px'}}\n      sortable={true}\n      />\n  )\n\n}\n","\nfunction importConfig( config, path, indev=false){\n\n  var localConfig = require('./' + path)\n\n  if( indev === false ){\n    for( var i=0; i < localConfig.length; i++ ){\n      localConfig[i]['indev'] = false\n    }\n  }\n\n  return config.concat(localConfig)\n}\n\n\nexport var config = []\n\nconfig = importConfig(config, 'Accordian/config.json', false)\nconfig = importConfig(config, 'Header/config.json', true)\nconfig = importConfig(config, 'LazyLoading/config.json', false)\nconfig = importConfig(config, 'MultiRow/config.json', false)\nconfig = importConfig(config, 'Style/config.json', false)\nconfig = importConfig(config, 'Filtering/config.json', false)\nconfig = importConfig(config, 'SpecialContent/config.json', false)\n","/**\n * JSON Array\n * ===============\n *\n * Extend the Array components to include various functions useful\n * for processing an array of JSON objects\n *\n * :Author: Nik Sumikawa\n * :Date: Feb 11, 2020\n */\n\n\nexport default class jsonArray extends Array{\n\n  constructor(array=[], inplace, dtypes) {\n\n    super()\n\n    // to avoid max recursion depth, we push each row separately\n    array.map( row => this.push(row))\n\n  }\n\n\n  // returns all columns in the jsonArray\n  get columns(){\n    var columns = []\n\n    var max_length = this.length\n    if( max_length > 50 ) max_length = 50\n\n    for( var i=0; i < max_length; i++ ){\n      columns = columns.concat(Object.keys(this[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  /**\n   * Replace the column names with those provided by the column array\n   * @param  {Array} columns array of column names\n   * @return {Array}         jsonArray with new column names\n   */\n  set columns( columns ){\n      const keys = this.columns\n\n      // define a mapping between the current and new column names\n      var mapping = {}\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\n        mapping[keys[i]] =columns[i]\n      }\n\n      // return a json array with the new mapping applied\n      return this.rename( mapping, {inplace: true} )\n  }\n\n  // resets the index value\n  reset_index(props={}){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(props['inplace'])\n\n    for( var i=0; i < array.length; i++ ){\n      array[i]['__index__'] = i\n    }\n    return array\n  }\n\n  // return all values for the specified column\n  values( col ){\n    return [...this].map(row => row[col])\n  }\n\n  /**\n   * Returns an array of index values\n   * @return {Array} Array of index values\n   */\n  get index(){\n    return [...this].map(row => row.__index__)\n  }\n\n\n\n  append( df ){\n    return new jsonArray([...this].concat(df))\n  }\n\n  /**\n   * Applies a given function to a column and returns a DataFrame\n   * with the results. The results can be written inplace or a nedw\n   * column created when specified as a parameter\n   * @param  {string} col     column name\n   * @param  {function} func  function to apply to the column\n   * @param  {string} newCol  when provided a new column is produced\n   * @return {[type]}      [description]\n   */\n  apply( col, func, newCol ){\n\n    if( newCol === undefined ) newCol = col\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][newCol] = func(this[i][col])\n    }\n\n    return this\n  }\n\n  /**\n   * cretes a new column by applying the provided function to each row\n   * @param  {string} col     name of the column to create\n   * @param  {function} func  function to apply to the column\n   */\n   create_column( col, func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][col] = func(this[i])\n    }\n\n    return this\n  }\n\n\n\n\n  /**\n   * overwrites the local index column with the provided column\n   * @param {String} col Column name\n   */\n  set_index( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < array.length; i ++ ){\n      array[i].__index__ = array[i][col]\n      delete array[i][col]\n    }\n\n    return array\n  }\n\n\n  // sorts the json array by the provided column\n  sort_values( col, ascending=true){\n\n    var array\n\n    //sort the table based on the ascending flag\n    if( ascending === true ){\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\n\n    }else{\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Merge two DataFrames together\n   * @param  {Array} json_array           DataFrame to be merged\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\n   * @param  {string} on                   index (col) to use for merging\n   * @return {Array}                      DataFrame containing the merged columns\n   */\n  merge( json_array, params={how:'left', on:'__index__'}  ){\n\n    var array = []\n    var df1, df2, index, a, b\n    // var primary_col, secondary_col, value\n\n    var col_left, col_right\n\n    // determine the columns to use for merging the left/right\n    // DataFrames based on the specified parameters\n    if( params.on !== undefined ){\n      col_left = params.on\n      col_right = params.on\n    }\n    if( params.on_right !== undefined ) col_right = params.on_right\n    if( params.on_left !== undefined ) col_left = params.on_left\n\n\n    // determine the merging criteria\n    switch( params.how ){\n      case 'left':\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n\n      case 'right':\n        df1 = [...json_array]\n        df2 = [...this]\n        // primary_col = col_right\n        // secondary_col = col_left\n        index = json_array.unique(col_right)\n        break;\n\n      // default to merge on left\n      default:\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n    }\n\n    // var lookup = {}\n    // for( a = 0; a < df2.length; a++ ){\n    //   value = df2[a][secondary_col]\n    //\n    //   const keys = Object.keys(lookup)\n    //   if( keys.includes(value) ){\n    //     lookup[value].push( df2[a] )\n    //   }else{\n    //     lookup[value] = [df2[a]]\n    //   }\n    // }\n    //\n    // // pull the rows corresponding to the provided index value\n    // for( var a=0; a < df1.length; a++ ){\n    //   value = df1[a][secondary_col]\n    //\n    //   const lookupVal = lookup[value ]\n    //\n    //   // merge rows with similar index values (intersection). Create\n    //   // multiple rows when duplicate index values are present\n    //   if( lookupVal.length > 0 ){\n    //     for( b=0; b < lookupVal.length; b++ ){\n    //       array.push({...lookupVal[b], ...df1[a]})\n    //     }\n    //   }\n    //\n    //   // add the rows that have no overlap\n    //   if( lookupVal.length === 0  ){\n    //     array.push(df1[a])\n    //   }\n    //\n    // }\n\n    // pull the rows corresponding to the provided index value\n    for( var i=0; i < index.length; i++ ){\n      const value = index[i]\n      const df1_rows = df1.filter(r => r[col_left] === value)\n      const df2_rows = df2.filter(r => r[col_right] === value)\n\n      // merge rows with similar index values (intersection). Create\n      // multiple rows when duplicate index values are present\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n          for( b=0; b < df2_rows.length; b++ ){\n            array.push({...df2_rows[b], ...df1_rows[a]})\n          }\n        }\n      }\n\n      // add the rows that have no overlap\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n            array.push(df1_rows[a])\n        }\n      }\n\n    }\n\n    return new jsonArray( array, true )\n\n  }\n\n  /**\n   * Replaces undefined data with a given value. The values\n   * can be assigned globally or by column\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\n   *                              Values can be assigne by column, by providing a value\n   *                              per colum in the parameter dictionary\n   * @return {Array}             DataFrame with missing values replaed\n   */\n  fillna( params={} ){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    var i, j, columns, col, val\n\n    // fill missing values with unique values per column\n    // This assumes that the input is an object with a\n    // value for each column name\n    if( typeof params === 'object'){\n      columns = Object.keys(params)\n\n      // nothing to do when no inputs are provided\n      if( columns.length === 0) return array\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          val = params[col]\n          if( array[i][col] === undefined ) array[i][col] = val\n          if( array[i][col] === null ) array[i][col] = val\n          // if( isNaN(array[i][col]) ) array[i][col] = val\n        }\n      }\n\n    }else{\n\n      // fill all missing values with the same value\n      columns = array.columns\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          if( array[i][col] === undefined ) array[i][col] = params\n          if( array[i][col] === null ) array[i][col] = params\n          // if( isNaN(array[i][col]) ) array[i][col] = params\n        }\n      }\n    }\n\n    return array\n  }\n\n\n\n\n  // filters the json array based on the column and the provided value.\n  // The value can be either a single variable or an array\n  filter_column( col, value ){\n\n    if( Array.isArray(value) ){\n      return new jsonArray(\n        [...this].filter(row => value.includes(row[col])),\n        false\n       )\n    }else{\n      return new jsonArray(\n        [...this].filter(row => row[col] === value ),\n        false\n      )\n    }\n  }\n\n\n  filter( func ){\n    return new jsonArray( [...this].filter(func), false )\n  }\n\n  map( func ){\n    return [...this].map(func)\n  }\n\n  groupby( col ){\n\n    return new jsonArray( this.__groupby__( this, col ), true )\n  }\n\n\n  __groupby__( json_obj, atts, keys ){\n\n    // append the keys with the json object\n    if( atts.length === 0 ){\n      keys['json_obj'] = new jsonArray(json_obj)\n      keys['count'] = json_obj.length\n      return keys\n    }\n\n    // initial conditions for keys\n    if( keys === undefined ){ keys = {} }\n\n    var results = []\n\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\n    const values = json_obj.unique(atts[0], true)\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      const group = json_obj.filter( row => row[atts[0]] === val )\n\n      // deep copy the keys and append with the current key\n      var temp_keys = Object.assign({}, keys)\n      temp_keys[atts[0]] = values[i]\n\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\n    }\n\n    return results\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  count_values( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var counts = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      if( !unique.includes(val) ){\n        unique.push(val)\n        counts[val] = 0\n      }\n      counts[val]++\n    }\n\n    // map the unique object count back to a flat object\n    var buffer = []\n    for( i=0; i < unique.length; i++ ){\n      const split_val = unique[i].split(',')\n\n      //\n      const obj = {count: counts[unique[i]]}\n      for( var j=0; j < split_val.length; j++ ){\n        obj[columns[j]] = split_val[j]\n      }\n\n      buffer.push( obj )\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  drop_duplicates( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var buffer = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      if( !unique.includes(values[i]) ){\n          unique.push( values[i] )\n          buffer.push( this[i] )\n      }\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n\n  pivot( columns ){\n\n    var pivot_table = []\n\n    if( columns === undefined ) columns = this.columns\n\n    for( var i=0; i < columns.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {column: columns[i]}\n\n      // add the column value for each row\n      for( var j=0; j < this.length; j++ ){\n        temp[j] = this[j][columns[i]]\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n  // converts a matrix into a flatten table (opposite of pivot table)\n  flatten( id_att = '__index__' ){\n\n    // extract a list of column names\n    const columns = this.columns\n\n    var table = []\n\n    for( var i=0; i < this.length; i++ ){\n      const row = this[i]\n\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n\n        // avoid a duplicate entry as the id attribute\n        if( col === id_att ) continue\n\n        table.push({\n          column: col,\n          row: row[id_att],\n          value:  row[col]\n        })\n      }\n    }\n\n    return new jsonArray( table, true )\n\n  }\n\n  // creates a pivot table based on the specified row and column.\n  // The summary type is used to compute the value of the pivot.\n  pivot_table( row, column, summaryType='count', value=undefined ){\n\n    var pivot_table = []\n\n    const row_val = this.unique( row )\n    const column_val = this.unique( column )\n\n\n    for( var i=0; i < row_val.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {row: row_val[i]}\n\n      const rval = row_val[i]\n      // const by_row = this.filter( r => r[row] === rval )\n      const by_row = [...this].filter( r => r[row] === rval )\n\n      // add the column value for each row\n      for( var j=0; j < column_val.length; j++ ){\n\n        const cval = column_val[j]\n        // const by_col = by_row.filter( r => r[column] === cval )\n        const by_col = [...by_row].filter( r => r[column] === cval )\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\n        // console.log( by_col )\n\n        var temp_json\n        switch( summaryType ){\n          // returns the number of rows for the current split\n          case 'count':\n            temp[column_val[j]] = by_col.length\n            break;\n\n          // returns the number of unique values for the current split\n          case 'unique':\n            // set defaults for missing parameter values\n            if( value === undefined ) value = '__index__'\n\n            temp_json = new jsonArray( by_col )\n            temp[column_val[j]] = temp_json.unique( value ).length\n            break;\n\n\n          default:\n            temp[column_val[j]] = by_col.length\n            break\n        }\n\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n\n  /**\n   * Creates a new column by merging the content from the columns\n   * specified in the columns attribute\n   * @param  {array} columns  array of column names\n   * @param  {String} col_name Name of the resulting column\n   * @param  {String} [sep='   ']            string delimiter\n   * @return {OBJECT}          jsonArray with the new column\n   */\n  combine( columns, col_name, sep=' ', params={} ){\n\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < this.length; i++ ){\n      // seed the value with the value from the first column\n      var temp = this[i][columns[0]]\n\n      for( var j=1; j < columns.length; j++ ){\n        temp = temp + sep + this[i][columns[j]]\n      }\n\n      array[i][col_name] = temp\n    }\n\n    array.dtypes[col_name] = 'string'\n    return array\n  }\n\n  combine_columns( col1, col2, col_name, sep=' ' ){\n    // creates a new column by merging the content of col 1 and 2 to\n    // form a new column\n    return this.combine([col1, col2], col_name, sep )\n  }\n\n\n  unique( col, ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    var unique_values = [...new Set([...this].map(row => row[col] ))]\n\n\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        switch( typeof unique_values[0] ){\n          case \"string\":\n            return unique_values.sort()\n\n          case \"boolean\":\n            return unique_values.sort()\n\n          default :\n            try{\n              unique_values = unique_values.map( x => +x)\n              unique_values = unique_values.sort(function(a,b){return a - b})\n            }catch{\n              // default to the standard sort\n              unique_values.sort()\n            }\n        }\n\n    }\n\n    return unique_values\n  }\n\n\n\n\n  /**\n   * Applies a threshold to the specified column\n   * @param  {function} func     function used to partition dataset\n   * @param  {string} res_col   column name containing the results\n   * @return {Array}            jsonArray containing res_col\n   */\n  label( func, params={} ){\n\n    const param_keys = Object.keys(params)\n\n    // set defaults for missing parameter values\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\n    if( !param_keys.includes('value') ) params['value'] = true\n    if( !param_keys.includes('default') ) params['default'] = false\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\n\n    var array = this.__inplace__(params['inplace'])\n\n\n    // identify all samples identified by the rule\n    const sample_index = array.filter( func ).map( row => row.__index__ )\n\n    // create a boolean label, where parts in the sample set are true\n    for( var i=0; i < array.length; i ++ ){\n\n      // extract a list of columns name for the given row\n      const columns = Object.keys( array[i] )\n\n      // the value is true when it is included in the sample set\n      if( sample_index.includes( array[i].__index__ ) ){\n        array[i][params['output_col']] = params['value']\n        continue\n      }\n\n      // set the default value when no value exists\n      if( !columns.includes(params['output_col']) ){\n        array[i][params['output_col']] = params['default']\n        continue\n      }\n\n    }\n\n    return array\n  }\n\n  /**\n   * Copies the content from one column to a new column. This is\n   * non destructive, so if the column already exists, only the\n   * missing data will be copied over\n   * @param  {String} col     original column name\n   * @param  {String} new_col new column name\n   * @return {Object}         jsonArray with the new column added\n   */\n  copy_column( col, new_col, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      if(!columns.includes( new_col) ){\n        array[i][new_col] = array[i][col]\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * Returns a DataFrame containing only the specified column\n   * and the index\n   * @param  {array} columns array of column names\n   * @return {array}         json array containing the specified columns\n   */\n  select_columns( columns ){\n\n    var array = []\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < this.length; i++ ){\n\n      var row = {__index__: this[i].__index__}\n      // copy the specified columns for each row\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n        row[col] = this[i][col]\n      }\n\n      array.push( row )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Drops columns from the DataFrame\n   * @param  {String or Array} columns String or Array of column names\n   * @return {OBJECT}         JsonArray without the specified columns\n   */\n  drop_columns( columns, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n\n      // delete the specified column when of string type\n      if( typeof columns === 'string' ){\n        delete array[columns]\n\n      // when a list is provided, delete all columns in the string\n      }else{\n\n        for( var j=0; j < columns.length; j++ ){\n          delete array[i][columns[j]]\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * renames columns\n   * @param  {object} mapping object containing the existing column name and new column name\n   * @return {object}         json array with the new column naming\n   */\n  rename( mapping, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const columns = Object.keys( mapping )\n\n    // rename the specified columns\n    for( var i = 0; i < array.length; i++ ){\n\n      const ex_columns = Object.keys( array[i] )\n\n      // create a new column based on the mapping and delete\n      // the existing one (taht was replaced)\n      for( var j=0; j < columns.length; j++ ){\n        // only replace the column when data exists for that column\n        if( ex_columns.includes(columns[j]) ){\n          const new_col = mapping[columns[j]]\n          array[i][new_col] = array[i][columns[j]]\n\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\n          delete array[i][columns[j]]\n\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * replaces the values in the specified column with the given value\n   * based on the mapping\n   * @param  {String} col     original column name\n   * @param  {Object} mapping Object containing the value mapping\n   * @return {Object}         jsonArray with the new column added\n   */\n  replace( col, mapping={}, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const values = Object.keys( mapping )\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      // do not perform mapping when no data nor the mapping exists\n      if(!columns.includes(col) ) continue\n      if(!values.includes(array[i][col])) continue\n\n      array[i][col] = mapping[array[i][col]]\n\n    }\n\n    return new jsonArray( array )\n  }\n\n\n\n  /**\n   * returns the data object. When enable is true, the original\n   * jsonArray is returned so the values are modified directly. Otherwise\n   * the jsonArray is cloned to avoid mutation of the original object\n   *\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\n   * @return {Object}             current jsonArray content\n   */\n  __inplace__( enable=false ){\n\n    // clone the local copy to avoid mutation when inplace is disabled\n    if( enable ) return this\n\n    return new jsonArray( this )\n  }\n\n\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Grid, Segment, Menu, Button, Container} from 'semantic-ui-react'\n\nimport jsonArray from './components/jsonArray'\nimport Example from './components/Example'\nimport Sidebar from './components/Sidebar'\nimport getConfig from './config'\n\n// wraps the fixed code documentation framework in the\n// grid structure to provide one line per example\nexport default function Examples( props ){\n\n  const [category, setCategory] = useState()\n  const [subcategory, setSubCategory] = useState()\n  const [docType, setDocType] = useState('table')\n\n  var config = props.config\n  if( config === undefined ){\n    config = getConfig(docType)\n  }\n\n\n  config = new jsonArray(config)\n\n  // set default based on indev flag\n  const temp = config.filter(r => r.indev === true)\n\n  if( temp.length > 0 ){\n    // sort the configuration so the indev example is at the top\n    config = config.fillna({indev: false})\n    config = config.sort_values('indev', false)\n\n\n    if( category === undefined) {\n      setCategory( temp[0].category )\n      setSubCategory( temp[0].subcategory )\n    }\n  }\n\n\n  return (\n\n    <Segment inverted style={{height: '100vh'}}>\n      <Navbar callback={setDocType} docType={docType}/>\n\n      <Segment style={{margin:'0 20px 0 20px'}}>\n\n        <Grid columns={2}>\n           <Grid.Column\n             style={{maxWidth:'250px'}}>\n            <Sidebar\n              config={config}\n              category={category}\n              setCategory={setCategory}\n              setSubCategory={setSubCategory}\n              />\n           </Grid.Column>\n\n          <Grid.Column stretched style={{width:'calc(100% - 250px)'}}>\n             <PageContent\n               {...props}\n               category={category}\n               subcategory={subcategory}\n               config={config}\n               />\n           </Grid.Column>\n         </Grid>\n\n       </Segment>\n   </Segment>\n  )\n}\n\n\n\n\nfunction PageContent( props ){\n\n  // select all examples belonging to a single category\n  var examples = props.config.filter(r => r.category === props.category )\n\n  if( props.subcategory !== undefined ){\n    examples = examples.filter(r => r.subcategory === props.subcategory )\n  }\n\n\n\n  // create an array of example components\n  var exampleComponents = []\n  for( var i=0; i < examples.length; i++ ){\n\n    const title = examples[i].title\n\n    exampleComponents.push(\n      <Segment\n        key={`Example-${title}`}\n        vertical>\n        <Example\n          {...props}\n          jsxDir='examples'\n          docDir='doc'\n          example={ examples[i]}\n          />\n      </Segment>\n    )\n  }\n\n\n  return(\n    <div>\n      {exampleComponents}\n    </div>\n  )\n}\n\n\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nfunction Navbar(props){\n\n  var callback = (value) => console.log( 'selected', value)\n  if( props.callback !== undefined ) callback = (value) => props.callback(value)\n\n  return (\n\n      <Menu size='large' inverted>\n        <Container>\n          <Menu.Item as='a'\n            active={props.docType==='chart'}\n            onClick = {() => {\n              callback('chart')\n            }}>\n            Charts\n          </Menu.Item>\n          <Menu.Item as='a'\n            active={props.docType==='table'}\n            onClick = {(value) => {\n              callback('table')\n            }}>\n            Table\n          </Menu.Item>\n        </Container>\n      </Menu>\n\n  )\n  // <Menu.Item position='right'>\n  //   <Button as='a' inverted={!fixed}>\n  //     Log in\n  //   </Button>\n  //   <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n  //     Sign Up\n  //   </Button>\n  // </Menu.Item>\n\n}\n","/**\n * Extract\n * ===================\n *\n * Routines for extracting data to the local desktop\n * in various formats\n *\n * @author Nik Sumikawa\n * @date Oct 7, 2020\n */\n\nconst Papa = require(\"papaparse\")\n\n\n/**\n * Pushes the data into a downloadable location\n * and posts the interface to enable downlaodign\n * @param  {Blob}   data       Blob containing the data\n * @param  {string} filename  file name\n * @return {None}\n */\nfunction browserInterface( data, filename ){\n\n  var url = window.URL.createObjectURL(data);\n\n  var link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n\n  document.body.appendChild(link);\n\n  link.click();\n\n  // Clean up and remove the link\n  link.parentNode.removeChild(link);\n}\n\n/**\n * Formats the data as a csv file and push it into a dowloadble location\n * @param  {Array}   data     DataFrame containing the data\n * @param  {string} filename  file name\n * @return {None}\n */\nexport default function toCsv( data, filename='file.csv' ){\n\n  var csv = Papa.unparse(data, {\n    header: true,\n    columns:data.columns\n  });\n\n  var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\n\n  browserInterface( csvData, filename )\n}\n","/**\n * Components\n * ==============\n *\n * standard html components are wrapped in order to provide\n * the ability to leverage an existing framework when specified.\n * Defaults to using the standard html components\n *\n * @author: Nik Sumikawa\n * @date: Aug 25, 2020\n */\n\n\nimport React from \"react\";\n\n\nexport function Button(props){\n  return wrapper( props, 'button' )\n}\n\nexport function Input(props){\n  return wrapper( props, 'input' )\n}\n\nexport function Image(props){\n  return wrapper( props, 'img' )\n}\n\nexport function Table(props){\n  return wrapper( props, 'table' )\n}\n\nexport function Cell(props){\n  return wrapper( props, 'td' )\n}\n\nexport function Header(props){\n  return wrapper( props, 'thead' )\n}\n\nexport function HeaderCell(props){\n  return wrapper( props, 'th' )\n}\n\nexport function Row(props){\n  return wrapper( props, 'tr' )\n}\n\nexport function Body(props){\n  return wrapper( props, 'body' )\n}\n\nexport function Icon(props){\n  return wrapper( props, 'icon' )\n}\n\nexport function Checkbox(props){\n  return wrapper( props, 'checkbox' )\n}\n\nfunction wrapper( props, type ){\n\n  if( props.component === undefined ){\n    switch( type ){\n      case 'button':\n        return <button {...props}>{props.defaultValue}</button>\n\n      case 'input':\n        return <input {...props}>{props.defaultValue}</input>\n\n      case 'checkbox':\n        return <input {...props} type=\"checkbox\" >{props.defaultValue}</input>\n\n      case 'img':\n        return <img\n          src={props.defaultValue}\n          alt=''\n          {...props} />\n\n      case 'table':\n        return <table {...props}>{props.defaultValue}</table>\n\n      case 'td':\n        return <td {...props}>{props.defaultValue}</td>\n\n      case 'tr':\n        return <tr {...props}>{props.defaultValue}</tr>\n\n      case 'th':\n        return <th {...props}>{props.defaultValue}</th>\n\n      case 'body':\n        return <tbody {...props}>{props.defaultValue}</tbody>\n\n      case 'thead':\n        return <thead {...props}>{props.defaultValue}</thead>\n\n      case 'icon':\n        return <i {...props}>{props.defaultValue}</i>\n\n      default:\n        console.log( 'default type', type)\n        return <div {...props}>{props.defaultValue}</div>\n\n\n    }\n  }\n\n  return(\n    <props.component\n      {...props}\n      component={undefined}\n      >\n      {props.defaultValue}\n    </props.component>\n  )\n}\n","import React from 'react';\n\n\n\nexport default function SimpleTable( props ){\n\n  return (\n    <div>\n      This is a very basic example to show how this works\n    </div>\n  )\n\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment} from 'semantic-ui-react'\n\nimport Controls from './Header'\nimport CodeRender from './CodeRender'\n\n\n\nexport default function Example( props ){\n\n  const [showCode, setShowCode] = useState(false)\n\n  var Component\n\n  var dir = props.jsxDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  try{\n    Component = require(`Documentation/${dir}/${props.example.path}`).default\n  }catch{\n    Component = NullComponent\n  }\n\n  console.log( 'what are the components', Component)\n\n  return(\n    <Segment.Group>\n      <Segment>\n        <Controls\n          title = {props.example.title}\n          description = {props.example.description}\n          onClick={() => setShowCode(!showCode)}\n          />\n      </Segment>\n\n      <Segment style={{width:'100%'}}>\n        <Component {...props}/>\n      </Segment>\n\n      <CodeRender\n        {...props}\n        visible = {showCode}\n        />\n\n    </Segment.Group>\n  )\n}\n\nfunction NullComponent(props){ return null }\n","/**\n * @title Controls\n * @description Example Header and controls\n * @author Nik sumikawa\n * @date Nov 21, 2020\n *\n * note taken from react-hot-docs\n */\n\nimport React from \"react\"\n\nimport {\n  Grid,\n  Header,\n  Button\n} from \"semantic-ui-react\"\n\n\nexport default function Controls( props ){\n\n  // do not render the component when the visiblility flag\n  // is set to false\n  if( props.visible === false ) return null\n\n  var title\n  if( props.title !== undefined ) title = props.title\n\n  var description\n  if( props.description !== undefined ) description = props.description\n\n  return(\n    <Grid>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <Header as=\"h2\">{title}</Header>\n          <span>{description}</span>\n        </Grid.Column>\n\n\n        <Grid.Column textAlign='right'>\n          <Button\n            onClick={() => props.onClick()}>\n            Show code\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n\n    </Grid>\n  )\n\n}\n","/**\n * JSON Object\n * ===============\n *\n * Class that aggregates common functions performed\n * on json objects\n *\n * :Author: Nik Sumikawa\n * :Date: April 29, 2020\n */\n\n\nimport datetime from './data_types/datetime';\n\nimport jsonArray from './jsonArray'\n\n\nexport default class jsonObject extends Object {\n\n  constructor(data) {\n    super()\n\n\n    const keys = Object.keys(data)\n\n    // copy over the content from the input data\n    for( var index in keys ){\n      const key = keys[index]\n      this[key] = data[key]\n    }\n\n  }\n\n  // TODO: search for all columns in the Array\n  get columns(){ return Object.keys(this) }\n  get keys(){ return Object.keys(this) }\n\n  // converts the specified key to a datetime attribute\n  strptime( key ){\n\n    if( !(this[key] instanceof datetime) ){\n      this[key] = datetime(this[key])\n    }\n    return this\n  }\n\n\n  // convert the json Object to a two dimensional json array\n  to_jsonArray( key_name, value_name ){\n\n    var array = []\n    const keys = this.columns\n\n    // set defaults for the key and value attributes\n    if( key_name === undefined ) key_name = 'key'\n    if( value_name === undefined ) value_name = 'value'\n\n    // convert the json object into a json array\n    for( var i=0; i < keys.length; i++ ){\n      array.push( {\n        [key_name]: keys[i],\n        [value_name]: this.json_object[keys[i]]\n      })\n    }\n\n    return new jsonArray(array)\n\n  }\n\n\n}\n","/**\n * Array To String\n * ====================\n *\n * Converts jsonArray to an array of strings\n *\n * @author Nik Sumikawa\n * @date Aug 31, 2020\n *\n */\n\nimport jsonArray from '../../jsonArray'\nimport valueToString from './valueToString'\n\nexport default class arrayToString{\n\n  // defaults\n  constructor(){\n\n    // whitespace for each tab and the tabs between each column\n    this.tab_count = 1\n    this.tab_space = 4\n\n    this.max_width = 20\n\n    this.columns = undefined\n\n  }\n\n\n    // returns the length of the contents\n    col_width( value ){\n\n      return value.length\n    }\n\n\n\n    // determines the maximum width between columns\n    col_spacing( json_array ){\n\n      var max_length = {}\n\n      const value_to_string = new valueToString()\n\n      // extract the column names when they are not provided locally\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\n\n      // determine the maximum string lenght of each column\n      for( var i=0; i < this.columns.length; i++ ){\n\n        var col = this.columns[i]\n\n        // determine the length of the column name string\n        max_length[col] = this.col_width(this.columns[i])\n\n        // cap the length of the column name length. We can skip\n        // processing because we are already at the max width\n        if( max_length[col] > this.max_width ){\n          max_length[col] = this.max_width\n          continue\n        }\n\n\n        // determine the maximum string length of the column\n        for( var j=0; j < json_array.length; j++ ){\n\n          // do not consider non-existing values\n          if( !Object.keys(json_array[j]).includes(col) ) continue\n\n          const value = value_to_string.toString(\n            json_array[j][col],\n            json_array.dtypes[col]\n          )\n\n          if( value.length > max_length[col] ){\n            max_length[col] = value.length\n          }\n\n          // We can skip processing because we are already at the max width\n          if( max_length[col] > this.max_width ) break\n\n        }\n\n      }\n\n      return max_length\n    }\n\n\n\n    /**\n     * returns a list of column names in order with the proper\n     * whitespace added for logging\n     * @param  {Object} spacing maximum string length for the column\n     * @return {Array}         array of column names with the appropriate whitespace\n     */\n    format_columns( spacing ){\n\n      var row_array = []\n\n      // add each column name with the appropriate white space added\n      for( var j=0; j < this.columns.length; j++ ){\n\n        const col = this.columns[j]\n        const whitespace = spacing[col] - col.length\n        row_array.push( new Array(whitespace + 1).join(' ') + col )\n      }\n\n      return row_array\n    }\n\n\n    /**\n     * returns a formatted string of the formatted cell for each row\n     * @param  {Array}  row     Object containing the values for each row\n     * @param  {Object} dtypes  Object containing the maximum length for each column\n     * @param  {Object} spacing maximum string length for the column\n     * @return {Array}         array of values with the appropriate whitespace\n     */\n    format_row( row, dtypes, spacing ){\n\n      const value_to_string = new valueToString()\n\n      var row_array = []\n      for( var j=0; j < this.columns.length; j++ ){\n\n        const col = this.columns[j]\n        var value = row[col]\n\n        var whitespace\n        if( value === undefined ){\n          value = 'nan'\n          whitespace = spacing[col] - 3\n        } else {\n\n          value = value_to_string.toString( value, dtypes[col] )\n          whitespace = spacing[col] - value.length\n        }\n\n        try{\n          row_array.push( new Array(whitespace + 1).join(' ') + value )\n        }catch{row_array.push(value)}\n      }\n\n      return row_array\n    }\n\n\n    /**\n     * Converts the array of strings int a single array where\n     * each column is separated by whitespace based on the\n     * local white space definition\n     * @param  {Array} array  Array of strings\n     * @return {String}       String containing each array element with the desired whitespace\n     */\n    format_array( array ){\n      return new Array(...array).join(new Array(this.tab_space * this.tab_count).join(' '))\n    }\n\n\n    /**\n     * Returns a matrix of strings that have been formated based on the data\n     * type of each column\n     * @param  {Array} array  jsonArray containing the matrix to convert\n     * @return {String}        Matrix of strings formatted based on the column data type\n     */\n    toString( array ){\n\n      // force the input array into a json array type\n      var json_array = array\n      if(!(json_array instanceof(jsonArray))){\n        json_array = new jsonArray(array)\n      }\n\n      // extract the column names when they are not provided locally\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\n\n      const spacing = this.col_spacing( json_array )\n\n      // seed the formatted array with the column names\n      var formatted = this.format_array( this.format_columns(spacing) ) + '\\r\\n'\n\n      // format the data from each row\n      for( var i=0; i < json_array.length; i++ ){\n        formatted = formatted.concat(\n          this.format_array( this.format_row(json_array[i], json_array.dtypes, spacing) ) + '\\r\\n'\n        )\n      }\n\n      return formatted\n\n    }\n\n\n    toConsole( array ){\n\n      const jsonArray_str = this.toString( array )\n      console.log( jsonArray_str )\n    }\n}\n","/**\n * Format\n * =============\n * Routines to convert the jsonArray into a string for visualization\n * purposes\n *\n * @author Nik Sumikawa\n * @date Aug 31, 2020\n */\n\n\nimport arrayToString from './arrayToString'\nimport valueToString from './valueToString'\n\nexport default class strFormat{\n\n  constructor( data ){\n    this.data = data\n  }\n\n\n  /**\n   * returns a string containing the jsonArray contents\n   * where each column is formated based on the local data\n   * types\n   * @return {String} Formatted string containing the jsonArray contents\n   */\n  get table(){\n    const format = new arrayToString()\n    return format.toString( this.data )\n  }\n\n  row( index ){\n    return 'not implemented'\n  }\n\n  column( col ){\n    return 'not implemented'\n  }\n\n  /**\n   * Returns the formatted data for the specified cell\n   * @param  {int} row row number\n   * @param  {String} col column name\n   * @return {String}     formatted string representing the string value\n   */\n  value( row, col ){\n    const format = new valueToString()\n    return format.toString(\n      this.data[row][col],\n      this.data.dtypes[col]\n    )\n  }\n\n}\n","/**\n * Echarts Tooltip formatter\n * =========================\n *\n * Attempt to standardize the tooltip format\n * to show data from the top 5 columns or those\n * specified by the user\n *\n * :Author: Nik Sumikawa\n * :Date: Sept 29, 2020\n */\n\n\nexport default class echartsTooltip extends Object {\n\n  constructor() {\n    super()\n    // super(...array)\n\n    // as a default, set the tooltip to trigger when\n    // hovering over an item\n    this.show = true\n    this.trigger = 'item'\n    // this.showContent = false\n  }\n\n\n  /**\n   * Formats the tooltip using data taken from the\n   * selected sample. When a list of columns are provided,\n   * they are used render the tooltip information\n   * @param  {object} json_array   array of json objects\n   * @param  {Array}  [columns=[]] array fo column names\n   * @return {none}              The tooltip format is stored locally\n   */\n  from_DataFrame( json_array, columns=[] ){\n\n    if( columns.length === 0 ){\n      columns = json_array.columns.splice(1,5)\n    }\n\n    columns = columns.concat(['__index__'])\n    this.formatter = (props) => {\n      // the dataframe index was pushed into the plot data in addition to the\n      // data used for plotting. This was used to locate the part by index\n      // number after splitting it for visualization purposes\n      const index = props.data[2]\n      if( index === undefined ) return ''\n\n      var sample = json_array.filter(r => r.__index__ === index)\n      if( sample.length === 0) return ''\n\n      // select the only sample that should reside at the index\n      sample = sample[0]\n\n      // format a string based on the DataFrame contents\n      var string = ''\n      for (var i=0; i < columns.length; i++ ){\n         // [key, value] of Object.entries(json_array[index])) {\n        const col = columns[i]\n        if( col === '__index__' ) continue\n        string = string + `<b>${col}</b>: ${sample[col]}<br/>`;\n      }\n\n      return string\n\n    }\n\n\n  }\n}\n","/**\n * Echarts Axis formatter\n * =========================\n *\n * Routines to automatically change the axis format based on\n * specifications. The purpose is to limit axis configuration\n * to simplify the plotting process. At the same time, It is\n * possible to extend the axis parameters as desired.\n *\n * :Author: Nik Sumikawa\n * :Date: July 22, 2020\n */\n\nimport moment from 'moment'\n\nexport default class echartsAxis extends Object {\n\n  constructor( col='', json_array=[] ) {\n    super()\n\n    this.axis = col\n    this.name = col\n    // super(...array)\n    //\n    this.initialize( json_array, col )\n  }\n\n  // default axis parameters\n  default(){\n    this.type = 'value'\n    this.scale = true\n  }\n\n  /**\n   * Initializes the axis based on the data type. this\n   * attempts to define the axis automatically. It's\n   * possible to overwrite this for custom plotting\n   * @param  {Array} json_array  jsonArray\n   * @param  {String} col       Column name\n   * @return {null}             nothing is returned\n   */\n  initialize( json_array, col ){\n\n    if( json_array === undefined ) return null\n    if( json_array.length === 0 ) return null\n    if( col === undefined ) return null\n    if( col === '' ) return null\n\n    // set the axis label\n    this.name = col\n\n    switch( json_array.dtypes[col] ){\n      case 'string' :\n        this.type = 'category'\n        this.data = json_array.unique(col)\n        break\n\n      // format date columns\n      case 'datetime':\n      case 'strftime':\n        this.type = 'time'\n        this.axisLabel = {\n          formatter: (function(value){\n            return moment(value).format('YYYY-MM-DD')\n          })\n        }\n        break;\n\n      default:\n        this.type = 'value'\n        this.scale = true\n    }\n  }\n\n\n  hide(){ this.show = false }\n\n  minValue(value){\n    this.min = (val) => {\n      if( value !== undefined) return value\n      return val.min\n    }\n  }\n\n  maxValue(value){\n    this.max = (val) => {\n      if( value !== undefined) return value\n      return val.max\n    }\n  }\n\n  rotate(){\n    this.axisLabel = {\n      ...this.axisLabel,\n      ...{ rotate: 90 }\n    }\n  }\n\n  label( label ){\n    if( label !== undefined ){\n      this.name = label\n    }\n  }\n\n  tick_values( values ){\n    if( values !== undefined ){\n      this.type = 'category'\n      this.data = values\n    }\n  }\n\n  // // process the parameters object to configure the plot axis\n  // process_params( params ){\n  //\n  //   // add the label to the axis configuration\n  //   this.label( params.label )\n  //\n  //   switch( params.type ){\n  //     case 'category':\n  //       this.tick_values( [...new Set(params.values)] )\n  //       break;\n  //\n  //     default:\n  //       break;\n  //   }\n  // }\n\n  // formats the axis to display categories\n  to_category( params={} ){\n    this.type = 'category'\n    this.data = [...new Set(params.values)]\n\n    // this.splitArea ={\n    //     show: true\n    // }\n  }\n\n  // formats the axis to display values\n  to_value( params={} ){\n    this.type = 'value'\n  }\n\n\n  // format the axis to display dates\n  to_date( params={} ){\n\n    var strftime = 'MM-DD'\n    if( params.strftime !== undefined ) strftime = params.strftime\n\n    this.type = 'time'\n    this.axisLabel = {\n      formatter: (function(value){\n        return moment(value).format(strftime)\n      })\n    }\n\n  }\n\n\n  // format the axis to display dates\n  scientific(units=2){\n    this.axisLabel = {\n      formatter: (function(value){\n        return value.toExponential(units)\n      })\n    }\n  }\n\n\n  dynamic_range( json_array ){\n    const min = json_array.min( this.name )\n    const max = json_array.max( this.name )\n    const padding = (max - min) * 0.05\n\n    console.log( min, max, padding)\n    this.min = (min - padding).toFixed(3)\n    this.max = (max + padding).toFixed(3)\n  }\n\n}\n","\n\nexport default function Axline( value, props={} ){\n\n  var val = value\n  if( val/Math.pow(10,4-1) > 1 ) val = val.toExponential(3)\n\n  var label = val\n  if( props.label !== undefined) label = props.label\n\n  var color = 'red'\n  if( props.color !== undefined ) color = props.color\n\n  var line = {\n    name: 'limit',\n    type: 'line',\n    color: color,\n    markLine: {\n        symbol: \"none\",\n        data: [{\n          tooltip: {show:false},\n          // name: val,\n          label: {\n            formatter: label,\n            position: 'end'\n          }\n        }]\n    }\n  }\n\n  if( props.axis === 'yAxis' ){\n    line.markLine.data[0]['yAxis'] = value\n  }else{\n    line.markLine.data[0]['xAxis'] = value\n  }\n\n  return line\n}\n","\n\nimport echartsAxis from '../../axis'\nimport moment from 'moment'\n\n\n/**\n * Convert the json_array to a line plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function line( json_array, props={} ){\n\n  const line = require('../../series/line').default\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.coly === undefined)){\n    alert( 'scatter plot required att : coly ')\n  }\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis( props.colx )\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis( props.coly, json_array )\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.colx] instanceof moment ){\n    json_array = json_array.strftime(props.colx)\n    xAxis.to_date()\n  }\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.coly] instanceof moment ){\n    json_array = json_array.strftime(props.coly)\n    yAxis.to_date()\n  }\n\n  var series = line( {...props, ...{json_array: json_array}} )\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n  }\n\n}\n","\n// returns a rolling average line where the average is\n// computed based on the center of the window\nexport default function CenterWindow(data, window){\n\n\n  var midStart = Math.floor(window/2) + 1\n  var midEnd = data.length - Math.floor(window/2) - 1\n\n  return [\n    {\n      type: 'line',\n      data: data.slice(0,midStart),\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n          color: '#808080',\n          width: 2,\n          type: 'dotted'\n      },\n    },\n    {\n      type: 'line',\n      data: Array(midStart-1).concat(data.slice(midStart-1, midEnd+1)),\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n          color: '#000000',\n          width: 2,\n          type: 'dashed'\n      },\n    },\n    {\n      type: 'line',\n      data: Array(midEnd).concat(data.slice(midEnd, data.length)),\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n          color: '#808080',\n          width: 2,\n          type: 'dotted'\n      },\n    }\n  ]\n\n}\n","/**\n * echarts line\n * =================\n *\n * Converts json arrays into echart line series object\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport propsToSeries from '../../propsToSeries'\nimport CenterWindow from './CenterWindow'\nimport TailingWindow from './TailingWindow'\n\n// returns the\nexport default function rollingAvg( props ){\n\n  var json_array = props.json_array\n\n  // define the average type\n  var avgType = props.avgType\n  if( avgType === undefined  ) avgType = 'center'\n\n\n  if( !json_array.columns.includes(`${props.coly}_avg`) ){\n    json_array = json_array.rolling_average(\n      props.coly,\n      props.window,\n      avgType\n    )\n  }\n\n  const data = json_array.map(r => r[`${props.coly}_avg`])\n\n  var Series = []\n  switch( avgType ){\n    case 'center':\n      Series = CenterWindow(data, props.window)\n      break\n\n    case 'tailing':\n      Series = TailingWindow(data, props.window)\n      break\n\n    default:\n      Series = CenterWindow(data, props.window)\n\n  }\n\n\n  for( let i=0; i < Series.length; i++ ){\n    Series[i] = propsToSeries(props, Series[i])\n  }\n\n  return Series\n\n}\n","// returns the rolling average line plot where the average\n// is computed across the previous n samples\nexport default function TailingWindow(data, window){\n\n  return [\n    {\n      type: 'line',\n      data: data.slice(0,window),\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n          color: '#808080',\n          width: 2,\n          type: 'dotted'\n      },\n    },\n    {\n      type: 'line',\n      data: Array(window-1).concat(data.slice(window-1, data.length)),\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n          color: '#000000',\n          width: 2,\n          type: 'dashed'\n      },\n    },\n  ]\n\n}\n","\n\nimport echartsAxis from '../../axis'\nimport moment from 'moment'\n\nimport Line from '../../series/line/rollingAvg'\n/**\n * Convert the json_array to a line plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function rollingAvg( json_array, props={} ){\n\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.coly === undefined)){\n    alert( 'scatter plot required att : coly ')\n  }\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis( props.colx )\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis( props.coly, json_array )\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.colx] instanceof moment ){\n    json_array = json_array.strftime(props.colx)\n    xAxis.to_date()\n  }\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.coly] instanceof moment ){\n    json_array = json_array.strftime(props.coly)\n    yAxis.to_date()\n  }\n\n  var series = Line( {...props, ...{json_array: json_array}} )\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n  }\n\n}\n","\nimport echartsAxis from '../../axis'\n\n/**\n * Convert the json_array to a boxplot plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function boxplot( json_array, props={} ){\n\n  const boxplot = require('../../series/boxplot').default\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined) ){\n    alert( 'boxplot required att : colx and coly' )\n  }\n\n  const keys = json_array.unique( props.colx, true )\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis(props.colx)\n  xAxis.to_category({ values: keys })\n  xAxis.axisLabel = { formatter: '{value}' }\n  // xAxis.boundaryGap = true\n  // xAxis.nameGap = 30\n  // xAxis.splitLine = {show: false }\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis(props.coly)\n  yAxis.to_value()\n  yAxis.dynamic_range(json_array)\n  // yAxis.splitArea = {show: true}\n\n\n  var series = boxplot( {...props, ...{json_array: json_array}} )\n  // const echart_series = new echartsSeries( json_array )\n  // series = echart_series.boxplot(props.colx, props.coly, props )\n\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n  }\n\n}\n","\nimport echartsAxis from '../../axis'\n\n/**\n * Convert the json_array to a heatmap plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function heatmap( json_array, props={} ){\n\n  // returns an object for generating a heatmap, similar to\n  // the calendar example but with data from a jsonArray\n  // example: https://echarts.apache.org/examples/en/editor.html?c=calendar-heatmap\n\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\n    alert( 'boxplot required att : colx, coly and value' )\n  }\n\n  // force the datatypes of the columns to strings due to the categorical nature of the heatmap\n  json_array = json_array.astype({\n    [props.colx]: 'string',\n    [props.coly]: 'string',\n  })\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis(props.colx)\n  xAxis.to_category({values: json_array.unique(props.colx, true) })\n  xAxis.label( props.colx )\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis(props.coly)\n  yAxis.to_category({ values: json_array.unique(props.coly, true) })\n  xAxis.label( props.coly )\n\n\n  var grid = {backgroundColor: 'rgb(0, 128, 0)'}\n\n  // set the percentage flag based on the datatype or parameter\n  var percentage = false\n  if( (json_array.dtypes[props.value] === 'percentage') | (props.percentage === true)){\n    percentage = true\n  }\n\n  var min = Math.min(...json_array.unique(props.value))\n  var max = Math.max(...json_array.unique(props.value))\n\n  var visualMap = {\n      min: (percentage === true) ? min * 100 : min,\n      max: (percentage === true) ? max * 100 : max,\n      calculable: true,\n      orient: 'vertical',\n      left: 'left',\n      bottom: '10%',\n      inRange: {\n        color: ['green', 'yellow','orange', 'red']\n      }\n  }\n\n  var series = [{\n      type: 'heatmap',\n      data: json_array.map(function (item) {\n\n        var value = Number(item[props.value])\n        if( percentage === true ) value = (Number(item[props.value])*100).toFixed(2)\n\n          return [\n            item[props.colx],\n            item[props.coly],\n            value\n          ]\n        }),\n      label: {\n          show: true\n      },\n  }]\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series,\n    grid: grid,\n    visualMap: visualMap\n\n  }\n\n}\n","\nimport echartsAxis from '../../axis'\nimport moment from 'moment'\n\n/**\n * Convert the json_array to a scatter plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function scatter( json_array, props={} ){\n\n  const scatter = require('../../series/scatter').default\n  const scatter_by = require('../../series/scatter/scatterBy').default\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined)){\n    alert( 'scatter plot required att : colx and coly ')\n  }\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis( props.colx, json_array )\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis( props.coly, json_array )\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.colx] instanceof moment ){\n    json_array = json_array.strftime(props.colx)\n    xAxis.to_date()\n  }\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.coly] instanceof moment ){\n    json_array = json_array.strftime(props.coly)\n    yAxis.to_date()\n  }\n\n\n\n  var series\n\n  if( (props.colorBy !== undefined)&(json_array.columns.includes(props.colorBy)) ){\n\n    series = scatter_by({\n      ...props,\n      ...{\n          json_array: json_array,\n          colorBy: props.colorBy\n        }\n    })\n\n  }else{\n    series = scatter({\n      ...props,\n      ...{json_array: json_array}\n    })\n\n  }\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n  }\n\n}\n","\nimport echartsAxis from '../../axis'\n\n/**\n * Convert the json_array to a scatter plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function bar( json_array, props={} ){\n\n  const bar = require('../../series/bar').default\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined) ){\n    alert( 'bar plot required att : colx and coly ')\n  }\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis(props.colx)\n  xAxis.label(props.colx)\n  xAxis.tick_values(json_array.values(props.colx))\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis(props.coly)\n\n  // const echart_series = new echartsSeries( json_array )\n  // var series = echart_series.bar( props.coly, props)\n\n  var series = bar( {\n    ...props,\n    ...{\n      json_array: json_array,\n      col: props.coly\n    }} )\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series,\n  }\n\n}\n","\nimport bar from './bar'\n\n/**\n * Convert the json_array to a scatter plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function Pareto( json_array, props={} ){\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.col === undefined) ){\n    alert( 'pareto plot required att : col ')\n  }\n\n  var data = json_array.filter(r => r[props.col] !== '')\n  var pareto = data.groupby([props.col])\n\n\n\n  var att = 'count'\n  if( props.ratio === true ) att = 'ratio'\n\n  pareto = pareto.sort_values('count', false)\n\n  const total = pareto.sum('count')\n  var cumsum = 0\n\n  // creat the cumsum and hold ratio\n  pareto = pareto.row_apply(r => {\n      cumsum = cumsum + r.count\n      r['cumsum'] = cumsum/total\n      r['ratio'] = r.count/total\n\n      return r\n  })\n\n  // generate the bar chart for the pareto \n  var option = bar(pareto, {colx: props.col, coly: att})\n\n  // add a lineplot for the cusum when specified\n  if( props.cumsum === true ){\n    option.series = option.series.concat(\n      pareto.echartsSeries.line({\n        colx: props.col,\n        coly: 'cumsum',\n      })\n    )\n  }\n\n\n  // return the bar plot options using the pareto data\n  return option\n\n\n}\n","/**\n * echarts grid\n * =================\n *\n * Converts json arrays into echart grid series object\n *\n * :Author: Nik Sumikawa\n * :Date: March 5, 2021\n */\n\n\nimport propsToSeries from '../propsToSeries'\nimport get_color from '../../../colors/Colors'\n\n/**\n * Convert the json_array to a line plot\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\n * @param  {string} coly  column 2 name\n * @param  {object} params parameters used to customize the plot\n * @return {Object}       local object contents\n */\nexport default function grid( props ){\n\n  var json_array = props.json_array\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\n    alert( 'boxplot required att : colx, coly and value' )\n    return []\n  }\n\n  var color_col = props.color\n  if( props.color === undefined ){\n    color_col = 'color'\n    json_array = json_array.create_column( 'color', r => get_color(r[props.value]) )\n  }\n\n\n  var Series = {\n    type: 'custom',\n    // coordinateSystem: 'cartesian2d',\n    renderItem: renderRectangle,\n    animation: false,\n    legendHoverLink : false,\n    silent: true,\n\n    encode: {\n        x: 0,\n        y: 1\n    },\n    data: json_array.map(r => [\n      r[props.colx],\n      r[props.coly],\n      r[props.value],\n      r[color_col],\n    ])\n  }\n\n  if( props.label === true ){\n    Series['label'] = {\n        show: true,\n        color: \"black\",\n        fontSize:12,\n        z: 10,\n        zlevel: 10,\n        formatter: (element) => {\n          return element.value[2]; // Use sum variable here\n        },\n    }\n  }\n\n  Series = propsToSeries(props, Series)\n\n  return [Series]\n\n}\n\n\n\n\nfunction renderRectangle(params, api) {\n\n    var xCoor = api.value(0);\n    var yCoor = api.value(1);\n    var color = api.value(3);\n\n    const [x,y] = api.coord([xCoor, yCoor])\n    const [w,h] = api.size([1, 1])\n\n    return {\n        type: 'rect',\n        shape: {\n            x: x,\n            y: y,\n            width: w,\n            height: h\n        },\n        style: api.style({\n            stroke: '#B0B0B0',\n            fill: color,\n        }),\n    };\n}\n","\nimport echartsAxis from '../../axis'\nimport grid from '../../series/grid'\n\n/**\n * Convert the json_array to a heatmap plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function rectGrid( json_array, props={} ){\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\n    alert( 'boxplot required att : colx, coly and value' )\n  }\n\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis(props.colx)\n  xAxis.label( props.colx )\n  xAxis.minValue()\n  xAxis.maxValue()\n  xAxis.hide()\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis(props.coly)\n  yAxis.label( props.coly )\n  yAxis.minValue()\n  yAxis.maxValue()\n  yAxis.hide()\n\n\n  var series = grid( {...props, ...{json_array: json_array}} )\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n\n  }\n\n}\n","\nimport propsToSeries from '../propsToSeries'\n\n/**\n * Convert the json_array to a pie char\n * @param  {string} value  values for pie chart\n * @param  {string} label  name of each section\n */\nexport default function pie( props ){\n\n  // format the data with and without a label (w/o is the default)\n  var data = props.json_array.map(r => { return {value: r[props.value]}})\n  if( props.label !== undefined ){\n    data = props.json_array.map(r => {\n      return {\n        value: r[props.value],\n        name: r[props.label]\n      }\n    })\n  }\n\n\n  var Series = {\n    type: 'pie',\n    avoidLabelOverlap: false,\n    radius: ['40%', '70%'],\n    labelLine: {\n                show: false\n            },\n    data: data\n  }\n\n  if( props.label !== undefined ){\n    Series['label'] = {\n        show: false,\n        position: 'center'\n    }\n\n    Series['emphasis'] = {\n        label: {\n            show: true,\n            fontSize: '40',\n            fontWeight: 'bold'\n        }\n    }\n  }\n\n  Series = propsToSeries(props, Series)\n\n  return [Series]\n\n}\n","\n\nimport pie from '../../../series/pie'\n\n\nexport default function pieChart( json_array, props={} ){\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.value === undefined)){\n    alert( 'pie plot required att : value ')\n  }\n\n  var option = {\n    series : pie( {...props, ...{json_array: json_array}} ),\n  }\n\n  if( props.label !== undefined ){\n    option['tooltip'] = {trigger: 'item'}\n  }\n\n  return option\n\n}\n","\n\nimport pie from './index'\n/**\n * @param  {string} col  column name\n */\nexport default function fromSeries( props ){\n\n  const group = props.json_array.groupby([props.col])\n\n  return pie({\n      ...props,\n      ...{\n        json_array: group,\n        value: 'count',\n        label: props.col\n        }\n  })\n\n}\n","\n\nimport pie from '../../../series/pie/fromSeries'\n\n\nexport default function pieFromSeries( json_array, props={} ){\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.col === undefined)){\n    alert( 'pie plot required att : col ')\n  }\n\n  var option = {\n    series : pie( {...props, ...{json_array: json_array}} ),\n  }\n\n  if( props.label !== undefined ){\n    option['tooltip'] = {trigger: 'item'}\n  }\n\n  return option\n\n}\n","\n\nimport echartsAxis from '../../axis'\nimport moment from 'moment'\n\n\n/**\n * Convert the json_array to a line plot option object\n * @param  {string} colx  column x name\n * @param  {string} coly  column y name\n */\nexport default function waterfall( json_array, props={} ){\n\n  const waterfall = require('../../series/waterfall').default\n\n  // check to ensure the minimum set of parameters are available\n  if( (props.colx === undefined)|(props.coly === undefined)){\n    alert( 'scatter plot required att : coly ')\n  }\n\n  // set the x axis values using the Axis class\n  var xAxis = new echartsAxis( props.colx )\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\n\n  // set the y axis values using the Axis class\n  var yAxis = new echartsAxis( props.coly, json_array )\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.colx] instanceof moment ){\n    json_array = json_array.strftime(props.colx)\n    xAxis.to_date()\n  }\n\n\n  // convert the x-axis to date type when of moment type\n  if( json_array[0][props.coly] instanceof moment ){\n    json_array = json_array.strftime(props.coly)\n    yAxis.to_date()\n  }\n\n  var series = waterfall( {...props, ...{json_array: json_array}} )\n\n  return {\n    xAxis: [xAxis],\n    yAxis: [yAxis],\n    series: series\n  }\n\n}\n","/**\n * echarts Options\n * =================\n *\n * Converts json arrays into echart option objects. This is\n * intended for customize plots\n *\n * :Author: Nik Sumikawa\n * :Date: July 7, 2020\n */\n\n\nimport jsonArray from '../../../jsonArray'\nimport echartsTooltip from '../tooltips'\nimport echartsAxis from '../axis'\n\nimport * as features from './features'\nimport Line from './charts/line'\nimport RollingAvg from './charts/rollingAvg'\nimport Boxplot from './charts/boxplot'\nimport Heatmap from './charts/heatmap'\nimport Scatter from './charts/scatter'\nimport Bar from './charts/bar'\nimport Pareto from './charts/pareto'\nimport Grid from './charts/grid'\nimport Pie from './charts/pie'\nimport PieFromSeries from './charts/pie/fromSeries'\nimport Waterfall from './charts/waterfall'\n\nimport Toolbox from './format/Toolbox'\nimport legend from './format/legend'\n\n\nexport default class echartsOptions extends Object {\n\n  constructor(data) {\n    super()\n\n\n    this.json_array = data\n\n    // cast the variable to a jsonArray type when it is a standard array\n    if( (this.json_array instanceof jsonArray) === false ){\n      this.json_array  = new jsonArray( this.json_array  )\n    }\n\n    // set the default plot parameters\n    this.default()\n  }\n\n\n  // set the default plot parameters\n  default(){\n\n    // default animations to off for performance\n    this.animation = false\n\n    this.tooltip = new echartsTooltip()\n\n    this.grid = {\n        left: '10%',\n        right: '10%',\n        bottom: '15%'\n    }\n\n    this.series = []\n  }\n\n\n  heatmap( props ){ return this.generate_options( Heatmap, props ) }\n  boxplot( props ){ return this.generate_options( Boxplot, props ) }\n  scatter( props ){ return this.generate_options( Scatter, props ) }\n  bar( props ){ return this.generate_options( Bar, props ) }\n  pareto( props ){ return this.generate_options( Pareto, props ) }\n  line( props ){ return this.generate_options( Line, props ) }\n  rollingAvg( props ){ return this.generate_options( RollingAvg, props ) }\n  rectGrid( props ){ return this.generate_options( Grid, props ) }\n  pie( props ){ return this.generate_options( Pie, props ) }\n  pieFromSeries( props ){ return this.generate_options( PieFromSeries, props ) }\n  waterfall( props ){ return this.generate_options( Waterfall, props ) }\n\n\n  toolbox( props ){ return Toolbox( this, props ) }\n  selection( props ){ return features.Selection( this, props ) }\n  zoom( props ){ return features.DataZoom( this, props ) }\n  highlight( props ){\n    const options = features.Highlight( this, props )\n    this.local_variables( options )\n    delete this.json_array\n    return this\n  }\n\n  // wrapper used to generate the options based on the provided function\n  generate_options( func, props ){\n    const options = func( this.json_array, props )\n\n    this.local_variables( options )\n\n    // add the tooltip when provided as a parameter\n    if( props.tooltip !== undefined ){\n      this.tooltip.from_DataFrame(this.json_array, props.tooltip)\n    }\n\n    if( props.delete !== false ) delete this.json_array\n\n    return this\n  }\n\n\n  // create a local copy of each option variable\n  local_variables( options ){\n    const keys = Object.keys( options )\n    for( var i=0; i < keys.length; i++ ){\n      const key = keys[i]\n      this[key] = options[key]\n    }\n  }\n\n  // appends the series\n  append_series( series ){\n    this.series = this.series.concat(series)\n    return this\n  }\n\n  xtick_padding(padding){\n    this.grid = {\n      ...this.grid,\n      ...{bottom: padding}\n    }\n  }\n\n  legend(position){\n    this.legend = legend(position)\n  }\n\n  // add a secondary y axis\n  secondary_axis( col ){\n    this.yAxis.push(  new echartsAxis(col) )\n    return this\n  }\n\n  // creates a horizontal line across the plotting area\n  axhline( value, props={} ){\n    const line = features.Axline( value, {\n      ...props,\n      ...{axis: 'yAxis'}\n    })\n\n    this.append_series(line)\n    return this\n\n  }\n\n  // creates a horizontal line across the plotting area\n  axvline( value, props={} ){\n\n    const line = features.Axline( value, {\n      ...props,\n      ...{axis: 'xAxis'}\n    })\n\n    this.append_series(line)\n    return this\n  }\n\n\n}\n","\n// import { toolbox as features } from 'echarts/lib/langEN'\n\n// adds a toolbox to the chart to enable user interaction\nexport default function Toolbox( option, props ){\n\n  option['toolbox'] = {\n    show: true,\n    feature: {\n        dataZoom: {\n          title: 'Zoom',\n          show: true\n        },\n        saveAsImage: { title: 'Save', show: true},\n        restore: {title: 'Restore', show: true},\n    }\n  }\n\n  return option\n\n}\n","\n// adds the ability to select data from the plot\nexport default function Selection( option, sliders=false ){\n\n  option['brush'] = {\n      toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n      xAxisIndex: 0,\n      outOfBrush: {\n          colorAlpha: 0.8\n      }\n  }\n\n  return option\n\n}\n","\n\n// adds the ability to zoom into plots\nexport default function DataZoom( option, props ){\n\n  if( option.dataZoom === undefined ) option['dataZoom'] = []\n\n\n  var params = props\n  if( params === undefined ){\n    params = {\n      scroll: true,\n      xAxis: false,\n      yAxis: false,\n      sliders: {\n        xAxis: true,\n        yAxis: true,\n      }\n    }\n  }\n\n  if( params.scroll ){\n    var scrollZoom = {\n        type: 'inside',\n        start: 0,\n        end: 100,\n        filterMode: 'none',\n    }\n\n    if( params.xAxis ) scrollZoom['orient'] = 'horizontal'\n    if( params.yAxis ) scrollZoom['orient'] = 'vertical'\n\n    option['dataZoom'] = option['dataZoom'].concat(scrollZoom)\n  }\n\n  if( params.sliders !== undefined ){\n    const icon = 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z'\n\n    if( params.sliders.xAxis){\n      option['dataZoom'] = option['dataZoom'].concat(\n        {\n          type: 'slider',\n          show: true,\n          xAxisIndex: 0,\n          start: 0,\n          end: 100,\n          height: 7,\n          bottom: 8,\n          showDataShadow: false,\n          handleSize: 15,\n          handleIcon: icon,\n          filterMode: 'none',\n        }\n      )\n    }\n\n    if( params.sliders.yAxis){\n      option['dataZoom'] = option['dataZoom'].concat(\n        {\n            type: 'slider',\n            show: true,\n            yAxisIndex: 0,\n            start: 0,\n            end: 100,\n            width: 7,\n            showDataShadow: false,\n            handleSize: 15,\n            handleIcon: icon,\n            filterMode: 'none',\n          }\n      )\n    }\n  }\n\n  // console.log( 'what is this', sliders)\n  // console.log( 'soom', option)\n\n    return option\n}\n","\n\n// Adds a scatter point for the ends of the error bars\n// and a line connecting the scatter poitns\nexport default function Highlight( options, props ){\n\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\n    alert( 'minimum attributes: colx, coly and value')\n    return\n  }\n\n  // identify the index of the samples to highlight\n  var index = props.value\n  if( typeof props.value === 'string'){\n    index = options.xAxis[0]['data'].indexOf( props.value )\n  }\n\n  // extend the first item in the series with the marked area\n  options.series[0]['markArea'] = {\n      data: [\n        [{\n          name: props.value,\n          xAxis: index - 1\n      }, {\n          xAxis: index + 1\n      }]\n    ]\n  }\n\n  return options\n\n}\n","\nexport default function legend( position ){\n\n  switch( position ){\n\n    case 'top-center':\n      return {\n        top: '5%',\n        left: 'center'\n      }\n\n    case 'left':\n      return {\n        type: 'scroll',\n        orient: 'vertical',\n        left: 10,\n        top: 20,\n        bottom: 20,\n      }\n\n    case 'right':\n      return {\n        type: 'scroll',\n        orient: 'vertical',\n        right: 10,\n        top: 20,\n        bottom: 20,\n      }\n\n    default:\n      return {\n        top: '5%',\n        left: 'center'\n      }\n  }\n\n}\n","/**\n * Echarts Components\n * ===================\n *\n * returns a class containing all available eCharts components based\n * on the module availability\n *\n * @author: Nik Sumikawa\n * @date: Aug 15, 2020\n * @type {Object}\n */\n\n import echartsOptions from './options'\n\n\n\n\nexport default class eChartsComponents extends Object{\n\n  constructor(data) {\n    super()\n\n    this.data = data\n  }\n\n  get options(){\n    return new echartsOptions( this.data )\n  }\n\n\n\n\n\n}\n","\n\nimport propsToSeries from '../propsToSeries'\n\n// Adds a scatter point for the ends of the error bars\n// and a line connecting the scatter poitns\nexport default function Vline( props ){\n\n  var data\n  if( props.data !== undefined ){\n    data = props.data\n\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\n\n  } else {\n    alert( 'insufficient attributes')\n    return\n  }\n\n  var Series = [\n    {\n        type: 'custom',\n        name: 'vLine',\n        animation: false,\n        legendHoverLink : false,\n        silent: true,\n        itemStyle: {\n            normal: {\n                borderWidth: 1.0\n            }\n        },\n        renderItem: (params, api) => render(params, api, props),\n        encode: {\n            x: 0,\n            y: [1, 2]\n        },\n        data: data\n    },\n\n  ]\n\n  Series = propsToSeries(props, Series)\n\n  return Series\n}\n\n\n\nfunction render(params, api, props) {\n\n    var xValue = api.value(0);\n    var highPoint = api.coord([xValue, api.value(1)]);\n    var lowPoint = api.coord([xValue, api.value(2)]);\n\n    var Series = {\n        type: 'group',\n        children: [\n        {\n            type: 'line',\n            transition: ['shape'],\n            shape: {\n                x1: highPoint[0], y1: highPoint[1],\n                x2: lowPoint[0], y2: lowPoint[1]\n            },\n            style: api.style({\n                stroke: api.visual('color'),\n                fill: null\n            })\n        },\n      ]\n    };\n\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\n\n    return Series\n}\n","\n\nimport propsToSeries from '../propsToSeries'\n\nexport default function Circle( props ){\n  \n  var Series = {\n      type: 'custom',\n      renderItem: (params, api) => renderItem(params, api, props),\n      animation: false,\n      legendHoverLink : false,\n      silent: true,\n      data: props.data,\n      z: 0,\n      zlevel: 0,\n      encode: {\n          x: 0,\n          y: 1\n      },\n  }\n\n  Series = propsToSeries(props, Series)\n\n  return Series\n\n}\n\nfunction renderItem(params, api, props) {\n\n    const [x,y] = api.coord([\n      api.value(0),\n      api.value(1)\n    ])\n\n    const radius = Math.max(...api.size([props.radius, props.radius]))\n\n    var Series = {\n        type: 'circle',\n        shape: {\n          cx: x,\n          cy: y,\n          r: radius,\n        },\n        z: 0,\n        zlevel: 0,\n        style: api.style({\n            fill: 'red',\n            stroke: 'red'\n        })\n    }\n\n    if( props.color !== undefined ) Series.style.fill = props.color\n    if( props.border !== undefined ) Series.style.stroke = props.border\n\n    return Series\n}\n","\n\nimport propsToSeries from '../propsToSeries'\n\n// Adds a scatter point for the ends of the error bars\n// and a line connecting the scatter poitns\nexport default function Hline( props ){\n\n  var data\n  if( props.data !== undefined ){\n    data = props.data\n\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\n\n  } else {\n    alert( 'insufficient attributes')\n    return\n  }\n\n  var Series = [\n    {\n        type: 'custom',\n        name: 'hLine',\n        animation: false,\n        legendHoverLink : false,\n        silent: true,\n        itemStyle: {\n            normal: {\n                borderWidth: 1.0\n            }\n        },\n        renderItem: (params, api) => render(params, api, props),\n        encode: {\n            x: [1, 2],\n            y: 0,\n        },\n        data: data,\n        z: 100\n    },\n\n  ]\n\n  Series = propsToSeries(props, Series)\n\n  return Series\n}\n\n\n\nfunction render(params, api, props) {\n\n    var yValue = api.value(0);\n    var highPoint = api.coord([api.value(1), yValue]);\n    var lowPoint = api.coord([api.value(2), yValue]);\n\n    var Series = {\n        type: 'group',\n        children: [\n        {\n            type: 'line',\n            transition: ['shape'],\n            shape: {\n                x1: highPoint[0], y1: highPoint[1],\n                x2: lowPoint[0], y2: lowPoint[1]\n            },\n            style: api.style({\n                stroke: api.visual('color'),\n                fill: 'green'\n            })\n        },\n      ]\n    };\n\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\n\n    return Series\n}\n","/**\n * echarts Formatter\n * =================\n *\n * Converts json arrays into echart series objects. The intention\n * is to simplify the conversion from json array to plot\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport jsonArray from '../../../jsonArray'\n\nimport scatter from './scatter'\nimport scatter_by from './scatter/scatterBy'\nimport boxplot from './boxplot'\nimport line from './line'\nimport bar from './bar'\nimport grid from './grid'\nimport pie from './pie'\nimport pieFromSeries from './pie/fromSeries'\nimport waterfall from './waterfall'\nimport rollingAvg from './line/rollingAvg'\n\nimport ErrorBars from './features/ErrorBars'\nimport Circle from './features/Circle'\nimport Vline from './features/Vline'\nimport Hline from './features/Hline'\n\n\n\nexport {default as scatter} from './scatter'\nexport {default as scatter_by} from './scatter/scatterBy'\n\n\nexport default class echartsSeries extends Object {\n\n  constructor(data) {\n    super()\n\n    this.json_array = data;\n\n    // convert to a jsonArray type and groupby week attribute\n    if( !this.json_array instanceof jsonArray ){\n      this.json_array = new jsonArray( this.json_array )\n    }\n\n  }\n\n  scatter( props ){ return scatter({...props, ...{json_array:this.json_array}}) }\n  scatter_by( props ){ return scatter_by({...props, ...{json_array:this.json_array}}) }\n  boxplot( props ){ return boxplot({...props, ...{json_array:this.json_array}}) }\n  line( props ){ return line({...props, ...{json_array:this.json_array}}) }\n  bar( props ){ return bar({...props, ...{json_array:this.json_array}}) }\n  pie( props ){ return pie({...props, ...{json_array:this.json_array}}) }\n  pieFromSeries( props ){ return pieFromSeries({...props, ...{json_array:this.json_array}}) }\n  rectGrid( props ){ return grid({...props, ...{json_array:this.json_array}}) }\n  waterfall( props ){ return waterfall({...props, ...{json_array:this.json_array}}) }\n  rollingAvg( props ){ return rollingAvg({...props, ...{json_array:this.json_array}}) }\n\n\n  errorbars( props ){ return ErrorBars({...props, ...{json_array:this.json_array}}) }\n  circle( props ){ return Circle({...props, ...{json_array:this.json_array}}) }\n  vline( props ){ return Vline({...props, ...{json_array:this.json_array}}) }\n  hline( props ){ return Hline({...props, ...{json_array:this.json_array}}) }\n}\n","\n\nimport jsonArray from '../../../../jsonArray'\nimport Vline from './Vline'\n\n// Adds a scatter point for the ends of the error bars\n// and a line connecting the scatter poitns\nexport default function ErrorBars( props ){\n\n  if( (props.min === undefined)|(props.max === undefined) ){\n    alert( 'minimum attributes: min and max')\n    return\n  }\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n\n  var Series = Vline({\n    ...props,\n    ...{\n      colx: '__index__',\n      coly: props.min,\n      colz: props.max,\n      zIndex: -1\n    }\n  })\n\n  // scatter point for the minimum value\n  Series.push(\n    json_array.echartsSeries.scatter({\n      colx:'__index__',\n      coly:props.min,\n      symbol: 'triangle',\n      color: 'green'\n    })[0]\n  )\n\n  // scatter point for the maximum value\n  Series.push(\n    json_array.echartsSeries.scatter({\n      colx:'__index__',\n      coly:props.max,\n      symbol: 'diamond',\n      color: 'blue'\n    })[0],\n  )\n\n\n  // scatter point for the average value when available\n  if( props.avg !== undefined ){\n    Series.push(\n      json_array.echartsSeries.scatter({\n        colx:'__index__',\n        coly:props.avg,\n        symbol: 'square',\n        color: 'red'\n      })[0]\n    )\n  }\n\n  return Series\n}\n","/**\n * Matrix statistics\n * =================\n *\n * Basic statistical functions for an Matrix implementation\n *\n * @author Nik Sumikawa\n * @date Dec 4, 2020\n *\n */\n\n\nexport function max(array){\n  array = dropna(array)\n  if( array.length === 1 ) return array[0]\n  return Math.max(...array)\n}\n\nexport function min(array){\n  array = dropna(array)\n  if( array.length === 1 ) return array[0]\n  return Math.min(...array)\n}\n\nexport function sum(array){\n  array = dropna(array)\n  if( array.length === 1 ) return array[0]\n  return array.reduce((a,b) => a + b, 0)\n}\n\nexport function mean(array){\n  array = dropna(array)\n  if( array.length === 1 ) return array[0]\n  return sum(array) / array.length\n}\n\nexport function dropna(array){\n  return array.filter(r => (r !== undefined)&(r !== null)&(!Number.isNaN(r)) )\n}\n","/**\n * Matrix statistics\n * =================\n *\n * Basic statistical functions for an Matrix implementation\n *\n * @author Nik Sumikawa\n * @date Dec 4, 2020\n *\n */\n\nimport * as arrayStats from './array'\n\nexport function max(data, col){\n  if( data.length === 1 ) return data[0][col]\n  return arrayStats.max(data.map(row => row[col]))\n}\n\nexport function min(data, col){\n  if( data.length === 1 ) return data[0][col]\n  return arrayStats.min(data.map(row => row[col]))\n}\n\nexport function sum(data, col){\n  if( data.length === 1 ) return data[0][col]\n  return arrayStats.sum(data.map(row => row[col]))\n}\n\nexport function mean(data, col){\n  if( data.length === 1 ) return data[0][col]\n  return arrayStats.mean(data.map(row => row[col]))\n}\n\n\nexport function forward_diff(data, col, newCol, step=1){\n  if( newCol === undefined) newCol = col\n\n  for( let i=step; i < data.length; i++ ){\n    data[i][newCol] = data[i][col] - data[i-step][col]\n  }\n\n  return data\n}\n\n\n// computes the rolling average for the provided column\nexport function rolling_average(data, col, window=7, type='center' ){\n\n\n\n  const yValues = data.map(r => r[col])\n\n  // coompute the rolloing average where the sample of interest is\n  // in the middle of the window\n  if( type === 'center' ){\n\n    var pStep, nStep\n    if( window % 2  === 0){\n      pStep = window/2\n      nStep = window/2\n\n    }else{\n      pStep = Math.floor(window/2)\n      nStep = Math.floor(window/2) + 1\n    }\n\n    for( let i=0; i < data.length; i++ ){\n\n      var start = i - nStep + 1\n      var end = i + pStep + 1\n\n      // ensure that the statistics do not count out of bounds values\n      if (start < 0 ) start = 0\n      if (end > data.length ) end = data.length\n      // console.log( i, start, end, yValues.slice(start,end))\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,end))\n    }\n  }\n\n  if( type === 'tailing' ){\n\n    // // add nulls for the first n samples\n    // for( let i=0; i < window-1; i++ ){\n    //   data[i][`${col}_avg`] = null\n    //\n    // }\n    //\n    // for( let i=window-1; i < data.length; i++ ){\n    //   data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(i-window+1,i+1))\n    // }\n\n    // average is not accurate for the first n samples in the rolling average\n    for( let i=0; i < data.length; i++ ){\n      var start = (i-window+1 < 0) ? 0 : i-window+1\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,i+1))\n    }\n\n  }\n\n  return data\n}\n","/**\n * JSON Array\n * ===============\n *\n * Extend the Array components to include various functions useful\n * for processing an array of JSON objects\n *\n * :Author: Nik Sumikawa\n * :Date: Feb 11, 2020\n */\n\n\n\n // import _ from 'lodash'\nimport jsonObject from './jsonObject'\n\nimport Series from './Series'\nimport DataTypes from './data_types/dtypes'\nimport strFormat from './data_types/format/strFormat'\n\nimport eChartsComponents from './frameworks/echarts/components'\nimport echartsOptions from './frameworks/echarts/options'\nimport echartsSeries from './frameworks/echarts/series'\n\nimport toCsv from './frameworks/fileIO/extract'\n\nimport ReactComponents from './frameworks/react/ReactComponents'\n\nimport * as stats from './statistics/matrix'\n\n\n\nexport default class jsonArray extends Array{\n\n  constructor(array=[], inplace, dtypes) {\n\n    // var dtypes = dtypes\n    if( dtypes === undefined ) dtypes = new DataTypes( array )\n    // console.log( dtypes )\n\n    // add an index column when the array is not empty\n    if( (array.length > 0)&(inplace!==true) ){\n\n      array = JSON.parse(JSON.stringify(array))\n\n      // when the Array is passed in as an array of arrays, covert\n      // it to an array of objects\n      if( array[0].hasOwnProperty('length') ){\n        for( var i=0; i < array.length; i++ ){\n          array[i] = {...array[i]}\n        }\n      }\n\n      const columns = Object.keys(array[0])\n\n      // create an internal index attribute when one doesn't exist\n      if( !columns.includes('__index__') ){\n        for( i=0; i < array.length; i++ ){\n          array[i]['__index__'] = i\n        }\n      }\n\n\n      // initialize the array based on the data type of the uncloned DataFrame\n      array = dtypes.init(array)\n    }\n\n    super()\n\n    // to avoid max recursion depth, we push each row separately\n    array.map( row => this.push(row))\n\n    // console.log( dtypes )\n    // dictionary containing column data types\n    this.dtypes = dtypes\n\n  }\n\n\n  // returns all columns in the jsonArray\n  get columns(){\n    var columns = []\n\n    var max_length = this.length\n    if( max_length > 50 ) max_length = 50\n\n    for( var i=0; i < max_length; i++ ){\n      columns = columns.concat(Object.keys(this[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  /**\n   * Replace the column names with those provided by the column array\n   * @param  {Array} columns array of column names\n   * @return {Array}         jsonArray with new column names\n   */\n  set columns( columns ){\n      const keys = this.columns\n\n      // define a mapping between the current and new column names\n      var mapping = {}\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\n        mapping[keys[i]] =columns[i]\n      }\n\n      // return a json array with the new mapping applied\n      return this.rename( mapping, {inplace: true} )\n  }\n\n  // resets the index value\n  reset_index(props={}){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(props['inplace'])\n\n    for( var i=0; i < array.length; i++ ){\n      array[i]['__index__'] = i\n    }\n    return array\n  }\n\n  // return all values for the specified column\n  values( col ){\n    return [...this].map(row => row[col])\n  }\n\n  /**\n   * Returns an array of index values\n   * @return {Array} Array of index values\n   */\n  get index(){\n    return [...this].map(row => row.__index__)\n  }\n\n  /**\n   * Returns a Series containing the data for the specified column\n   * @param  {string} col column name\n   * @return {Series}     Series containing the column data\n   */\n  col( col ){\n    const index = this.index\n    const value = [...this].map(row => row[col])\n    return new Series({\n      index: index,\n      value: value,\n      dtype: this.dtypes[col],\n      name: col\n    })\n  }\n\n  /**\n   * Combines the column series with the local DataFrame\n   * @param {Series} series Series containing data for a single column\n   */\n  set_col( series, params={} ){\n    // duplicate the jsonArray\n    var array = this.__inplace__(params['inplace'])\n\n    // retrieve index and convert to string type to match the\n    // index from the Series\n    var index = this.index.map( row => row.toString() )\n\n    for (var [key, value] of Object.entries(series.data)) {\n      var id = index.indexOf(key)\n\n      // extend the DataFrame with a new row containing the\n      // sample with an unmatched id\n      if( id === -1 ){\n        array.push({\n          [series.name]: value,\n          __index__: key\n        })\n        continue\n      }\n\n      // overwrite existing or create new entries for the value\n      array[id][series.name] = value\n    }\n\n    return array\n  }\n\n  /// returns a jsonArray with the specified columns\n  selectColumns( columns ){\n    var subset = []\n    this.forEach( r => {\n      var row = {}\n      columns.forEach(s => row[s] = r[s])\n      subset.push(row)\n    })\n    return new jsonArray(subset)\n  }\n\n\n  append( df ){\n    return new jsonArray([...this].concat(df))\n  }\n\n  /**\n   * Applies a given function to a column and returns a DataFrame\n   * with the results. The results can be written inplace or a nedw\n   * column created when specified as a parameter\n   * @param  {string} col     column name\n   * @param  {function} func  function to apply to the column\n   * @param  {string} newCol  when provided a new column is produced\n   * @return {[type]}      [description]\n   */\n  apply( col, func, newCol ){\n\n    if( newCol === undefined ) newCol = col\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][newCol] = func(this[i][col])\n    }\n\n    return this\n  }\n\n  /**\n   * cretes a new column by applying the provided function to each row\n   * @param  {string} col     name of the column to create\n   * @param  {function} func  function to apply to the column\n   */\n   create_column( col, func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][col] = func(this[i])\n    }\n\n    return this\n  }\n\n\n  /**\n   * applies the provided function to each row\n   * @param  {function} func  function to apply to the column\n   */\n   row_apply( func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i] = func(this[i])\n    }\n\n    return this\n  }\n\n\n\n  // returns the values of the data at the specified index\n  loc( idx, props={Series:true} ){\n\n    // return a DataFrame when a list of index are proived\n    if( typeof idx == \"object\" ){\n      return  new jsonArray([...this].filter(row => idx.includes(row.__index__) ))\n    }\n\n    // return the row after it has been converted to a series\n    if( props.Series === true ){\n      const index = this.columns\n      const value = Object.values([...this].filter(row => row.__index__ === idx))\n      return new Series({index: index, value: value, dtypes: this.dtypes})\n    }\n\n\n      return [...this].filter(row => row.__index__ === idx )\n  }\n\n  // return the values of the data at the relative row number\n  iloc( idx, props={Series:true} ){\n\n    // return a DataFrame when a list of index are proived\n    if( Array.isArray(idx) ){\n      var array = []\n      for( var i=0; i < idx.length; i++ ){\n        array.push( this[idx[i]] )\n      }\n      return new jsonArray(array)\n    }\n\n    if( props.Series === true ){\n      const index = Object.keys(this[idx])\n      const value = Object.values(this[idx])\n      return new Series({index: index, value: value, dtypes: this.dtypes})\n    }\n\n    return this[idx]\n  }\n\n  /**\n   * overwrites the local index column with the provided column\n   * @param {String} col Column name\n   */\n  set_index( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < array.length; i ++ ){\n      array[i].__index__ = array[i][col]\n      delete array[i][col]\n    }\n\n    return array\n  }\n\n\n\n  /**\n   * Converts the contents of the jsonArray into a formatted string\n   * where the columns are equally spaced apart and the values are\n   * formatted based on the internal data type\n   * @return {String} jsonArray contents formatted as a string\n   */\n  to_string(){\n    const format = new strFormat(this)\n    return format.table\n  }\n\n  /**\n   * returns the strFormat class used to format matrix components into\n   * strings such as single columns, rows, values, etc.\n   * @return {class} strFormat class with the current jsonArray contents\n   */\n  get strFormat(){\n    return new strFormat(this)\n  }\n\n  // sorts the json array by the provided column\n  sort_values( col, ascending=true){\n\n    var array\n\n    //sort the table based on the ascending flag\n    if( ascending === true ){\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\n\n    }else{\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Merge two DataFrames together\n   * @param  {Array} json_array           DataFrame to be merged\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\n   * @param  {string} on                   index (col) to use for merging\n   * @return {Array}                      DataFrame containing the merged columns\n   */\n  merge( json_array, params={how:'left', on:'__index__'}  ){\n\n    var array = []\n    var df1, df2, index, a, b\n    // var primary_col, secondary_col, value\n\n    var col_left, col_right\n\n    // determine the columns to use for merging the left/right\n    // DataFrames based on the specified parameters\n    if( params.on !== undefined ){\n      col_left = params.on\n      col_right = params.on\n    }\n    if( params.on_right !== undefined ) col_right = params.on_right\n    if( params.on_left !== undefined ) col_left = params.on_left\n\n\n    // determine the merging criteria\n    switch( params.how ){\n      case 'left':\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n\n      case 'right':\n        df1 = [...json_array]\n        df2 = [...this]\n        // primary_col = col_right\n        // secondary_col = col_left\n        index = json_array.unique(col_right)\n        break;\n\n      // default to merge on left\n      default:\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n    }\n\n    // var lookup = {}\n    // for( a = 0; a < df2.length; a++ ){\n    //   value = df2[a][secondary_col]\n    //\n    //   const keys = Object.keys(lookup)\n    //   if( keys.includes(value) ){\n    //     lookup[value].push( df2[a] )\n    //   }else{\n    //     lookup[value] = [df2[a]]\n    //   }\n    // }\n    //\n    // // pull the rows corresponding to the provided index value\n    // for( var a=0; a < df1.length; a++ ){\n    //   value = df1[a][secondary_col]\n    //\n    //   const lookupVal = lookup[value ]\n    //\n    //   // merge rows with similar index values (intersection). Create\n    //   // multiple rows when duplicate index values are present\n    //   if( lookupVal.length > 0 ){\n    //     for( b=0; b < lookupVal.length; b++ ){\n    //       array.push({...lookupVal[b], ...df1[a]})\n    //     }\n    //   }\n    //\n    //   // add the rows that have no overlap\n    //   if( lookupVal.length === 0  ){\n    //     array.push(df1[a])\n    //   }\n    //\n    // }\n\n    // pull the rows corresponding to the provided index value\n    for( var i=0; i < index.length; i++ ){\n      const value = index[i]\n      const df1_rows = df1.filter(r => r[col_left] === value)\n      const df2_rows = df2.filter(r => r[col_right] === value)\n\n      // merge rows with similar index values (intersection). Create\n      // multiple rows when duplicate index values are present\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n          for( b=0; b < df2_rows.length; b++ ){\n            array.push({...df2_rows[b], ...df1_rows[a]})\n          }\n        }\n      }\n\n      // add the rows that have no overlap\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n            array.push(df1_rows[a])\n        }\n      }\n\n    }\n\n    return new jsonArray( array, true )\n\n  }\n\n  /**\n   * Replaces undefined data with a given value. The values\n   * can be assigned globally or by column\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\n   *                              Values can be assigne by column, by providing a value\n   *                              per colum in the parameter dictionary\n   * @return {Array}             DataFrame with missing values replaed\n   */\n  fillna( params={} ){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    var i, j, columns, col, val\n\n    // fill missing values with unique values per column\n    // This assumes that the input is an object with a\n    // value for each column name\n    if( typeof params === 'object'){\n      columns = Object.keys(params)\n\n      // nothing to do when no inputs are provided\n      if( columns.length === 0) return array\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          val = params[col]\n          if( array[i][col] === undefined ) array[i][col] = val\n          if( array[i][col] === null ) array[i][col] = val\n          if( array[i][col] === '' ) array[i][col] = val\n          // if( isNaN(array[i][col]) ) array[i][col] = val\n        }\n      }\n\n    }else{\n\n      // fill all missing values with the same value\n      columns = array.columns\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          if( array[i][col] === undefined ) array[i][col] = params\n          if( array[i][col] === null ) array[i][col] = params\n          // if( isNaN(array[i][col]) ) array[i][col] = params\n        }\n      }\n    }\n\n    return array\n  }\n\n\n\n\n  // filters the json array based on the column and the provided value.\n  // The value can be either a single variable or an array\n  filter_column( col, value ){\n\n    if( Array.isArray(value) ){\n      return new jsonArray(\n        [...this].filter(row => value.includes(row[col])),\n        false,\n        this.dtypes\n       )\n    }else{\n      return new jsonArray(\n        [...this].filter(row => row[col] === value ),\n        false,\n        this.dtypes\n      )\n    }\n  }\n\n  concat( array ){ return new jsonArray( [...this].concat(array)) }\n\n  filter( func ){\n    return new jsonArray( [...this].filter(func), false, this.dtypes )\n  }\n\n  map( func ){\n    return [...this].map(func)\n  }\n\n  groupby( col ){\n    var dtypes = this.dtypes\n    dtypes['json_obj'] = 'jsonArray'\n\n    return new jsonArray( this.__groupby__( this, col ), true, dtypes )\n  }\n\n\n  __groupby__( json_obj, atts, keys ){\n\n    // append the keys with the json object\n    if( atts.length === 0 ){\n      keys['json_obj'] = new jsonArray(json_obj)\n      keys['count'] = json_obj.length\n      return keys\n    }\n\n    // initial conditions for keys\n    if( keys === undefined ){ keys = {} }\n\n    var results = []\n\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\n    const values = json_obj.unique(atts[0], true)\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      const group = json_obj.filter( row => row[atts[0]] === val )\n\n      // deep copy the keys and append with the current key\n      var temp_keys = Object.assign({}, keys)\n      temp_keys[atts[0]] = values[i]\n\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\n    }\n\n    return results\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  count_values( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var counts = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      if( !unique.includes(val) ){\n        unique.push(val)\n        counts[val] = 0\n      }\n      counts[val]++\n    }\n\n    // map the unique object count back to a flat object\n    var buffer = []\n    for( i=0; i < unique.length; i++ ){\n      const split_val = unique[i].split(',')\n\n      //\n      const obj = {count: counts[unique[i]]}\n      for( var j=0; j < split_val.length; j++ ){\n        obj[columns[j]] = split_val[j]\n      }\n\n      buffer.push( obj )\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  drop_duplicates( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var buffer = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      if( !unique.includes(values[i]) ){\n          unique.push( values[i] )\n          buffer.push( this[i] )\n      }\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n\n  pivot( columns ){\n\n    var pivot_table = []\n\n    if( columns === undefined ) columns = this.columns\n\n    for( var i=0; i < columns.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {column: columns[i]}\n\n      // add the column value for each row\n      for( var j=0; j < this.length; j++ ){\n        temp[j] = this[j][columns[i]]\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n  // converts a matrix into a flatten table (opposite of pivot table)\n  flatten( id_att = '__index__' ){\n\n    // extract a list of column names\n    const columns = this.columns\n\n    var table = []\n\n    for( var i=0; i < this.length; i++ ){\n      const row = this[i]\n\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n\n        // avoid a duplicate entry as the id attribute\n        if( col === id_att ) continue\n\n        table.push({\n          column: col,\n          row: row[id_att],\n          value:  row[col]\n        })\n      }\n    }\n\n    return new jsonArray( table, true )\n\n  }\n\n  // creates a pivot table based on the specified row and column.\n  // The summary type is used to compute the value of the pivot.\n  pivot_table( row, column, summaryType='count', value=undefined ){\n\n    var pivot_table = []\n\n    const row_val = this.unique( row )\n    const column_val = this.unique( column )\n\n\n    for( var i=0; i < row_val.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {row: row_val[i]}\n\n      const rval = row_val[i]\n      // const by_row = this.filter( r => r[row] === rval )\n      const by_row = [...this].filter( r => r[row] === rval )\n\n      // add the column value for each row\n      for( var j=0; j < column_val.length; j++ ){\n\n        const cval = column_val[j]\n        // const by_col = by_row.filter( r => r[column] === cval )\n        const by_col = [...by_row].filter( r => r[column] === cval )\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\n        // console.log( by_col )\n\n        var temp_json\n        switch( summaryType ){\n          // returns the number of rows for the current split\n          case 'count':\n            temp[column_val[j]] = by_col.length\n            break;\n\n          // returns the number of unique values for the current split\n          case 'unique':\n            // set defaults for missing parameter values\n            if( value === undefined ) value = '__index__'\n\n            temp_json = new jsonArray( by_col )\n            temp[column_val[j]] = temp_json.unique( value ).length\n            break;\n\n          case 'sum':\n            temp[column_val[j]] = stats.sum( by_col, value)\n            break;\n\n          case 'mean':\n            temp[column_val[j]] = stats.mean( by_col, value)\n            break;\n\n          default:\n            temp[column_val[j]] = by_col.length\n            break\n        }\n\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n  /**\n   * convert the column data type based on the mapping\n   * @param  {Object} [columns={}] object containing the mapping between columns and data type\n   * @param  {Object} [params={}]  parameter object\n   * @return {Array}              jsonArray containing the mapped columns\n   */\n  astype( columns={}, params={} ){\n\n    var inplace = true\n    if( params.inplace !== undefined ) inplace = params.inplace\n\n    var array = this.__inplace__(inplace)\n\n    // convert all columns based on the specified data types\n    const col_names = Object.keys(columns)\n    for( var i=0; i < col_names.length; i++ ){\n      const col = col_names[i]\n      array = array.dtypes.convert(array, col, columns[col], params)\n    }\n\n    return array\n  }\n\n  // converts the specified column into a date string\n  strftime( col, format='YYYY-MM-DD', params={} ){\n    var array = this.__inplace__(params['inplace'])\n    return array.dtypes.convert(array, col, 'strftime', params)\n  }\n\n  // converts the specified column into a\n  strptime( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n    return array.dtypes.convert(array, col, 'datetime', params)\n  }\n\n\n  /**\n   * Creates a new column by merging the content from the columns\n   * specified in the columns attribute\n   * @param  {array} columns  array of column names\n   * @param  {String} col_name Name of the resulting column\n   * @param  {String} [sep='   ']            string delimiter\n   * @return {OBJECT}          jsonArray with the new column\n   */\n  combine( columns, col_name, sep=' ', params={} ){\n\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < this.length; i++ ){\n      // seed the value with the value from the first column\n      var temp = this[i][columns[0]]\n\n      for( var j=1; j < columns.length; j++ ){\n        temp = temp + sep + this[i][columns[j]]\n      }\n\n      array[i][col_name] = temp\n    }\n\n    array.dtypes[col_name] = 'string'\n    return array\n  }\n\n  combine_columns( col1, col2, col_name, sep=' ' ){\n    // creates a new column by merging the content of col 1 and 2 to\n    // form a new column\n    console.log( 'this function is deprecated: see combine')\n    return this.combine([col1, col2], col_name, sep )\n  }\n\n  to_jsonObject( key, value ){\n    // Converts the jsonArray into a jsonObject with following\n    // columns for the key and values\n\n    var object = {}\n    for( var i=0; i < this.length; i++ ){\n      object[this[i][key]] = this[i][value]\n    }\n\n    return new jsonObject( object )\n  }\n\n  /**\n   * creates a single column with the hex color string based\n   * on the RGB color values taken from separate columns\n   * @param  {string} rcol red color column\n   * @param  {string} gcol green color column\n   * @param  {string} bcol blue color column\n   * @return {[type]}      [description]\n   */\n  to_rgb( rcol, gcol, bcol, colorCol='rgb'){\n    const toHex = require('./frameworks/colors/Colors').rgbToHex\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][colorCol] = toHex( this[i][rcol], this[i][gcol], this[i][bcol])\n    }\n\n    this.dtypes[colorCol] = 'hexcolor'\n    return this\n  }\n\n\n  /**\n   * converts the column value into a color\n   * @param  {string} col color column\n   * @param  {string} colorType color label\n   */\n  to_color( col, colorType='entropy_8bit'){\n    const get_color = require('./frameworks/colors/Colors').get_color\n\n    for( var i=0; i < this.length; i++ ){\n      this[i]['color'] = get_color( this[i][col], colorType)\n    }\n\n    this.dtypes['color'] = 'hexcolor'\n    return this\n  }\n\n\n  unique( col, ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    // filter the undefined values from unique\n    var values = [...this]\n      .map(row => row[col])\n      .filter(row => row !== undefined)\n\n    // remove duplicates by forcing to a set\n    var unique_values = [...new Set(values)]\n\n    // When the column is an array type, concatinate all array values\n    if( this.dtypes[col] === 'array'){\n      var temp = []\n      for( var i=0; i < unique_values.length; i++ ){\n        if(unique_values[i] === undefined) continue\n        temp = temp.concat(unique_values[i])\n      }\n\n      // overwrite the unique values with the concatinated values\n      unique_values = [...new Set(temp)]\n    }\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        switch( typeof unique_values[0] ){\n          case \"string\":\n            return unique_values.sort()\n\n          case \"boolean\":\n            return unique_values.sort()\n\n          default :\n            try{\n              unique_values = unique_values.map( x => +x)\n              unique_values = unique_values.sort(function(a,b){return a - b})\n            }catch{\n              // default to the standard sort\n              unique_values.sort()\n            }\n        }\n\n    }\n\n    return unique_values\n  }\n\n\n\n\n  /**\n   * Applies a threshold to the specified column\n   * @param  {function} func     function used to partition dataset\n   * @param  {string} res_col   column name containing the results\n   * @return {Array}            jsonArray containing res_col\n   */\n  label( func, params={} ){\n\n    const param_keys = Object.keys(params)\n\n    // set defaults for missing parameter values\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\n    if( !param_keys.includes('value') ) params['value'] = true\n    if( !param_keys.includes('default') ) params['default'] = false\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\n\n    var array = this.__inplace__(params['inplace'])\n\n\n    // identify all samples identified by the rule\n    const sample_index = array.filter( func ).map( row => row.__index__ )\n\n    // create a boolean label, where parts in the sample set are true\n    for( var i=0; i < array.length; i ++ ){\n\n      // extract a list of columns name for the given row\n      const columns = Object.keys( array[i] )\n\n      // the value is true when it is included in the sample set\n      if( sample_index.includes( array[i].__index__ ) ){\n        array[i][params['output_col']] = params['value']\n        continue\n      }\n\n      // set the default value when no value exists\n      if( !columns.includes(params['output_col']) ){\n        array[i][params['output_col']] = params['default']\n        continue\n      }\n\n    }\n\n    return array\n  }\n\n  /**\n   * Copies the content from one column to a new column. This is\n   * non destructive, so if the column already exists, only the\n   * missing data will be copied over\n   * @param  {String} col     original column name\n   * @param  {String} new_col new column name\n   * @return {Object}         jsonArray with the new column added\n   */\n  copy_column( col, new_col, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      if(!columns.includes( new_col) ){\n        array[i][new_col] = array[i][col]\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * Returns a DataFrame containing only the specified column\n   * and the index\n   * @param  {array} columns array of column names\n   * @return {array}         json array containing the specified columns\n   */\n  select_columns( columns ){\n\n    var array = []\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < this.length; i++ ){\n\n      var row = {__index__: this[i].__index__}\n      // copy the specified columns for each row\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n        row[col] = this[i][col]\n      }\n\n      array.push( row )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Drops columns from the DataFrame\n   * @param  {String or Array} columns String or Array of column names\n   * @return {OBJECT}         JsonArray without the specified columns\n   */\n  drop_columns( columns, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n\n      // delete the specified column when of string type\n      if( typeof columns === 'string' ){\n        delete array[columns]\n\n      // when a list is provided, delete all columns in the string\n      }else{\n\n        for( var j=0; j < columns.length; j++ ){\n          delete array[i][columns[j]]\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * renames columns\n   * @param  {object} mapping object containing the existing column name and new column name\n   * @return {object}         json array with the new column naming\n   */\n  rename( mapping, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const columns = Object.keys( mapping )\n\n    // rename the specified columns\n    for( var i = 0; i < array.length; i++ ){\n\n      const ex_columns = Object.keys( array[i] )\n\n      // create a new column based on the mapping and delete\n      // the existing one (taht was replaced)\n      for( var j=0; j < columns.length; j++ ){\n        // only replace the column when data exists for that column\n        if( ex_columns.includes(columns[j]) ){\n          const new_col = mapping[columns[j]]\n          array[i][new_col] = array[i][columns[j]]\n\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\n          delete array[i][columns[j]]\n\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * replaces the values in the specified column with the given value\n   * based on the mapping\n   * @param  {String} col     original column name\n   * @param  {Object} mapping Object containing the value mapping\n   * @return {Object}         jsonArray with the new column added\n   */\n  replace( col, mapping={}, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const values = Object.keys( mapping )\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      // do not perform mapping when no data nor the mapping exists\n      if(!columns.includes(col) ) continue\n      if(!values.includes(array[i][col])) continue\n\n      array[i][col] = mapping[array[i][col]]\n\n    }\n\n    return new jsonArray( array )\n  }\n\n\n\n  /**\n   * returns the data object. When enable is true, the original\n   * jsonArray is returned so the values are modified directly. Otherwise\n   * the jsonArray is cloned to avoid mutation of the original object\n   *\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\n   * @return {Object}             current jsonArray content\n   */\n  __inplace__( enable=false ){\n\n    // clone the local copy to avoid mutation when inplace is disabled\n    if( enable ) return this\n\n    return new jsonArray( this )\n  }\n\n\n  /********************************************************************************\n  *  Math Functions\n  *  ===============================\n  *  Interface for computing common statistical functions\n  ********************************************************************************/\n  max(col){ return stats.max(this, col)  }\n  min(col){ return stats.min(this, col)  }\n  sum(col){ return stats.sum(this, col)  }\n  mean(col){ return stats.mean(this, col)  }\n  forward_diff(col, newCol, step=1){ return stats.forward_diff(this, col, newCol, step)  }\n  rolling_average(col, window=1, avgType){ return stats.rolling_average(this, col, window, avgType)  }\n  stats(){ return stats  }\n\n\n\n  toCsv(filename){ toCsv(this, filename ) }\n  // max(col){\n  //   if( this.length === 1 ) return this[0][col]\n  //   return Math.max(...this.map(row => row[col])) }\n  // min(col){\n  //   if( this.length === 1 ) return this[0][col]\n  //   return Math.min(...this.map(row => row[col])) }\n  // sum(col){\n  //   if( this.length === 1 ) return this[0][col]\n  //   return this.map(row => row[col]).reduce((a,b) => a + b, 0) }\n  // mean(col){\n  //   if( this.length === 1 ) return this[0][col]\n  //   return this.sum(col) / this.length }\n\n  /********************************************************************************\n  *  ECharts json array interface\n  *  ===============================\n  *  Interface that returns echarts series objects for plotting\n  ********************************************************************************/\n\n  // /**\n  //  * echarts line plot data formatter\n  //  * @param  {stringi} col  column name\n  //  * @return {object}      echarts data series object\n  //  */\n  get echartsOptions( ){ return new echartsOptions( this ) }\n  get echartsSeries( ){ return new echartsSeries( this ) }\n\n  get echarts( ){ return new eChartsComponents( this ) }\n\n  get react(){ return new ReactComponents(this) }\n\n  get fileIO(){\n    const fromFileLibrary = require('./frameworks/fileIO/fromFile').default\n    return new fromFileLibrary(this)\n  }\n}\n","/**\nCode Render\n==================\n\nUses React-ace to render the source code\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment, Button} from 'semantic-ui-react'\n\nimport AceEditor from \"react-ace\"\n\nrequire(\"brace/mode/html\")\nrequire(\"brace/mode/jsx\")\nrequire(\"brace/mode/sh\")\nrequire(\"brace/mode/python\")\n// require(\"brace/theme/github\")\nrequire(\"brace/theme/dracula\")\n\n\nexport default function CodeRender( props ){\n\n  const [source, setSource] = useState('')\n\n  if( props.visible === false ) return null\n\n  var rel_path\n\n  var dir = props.docDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  var ext = props.ext\n  if( ext === undefined ) ext = '.doc'\n\n  var syntax = 'jsx'\n  if( ext === '.py' ) syntax = 'python'\n\n  var filename = props.example.path.split('/')\n  filename = filename[filename.length-1] + ext\n\n\n  try{\n    rel_path = require(`Documentation/${dir}/${props.example.path}${ext}`)\n\n  }catch{\n    return(\n      <Segment>\n        Code not available. Please compile to see source\n      </Segment>\n    )\n  }\n\n  // console.log( rel_path.default )\n  if( (rel_path !== undefined)&(source === '') ){\n\n    fetch(rel_path.default)\n    .then((r) => r.text())\n    .then(text  => {\n      // console.log('this is the code', text);\n      setSource(text)\n    })\n\n  }\n\n  // return (<div> example </div>)\n  return(\n\n    <Segment>\n      <Button\n        style={{\n          position: 'absolute',\n          right: '20px',\n          top: '20px',\n          zIndex: 10\n        }}\n        icon = 'download'\n        color='red'\n        circular\n        onClick={() => downloadFile(source, filename)}\n        />\n\n      <AceEditor\n        editorProps={{ $blockScrolling: Infinity }}\n        maxLines={Infinity}\n        minLines={10}\n        mode={syntax}\n        name=\"jsx-editor\"\n        onChange={() => console.log('not implemented') }\n        tabSize={2}\n        theme=\"dracula\"\n        value={source}\n        width=\"100%\"\n        readOnly\n      />\n    </Segment>\n  )\n}\n\n\n\nfunction downloadFile( source, filename ){\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([source], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n","/**\nSidebar\n==================\n\nRenders a sidebar based on the configuration file\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React from 'react';\n\nimport {Menu, Dropdown} from 'semantic-ui-react'\n\nimport jsonArray from './jsonArray'\n\n\n\n\n// renders a sidebar given an array of category names\nexport default function Sidebar( props ){\n\n  var menuItems = flat_categories(props )\n  menuItems = menuItems.concat( sub_categories(props) )\n\n  return (\n    <Menu pointing secondary vertical>\n      {menuItems}\n    </Menu>\n  )\n\n}\n\n// renders categories without sub categories\nfunction flat_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory === undefined )\n  // console.log( 'jsonArray', props.config instanceof jsonArray)\n  const categories = config.unique(['category'])\n\n  var menuItems = []\n  for( var i=0; i < categories.length; i++ ){\n    const cat = categories[i]\n\n    menuItems.push(\n      <Menu.Item\n        key={`menu-${cat}`}\n        name={cat}\n        active={props.category === cat}\n        onClick={() => {\n          props.setCategory(cat)\n          props.setSubCategory(undefined)\n        }}\n      />\n    )\n  }\n\n  return menuItems\n}\n\n\n// renders categories without sub categories\nfunction sub_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory !== undefined )\n  const groups = config.groupby(['category'])\n\n  var menuItems = []\n  for( var i=0; i < groups.length; i++ ){\n\n    const cat = groups[i].category\n    const subcategories = new jsonArray(groups[i].json_obj).unique(['subcategory'])\n\n    var subMenuItems = []\n    for( var j=0; j < subcategories.length; j++ ){\n      const subcat = subcategories[j]\n\n      subMenuItems.push(\n        <Dropdown.Item\n          key={`dropdown-${cat}-${subcat}`}\n          onClick={() => {\n            props.setCategory(cat)\n            props.setSubCategory(subcat)\n          }}\n          >\n          {subcat}\n        </Dropdown.Item>\n      )\n    }\n\n    menuItems.push(\n      <Dropdown\n        key={`dropdown-${cat}`}\n        item\n        text={cat}>\n        <Dropdown.Menu>\n          {subMenuItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  return menuItems\n}\n","\nexport default function getConfig( docType ){\n\n  switch(docType){\n    case 'chart':\n      return importConfig(config, 'Echarts/config.js', true)\n\n    case 'table':\n      return importConfig(config, 'Table/config.js', true)\n\n    default:\n\n      var config = []\n      config = importConfig(config, 'Echarts/config.js', false)\n      return config\n  }\n\n}\n\nfunction importConfig( config, path, indev=false){\n\n  var localConfig = require('./examples/' + path).config\n  console.log()\n  if( indev === false ){\n    for( var i=0; i < localConfig.length; i++ ){\n      localConfig[i]['indev'] = false\n    }\n  }\n\n  return localConfig\n}\n","/**\n * dtype\n * =======================\n *\n * Extends the jsonArray functionality to allow for data type\n * formatting. This includes extracting data types for specific\n * columns and also converting to known data types\n *\n * :Author: Nik Sumikawa\n * :Date: Aug 4, 2020\n */\n\n\nimport jsonArray from '../jsonArray'\n\nimport datetime from './datetime'\n\nimport moment from 'moment';\n\n\n\nexport default class DataTypes extends Object{\n\n  constructor(array) {\n    super()\n\n    // global definition to prevent excessive processing\n    // when determining data type. This essentially limits\n    // the number of checks per column\n    this.max_length = 50\n\n    // set default dtypes. Ideally, extract them from the jsonArray when available\n    if( array instanceof jsonArray ){\n      this.set_dtypes( array.dtypes )\n    }\n  }\n\n  // returns all columns in the jsonArray\n  columns( array ){\n    var columns = []\n\n    // ensure that the max length is not greater than the\n    // array size, to avoid checking non-existing rows\n    if( this.max_length > array.length ) this.max_length  = array.length\n\n    for( var i=0; i < this.max_length; i++ ){\n      columns = columns.concat(Object.keys(array[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  // converts all data types based on the global dtypes definition\n  // stored within the jsonArray variable\n  init( array ){\n\n    // extract the column names based on the data type definition\n    const dtype_col = Object.keys(this)\n\n    for( var i=0; i < dtype_col.length; i++ ){\n      // convert the column to the specified type\n      array = this.convert(array, dtype_col[i], this[dtype_col[i]])\n    }\n\n    this.max_length = array.length\n    if( this.max_length > 50 ) this.max_length = 50\n\n    this.parse(array)\n\n\n    // converting all numeric Strings to their proper non-string type\n    const columns = this.columns(array)\n    for( i=0; i < columns.length; i++ ){\n\n\n      const col = columns[i]\n      if(this[col] === 'intString') array = this.convert( array, col, 'int' )\n      if(this[col] === 'floatString') array = this.convert( array, col, 'float' )\n      if(this[col] === 'booleanString') array = this.convert( array, col, 'boolean' )\n\n    }\n\n    delete this.max_length\n    return array\n  }\n\n  /**\n   * sets the internal data type definition based on the provided objects\n   * @param {object} dtypes object containing the data type definition\n   */\n  set_dtypes( dtypes ){\n\n    // extract the column names based on the data type definition\n    const columns = Object.keys(dtypes)\n\n    for( var i=0; i < columns.length; i++ ){\n      this[columns[i]] = dtypes[columns[i]]\n    }\n\n    return this\n  }\n\n  // returns the data type for the given value\n  data_type( value ){\n\n    if( value instanceof jsonArray ) return 'jsonArray'\n    if( value instanceof Array ) return 'array'\n    if( value instanceof Object ) return 'object'\n\n\n    if( (Number(value) === value)&(value % 1 === 0) ) return 'int'\n    if( (Number(value) === value)&(value % 1 !== 0) ) return 'float'\n\n    // attempt to convert the value to a number\n    const numeric = Number( value )\n\n    // determine the proper type when successfully converted to a number\n    if( numeric !== undefined & !isNaN(numeric) ){\n      if( value === true | value === false ) return 'boolean'\n      if( value % 1 === 0 ) return 'intString'\n      if( value % 1 !== 0 ) return 'floatString'\n    }\n\n    if(value === 'true' | value === 'false') return 'booleanString'\n    if(typeof value === 'string' || value instanceof String) return 'string'\n\n    return 'unknown'\n  }\n\n  /**\n   * returns True when the data type is numeric. Otherwise False\n   * @param  {String}  dtype Data type string\n   * @return {Boolean}       True when the data type is numeric, otherwise false\n   */\n  isNumeric( dtype ){\n    switch( dtype ){\n      case 'float' : return true\n      case 'int': return true\n      case 'percentage': return true\n      default : return false\n    }\n  }\n\n  /**\n   * Convert the specified column based on the data type\n   * @param  {string} col       column name\n   * @param  {string} dtype     data type definition\n   * @return {array}            array containing with the column mapped correctly\n   */\n  convert( array, col, dtype, params={} ){\n\n    // convert the dtype for the specific column for all rows\n    for( var i=0; i < array.length; i++ ){\n\n      // do not process the row when data doesn't exist for the column\n      // const columns = Object.keys(array[i])\n      // if( !columns.includes( col) ) continue\n      if( array[i][col] === undefined ) continue\n\n      array[i][col] = this.apply(array[i][col], dtype, params )\n    }\n\n    // create an internal variable with the data type of the column\n    this.set_label( col, dtype )\n\n    return array\n  }\n\n  // logic to apply when converting a value to the correct data type\n  apply(value, dtype, params={}){\n\n    switch( dtype ){\n      case 'datetime':\n        return datetime(value)\n\n      case 'jsonArray':\n        return new jsonArray(value)\n\n      case 'date':\n        return moment(value)\n\n      case 'week':\n        if( value === null ) return null\n        if( value.toString().split('-').length != 2){\n          const date = moment(value)\n          return `${date.year()}-${date.format('ww')}`\n        }\n\n        return value\n\n      case 'strftime':\n        const param_keys = Object.keys(params)\n        if( !param_keys.includes('format') ) params['format'] = 'YYYY-MM-DD'\n\n        return datetime(value).format(params['format'])\n\n      case 'int' :\n        return Number( value )\n\n      case 'float' :\n        return Number( value )\n\n      case 'string' :\n        if (value === null) return ''\n        return value.toString()\n\n      case 'boolean' :\n\n        if( value === null ) return null\n        if( value === false | value === true ) return value\n\n        let number = Number(value)\n        if( isNaN(number) ){\n          if( value.toLowerCase() === 'true' ) return true\n          if( value.toLowerCase() === 'false' ) return false\n        }\n\n        return number\n\n      case 'array':\n        if( typeof value !== 'string' ) return value\n        return value\n          .replace(/\\[/gi, '')\n          .replace(/\\]/gi, '')\n          .replace(/'/gi, '')\n          .replace(/, /gi, ',')\n          .split(',');\n\n      default :\n        return value\n    }\n\n  }\n\n  // sets the internal data type label\n  set_label( col, data_type ){\n\n    // set the column data type\n    switch( data_type ){\n      case 'strftime':\n        this[col] = 'string';\n        break;\n\n      default:\n        this[col] = data_type\n        break\n    }\n\n    return this[col]\n  }\n\n\n\n  // compares two data types and returns the one with the\n  // highest priority to avoid type conflict\n  dtypePriority( dtype1, dtype2 ){\n     const priority = [\n       'object',\n       'array',\n       'string',\n       'float',\n       'int',\n       'boolean',\n     ]\n\n     for( var i=0; i < priority.length; i++ ){\n       if( dtype1 === priority[i] ) return priority[i]\n       if( dtype2 === priority[i] ) return priority[i]\n     }\n\n     return 'unknown'\n  }\n\n  // set a data type for the specified column\n  parse_column( array, col ){\n\n    var dtype\n    for( var i=0; i < this.max_length; i++ ){\n      if( array[i][col] !== undefined ){\n        // extract the datatype for the current cell\n        var temp_dtype = this.data_type( array[i][col] )\n\n        // set the dtype during the first pass when it's not set\n        if( dtype === undefined ){\n          dtype = temp_dtype\n          continue\n        }\n\n        // set the dtype based on the priority when the cell dtype\n        // differs from the global definition\n        if( dtype !== temp_dtype ){\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\n        }\n\n        dtype = temp_dtype\n      }\n    }\n\n    return dtype\n  }\n\n  // returns an object containing the dtypes for each column\n  parse( array ){\n\n    // parse a unique set of column names from the array of objects\n    var columns = []\n    for( var i=0; i < this.max_length; i++ ){\n      columns = columns.concat( Object.keys(array[i]))\n    }\n    columns = [...new Set(columns)]\n\n    // parse the data types for each column\n    const existing = Object.keys(this)\n    for( i=0; i < columns.length; i++ ){\n      // do no overwrite existing datatypes\n      if( existing.includes(columns[i]) ) continue\n\n      //parse undefined datatypes\n      this[columns[i]] = this.parse_column(array, columns[i])\n    }\n\n    return this\n  }\n\n\n  /**\n   * Returns the data type for the provided series\n   * @param  {Object} series Series object\n   * @return {String}        Data type string\n   */\n  parse_series( series ){\n\n    var dtype\n    for( var i=0; i < series.values.length; i++ ){\n\n      const value = series.values[i]\n\n      if( value !== undefined ){\n        // extract the datatype for the current cell\n        var temp_dtype = this.data_type( value )\n\n        // set the dtype during the first pass when it's not set\n        if( dtype === undefined ){\n          dtype = temp_dtype\n          continue\n        }\n\n        // set the dtype based on the priority when the cell dtype\n        // differs from the global definition\n        if( dtype !== temp_dtype ){\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\n        }\n\n        dtype = temp_dtype\n      }\n    }\n\n    return dtype\n  }\n\n}\n","/**\n * Pluggin Managements\n * ======================\n *\n * Attemps to import various functionality that is dependent on\n * various modules. When the module is not available, the enable\n * flag is not set, rendering the function not available\n *\n * @author Nik Sumikawa\n * @date Aug 26, 2020\n *\n */\n\n // import * as echarts from 'echarts';\n // import 'echarts-gl';\n\nexport var enabledComponents = {\n  echarts: true,\n  semanticUI: false,\n  excel: false,\n}\n\n// attempt to import the react echarts component\nexport var components = {\n  echarts: undefined,\n  semanticUI: undefined,\n  excel: undefined,\n}\n\n\ntry{\n  // require(\"echarts/lib/lang\");\n  // require.cache[require.resolve('echarts/lib/lang')].exports = require(\"echarts/lib/langEN\");\n  // echarts = require('echarts')\n  components.echarts = require('./echarts').default\n  enabledComponents.echarts = true\n}catch{\n  // console.log('failed to load echarts. module not installed')\n}\n\ntry{\n  components.semanticUI = require('../framework/SemanticUI').default\n  enabledComponents.semanticUI = true\n}catch{\n  // console.log('failed to load semanticUI. module not installed')\n}\n\ntry{\n  components.excel = require('./Excel').default\n  enabledComponents.excel = true\n}catch{\n  // console.log('failed to load semanticUI. module not installed')\n}\n","/**\n * React Components\n * ===================\n *\n * returns a class containing all available React components based\n * on the module availability\n *\n * @author: Nik Sumikawa\n * @date: Aug 15, 2020\n * @type {Object}\n */\n\n\n\nimport {enabledComponents, components} from './plugins/Plugins'\n\nimport echartsLibrary from './plugins/echarts'\n\nexport default class ReactComponents extends Object{\n\n  constructor(data) {\n    super()\n\n    this.data = data\n  }\n\n  get Table(){\n\n    const Table = require('./table/Table').default\n    return new Table(this.data).Table\n  }\n\n\n  get FileIO(){\n\n    const FileIO = require('./plugins/fileIO').default\n    return new FileIO(this.data)\n  }\n\n  get semanticUI(){\n    if( enabledComponents.semanticUI === false ){\n      alert( 'Semantic UI module not installed')\n      return {}\n    }\n\n    return new components.semanticUI( this.data )\n  }\n\n\n  get Excel(){\n    if( enabledComponents.excel === false ){\n      alert( 'react-excel-renderer module not installed')\n      return {}\n    }\n\n    return components.excel\n  }\n\n  // return a dictionary containing the various e-charts plotting routines\n  get echarts(){\n\n    if( enabledComponents.echarts === false ){\n      alert('echarts module not installed. Install echarts and echarts-for-react')\n      return {}\n    }\n\n    return new echartsLibrary( this.data )\n  }\n\n\n\n\n\n}\n","/**\n * echarts line\n * =================\n *\n * Converts json arrays into echart line series object\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport propsToSeries from '../propsToSeries'\n\n/**\n * Convert the json_array to a line plot\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\n * @param  {string} coly  column 2 name\n * @param  {object} params parameters used to customize the plot\n * @return {Object}       local object contents\n */\nexport default function line( props ){\n\n  var json_array = props.json_array\n\n  var Series = {\n    type: 'line',\n    data: json_array.map(r => r[props.coly])\n  }\n\n  Series = propsToSeries(props, Series)\n\n  return [Series]\n\n}\n","\n\nexport default function Waterfall( props ){\n\n  var data = props.json_array\n\n  // perform the forward difference required to generate the waterfall\n  data = data.forward_diff(props.coly, 'waferfallDiff' )\n\n  const diff = data.map(r => r.waferfallDiff)\n\n  var pos = []\n  var neg = []\n  var stack = []\n\n  for( let i=0; i < data.length - 1; i++ ){\n    const temp = data[i+1]['waferfallDiff']\n\n\n    if(temp >= 0){\n      pos.push(temp)\n      neg.push('-')\n      stack.push( data[i][props.coly] )\n\n    }else{\n      pos.push('-')\n      neg.push(Math.abs(temp))\n      stack.push( data[i+1][props.coly] )\n    }\n\n  }\n\n  const series = [\n      {\n          type: 'bar',\n          stack: 'waferfall',\n          itemStyle: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n          },\n          emphasis: {\n              itemStyle: {\n                  barBorderColor: 'rgba(0,0,0,0)',\n                  color: 'rgba(0,0,0,0)'\n              }\n          },\n          data: stack\n      },\n\n      {\n          name: 'Gains',\n          type: 'bar',\n          stack: 'waferfall',\n          data: pos,\n          color: 'green',\n      },\n\n      {\n          name: 'Losses',\n          type: 'bar',\n          stack: 'waferfall',\n          data: neg,\n          color: 'red',\n      }\n  ]\n\n  return series\n\n\n\n}\n","\nimport React from 'react';\nimport ReactEcharts from \"echarts-for-react\";\n\nexport default function EchartsReact( props ) {\n\n  // extract the options from the props so it can be modified\n  var option = props.option\n\n  var onEvents = {}\n\n  // when selectionCallback is provided, add the brush functionality\n  // and callback function to the list of events\n  if( props.onSelect !== undefined ){\n    option['brush'] = {\n      xAxisIndex: 'all',\n      outOfBrush: {\n        colorAlpha: 0.1\n      }\n    }\n\n    const onSelect = (params) => {\n      if( params.batch === undefined ) return\n\n      const index = params.batch[0].selected[0].dataIndex;\n      if( params.batch[0].selected !== undefined ){\n        props.onSelect({\n            index: index,\n            data: props.data.iloc(index)\n        } )\n      }\n    }\n\n    onEvents['brushselected'] = onSelect\n  }\n\n  // when an onClick event is provided, add it to the Events\n  if( props.onClick !== undefined ){\n    onEvents['click'] = props.onClick\n  }\n\n  return (\n    <ReactEcharts\n      option = {option}\n      onEvents={onEvents}\n      style={props.echartsStyle}\n    />\n  )\n}\n","/**\n * Echarts Wrapper\n * ==================\n *\n * React component used to wrap the echart's plotter. This includes\n * handles for onClick function and callback functions\n *\n * :Author: Nik Sumikawa\n * :Date: April 20, 2020\n */\n\n\nimport React from 'react';\n\nimport moment from 'moment'\nimport ReactLibraryFramework from '../../ReactLibraryFramework'\n\nimport EchartsReact from './EchartsReact'\n// export {default as EchartsReact} from './EchartsReact'\n\n\nexport default class echartsLibrary extends ReactLibraryFramework{\n  constructor(data){\n    super(data)\n\n    // must bind this to all internal functions or they will be\n    // lost when rendering via react\n    this.Echarts = this.Echarts.bind(this)\n    this.Heatmap = this.Heatmap.bind(this)\n    this.Boxplot = this.Boxplot.bind(this)\n    this.Scatter = this.Scatter.bind(this)\n    this.Line = this.Line.bind(this)\n    this.Bar = this.Bar.bind(this)\n    this.Histogram = this.Histogram.bind(this)\n    this.Pareto = this.Pareto.bind(this)\n    this.RectGrid = this.RectGrid.bind(this)\n\n  }\n\n  Echarts( props ){\n    return EchartsReact( this.props(props) )\n  }\n\n  Heatmap( props ){\n    return this.Component( 'heatmap', this.props(props) )\n  }\n\n  Boxplot( props ){\n    return this.Component( 'boxplot', this.props(props) )\n  }\n\n  RectGrid( props ){\n    return this.Component( 'rectGrid', this.props(props) )\n  }\n\n  Scatter( props ){\n    return this.Component( 'scatter', this.props(props) )\n  }\n\n  Line( props ){\n    return this.Component( 'line', this.props(props) )\n  }\n\n  Bar( props ){\n    return this.Component( 'bar', this.props(props) )\n  }\n\n  Histogram( props ){\n    return this.Component( 'histogram', this.props(props) )\n  }\n\n  Pareto( props ){\n    return Pareto( this.props(props) )\n  }\n\n  Component( type, props ){\n\n    const options = props.data.echartsOptions\n\n    var plot_options\n    switch( type ){\n      case 'boxplot':\n        plot_options = options.boxplot(props)\n        break\n\n      case 'scatter':\n        plot_options = options.scatter(props)\n        break\n\n      case 'heatmap':\n        plot_options = options.heatmap(props)\n        break\n\n      case 'line':\n        plot_options = options.line(props)\n        break\n\n      case 'bar':\n        plot_options = options.bar(props)\n        break\n\n      case 'rectGrid':\n        plot_options = options.rectGrid(props)\n        break\n\n\n      case 'histogram':\n        const series = props.data.col( props.colx )\n        const hist = series.binning({bins: 30})\n        const opt = hist.echartsOptions\n        plot_options = opt.bar({colx: 'value', coly: 'count'})\n        break\n\n      default:\n        alert(`unknown plot type: ${type}`)\n        break\n    }\n    return(\n      <EchartsReact\n        {...props}\n        option = {plot_options}\n        />\n    )\n  }\n}\n\n\n\nexport function react_echarts( options, params ){\n  return(\n    <EchartsReact\n      option = {options}\n      onClick = {params['onClick']}\n    />\n  )\n}\n\n\n\n\n\n\n/**\n * Returns a Pareto plot component based on the contents of the\n * jsonArray DAtaFrame\n */\nexport function Pareto( props ){\n\n  // pivot the user data based the unique users per day\n  var pivot = props.data.pivot_table(\n    props.colx,\n    props.coly,\n    'unique',\n    props.label\n    )\n\n  const split_values = props.data.unique(props.coly)\n\n  // format the x axis as a date when specified\n  if( (props.dates === true) | (props.colx === 'date') ){\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    pivot = pivot.apply('row', (value) => moment(value), 'datetime' )\n\n    // extract a list of unique day\n    const dates = pivot.unique('row')\n    const datetimes = pivot.unique('datetime')\n\n    // calculate the number of days between the minimum and maximum date\n    const t = new Date(Math.min.apply(null,datetimes))\n    const start_date = moment(formatDate(t))\n\n    // calculate the number of days within the window\n    const timeframe = (pivot.max('datetime') - pivot.min('datetime') )/(60*60*24*1000)\n\n    // add dates not in the pivot table\n    for( var i=0; i < timeframe; i++ ){\n      const date = moment(start_date).add(i, 'days').format('YYYY-MM-DD')\n      if( !dates.includes(date) ) pivot.push({row: date})\n    }\n  }\n\n  // sort the usage by date to ensure proper ordering\n  pivot = pivot.sort_values('row')\n\n  var _props = {\n    ...props,\n    ...{\n      data: pivot,\n      colx: 'row',\n      coly: split_values,\n      stacked: true,\n    }\n  }\n\n\n  const options = props.data.echartsOptions\n\n  return(\n    <EchartsReact\n      {..._props}\n      option = {options.bar(_props)}\n      />\n  )\n  // return(\n  //   <Bar\n  //     {...props}\n  //     data = {pivot}\n  //     colx = 'row'\n  //     coly = {split_values}\n  //     stacked = {true}\n  //     />\n  // )\n}\n","/**\n * eCharts Boxplot\n * =================\n *\n * Converts json arrays into echart series objects. The intention\n * is to simplify the conversion from json array to plot\n *\n * :Author: Nik Sumikawa\n * :Date: April 21, 2020\n */\n\n\nimport jsonArray from '../../../../jsonArray'\n\nimport scatter_overlay from './scatter_overlay'\n\nvar prepareBoxplotData\ntry{\n  prepareBoxplotData =  require( 'echarts/extension/dataTool').prepareBoxplotData\n}catch{ console.log( 'echarts module not implemented')}\n\n\n/**\n * Convert the json_array to a format for generating a boxplot\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\n * @param  {string} coly  column 2 name\n * @param  {object} params parameters used to customize the plot\n * @return {Object}       local object contents\n */\nexport default function boxplot( props ){\n\n\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n\n  json_array = json_array.sort_values(props.colx)\n\n  // group the data based on the boxplot groups\n  const groups = json_array.groupby([props.colx])\n\n  // group the data based on the unique column values\n  var group_values = []\n  for( var i=0; i < groups.length; i++ ){\n    group_values.push(\n      groups[i].json_obj.map(row => row[props.coly])\n    )\n  }\n\n  // // leverage the echarts function to generate the data\n  const echartsData = prepareBoxplotData(group_values)\n\n  // format the boxplot results as a series\n  var series = [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      data: echartsData.boxData,\n    }\n  ]\n\n\n  // add the outlier samples. This is set by default and\n  // can only be turned off by expicitly providing false\n  if( (props.outliers !== false)&(props.allSample !== true) ){\n    series.push({\n      name: 'outlier',\n      type: 'scatter',\n      data: echartsData.outliers\n      }\n    )\n  }\n\n  if( (props.allSample === true)|(props.overlayFilter !== undefined) ){\n    series = series.concat(\n      scatter_overlay(props)\n    )\n  }\n\n\n  return series\n}\n","/**\n * Scatter Overlay\n * ===================\n *\n * Overlays a scatter plot containing all samples\n * on top of an existing boxplot\n *\n * @author Nik Sumikawa\n * @date Dec 2, 2020\n *\n */\n\n\nimport jsonArray from '../../../../jsonArray'\nimport scatter from '../scatter'\nimport scatter_by from '../scatter/scatterBy'\n\n // when specified, overlay a scatter plot that highlights\n // the location of all 'MARKED' samples in the specified\n // label column\nexport default function scatter_overlay( props ){\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n\n  // group the data based on the boxplot groups\n  const keys = json_array.unique( props.colx )\n\n  // create a mapping between the x column values and the integer\n  // values used for the boxplot\n  var mapping = {}\n  // keys.forEach((element, i) => mapping[element] = echartsData.axisData[i])\n  keys.forEach((element, i) => mapping[element] = i)\n  json_array = json_array.copy_column( props.colx, 'boxplot_x' )\n  json_array = json_array.replace('boxplot_x', mapping)\n  json_array = json_array.astype({'boxplot_x': 'int'})\n\n\n  if( props.overlayFilter ) json_array = json_array.filter( props.overlayFilter )\n\n  // create multicolored scatter plot when colorBy attribute is provided\n  var scatterFunc = scatter\n  if( props.colorBy !== undefined ) scatterFunc = scatter_by\n\n\n  return scatterFunc({\n      ...props,\n      ...{\n        colx: 'boxplot_x',\n        json_array: json_array,\n      }}\n    )\n\n}\n","\nimport jsonArray from '../../../../jsonArray'\nimport propsToSeries from '../propsToSeries'\n\n/**\n * echarts area plot data formatter\n * @param  {string} col  column name\n * @return {object}      echarts data series object\n */\nexport default function Bar( props ){\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n\n  var Series = {\n    name: 'bar',\n    type: 'bar',\n    data: json_array.map( row => row[props.col] )\n\n  }\n\n  Series = propsToSeries(props, Series)\n\n  return Series\n}\n","\nimport jsonArray from '../../../../jsonArray'\nimport Bar from './bar'\n/**\n * echarts area plot data formatter\n * @param  {string} col  column name\n * @return {object}      echarts data series object\n */\nexport default function BarPlot( props ){\n\n  var json_array = props.json_array\n  if( !(json_array instanceof jsonArray) ){\n    json_array = new jsonArray(json_array)\n  }\n\n\n  // return a single boxplot when the column is a string\n  if( typeof props.col === 'string' ){\n    return [Bar({\n      ...props,\n      ...{\n        col: props.col,\n        json_array: json_array,\n      }\n    })]\n  }\n\n  var series = []\n  for( var i=0; i < props.col.length; i++ ){\n\n    // create a data structure for plotting the scatter plot\n    series.push( Bar({\n      ...props,\n      ...{\n        col: props.col[i],\n        name: props.col[i],\n        json_array: json_array,\n      }\n    }) )\n\n  }\n\n  return series\n\n\n\n}\n","var map = {\n\t\"./\": 271,\n\t\"./components/CodeRender\": 349,\n\t\"./components/CodeRender.jsx\": 349,\n\t\"./components/Example\": 338,\n\t\"./components/Example.jsx\": 338,\n\t\"./components/Header\": 339,\n\t\"./components/Header.jsx\": 339,\n\t\"./components/Sidebar\": 350,\n\t\"./components/Sidebar.jsx\": 350,\n\t\"./components/jsonArray\": 232,\n\t\"./components/jsonArray.js\": 232,\n\t\"./config\": 354,\n\t\"./config.js\": 354,\n\t\"./doc/Demo/BasicExample.doc\": 1228,\n\t\"./doc/Echarts/Bar/Pareto.doc\": 1229,\n\t\"./doc/Echarts/Bar/Simple.doc\": 1230,\n\t\"./doc/Echarts/Bar/Stacked.doc\": 1231,\n\t\"./doc/Echarts/Boxplot/AllSamples.doc\": 1232,\n\t\"./doc/Echarts/Boxplot/AllSamplesGrouped.doc\": 1233,\n\t\"./doc/Echarts/Boxplot/FilteredOverlay.doc\": 1234,\n\t\"./doc/Echarts/Boxplot/Simple.doc\": 1235,\n\t\"./doc/Echarts/Custom/HorizontalLine.doc\": 1236,\n\t\"./doc/Echarts/Custom/Selection.doc\": 1237,\n\t\"./doc/Echarts/Custom/Simple.doc\": 1238,\n\t\"./doc/Echarts/Custom/Style.doc\": 1239,\n\t\"./doc/Echarts/Custom/Zoom.doc\": 1240,\n\t\"./doc/Echarts/Custom/ZoomSlider.doc\": 1241,\n\t\"./doc/Echarts/Custom/ZoomVertical.doc\": 1242,\n\t\"./doc/Echarts/Custom/onClick.doc\": 1243,\n\t\"./doc/Echarts/Format/Legend.doc\": 1244,\n\t\"./doc/Echarts/Format/ToolboxExample.doc\": 1245,\n\t\"./doc/Echarts/Heatmap/Simple.doc\": 1246,\n\t\"./doc/Echarts/Line/ErrorBars.doc\": 1247,\n\t\"./doc/Echarts/Line/Highlight.doc\": 1248,\n\t\"./doc/Echarts/Line/Simple.doc\": 1249,\n\t\"./doc/Echarts/Pie/FromSeries.doc\": 1250,\n\t\"./doc/Echarts/Pie/Simple.doc\": 1251,\n\t\"./doc/Echarts/RectGrid/Custom.doc\": 1252,\n\t\"./doc/Echarts/RectGrid/Simple.doc\": 1253,\n\t\"./doc/Echarts/Scatter/ColorBy.doc\": 1254,\n\t\"./doc/Echarts/Scatter/Labeled.doc\": 1255,\n\t\"./doc/Echarts/Scatter/Simple.doc\": 1256,\n\t\"./doc/Echarts/Selection/SelectionScatter.doc\": 1257,\n\t\"./doc/Echarts/Tooltips/tooltips.doc\": 1258,\n\t\"./doc/Table/AccordianTable.doc\": 1259,\n\t\"./doc/Table/AlternatingStyle.doc\": 1260,\n\t\"./doc/Table/Checkbox.doc\": 1261,\n\t\"./doc/Table/ColumnFilters.doc\": 1262,\n\t\"./doc/Table/LazyLoading.doc\": 1263,\n\t\"./doc/Table/MultiRowCol.doc\": 1264,\n\t\"./doc/Table/MultirowTable.doc\": 1265,\n\t\"./doc/Table/NoHeader.doc\": 1266,\n\t\"./doc/Table/ParentFilterCol.doc\": 1267,\n\t\"./doc/Table/ParentSortCol.doc\": 1268,\n\t\"./doc/Table/SimpleTable.doc\": 1269,\n\t\"./doc/Table/TableFormat.doc\": 1270,\n\t\"./examples/Demo/BasicExample\": 311,\n\t\"./examples/Demo/BasicExample.jsx\": 311,\n\t\"./examples/Echarts/Area/Simple\": 154,\n\t\"./examples/Echarts/Area/Simple.jsx\": 154,\n\t\"./examples/Echarts/Area/config\": 168,\n\t\"./examples/Echarts/Area/config.json\": 168,\n\t\"./examples/Echarts/Bar/Pareto\": 169,\n\t\"./examples/Echarts/Bar/Pareto.jsx\": 169,\n\t\"./examples/Echarts/Bar/Simple\": 170,\n\t\"./examples/Echarts/Bar/Simple.jsx\": 170,\n\t\"./examples/Echarts/Bar/Stacked\": 171,\n\t\"./examples/Echarts/Bar/Stacked.jsx\": 171,\n\t\"./examples/Echarts/Bar/config\": 172,\n\t\"./examples/Echarts/Bar/config.json\": 172,\n\t\"./examples/Echarts/Boxplot/AllSamples\": 173,\n\t\"./examples/Echarts/Boxplot/AllSamples.jsx\": 173,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped\": 174,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay\": 175,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./examples/Echarts/Boxplot/Simple\": 176,\n\t\"./examples/Echarts/Boxplot/Simple.jsx\": 176,\n\t\"./examples/Echarts/Boxplot/config\": 177,\n\t\"./examples/Echarts/Boxplot/config.json\": 177,\n\t\"./examples/Echarts/Custom/HorizontalLine\": 178,\n\t\"./examples/Echarts/Custom/HorizontalLine.jsx\": 178,\n\t\"./examples/Echarts/Custom/Selection\": 179,\n\t\"./examples/Echarts/Custom/Selection.jsx\": 179,\n\t\"./examples/Echarts/Custom/Simple\": 180,\n\t\"./examples/Echarts/Custom/Simple.jsx\": 180,\n\t\"./examples/Echarts/Custom/Style\": 181,\n\t\"./examples/Echarts/Custom/Style.jsx\": 181,\n\t\"./examples/Echarts/Custom/Zoom\": 182,\n\t\"./examples/Echarts/Custom/Zoom.jsx\": 182,\n\t\"./examples/Echarts/Custom/ZoomSlider\": 183,\n\t\"./examples/Echarts/Custom/ZoomSlider.jsx\": 183,\n\t\"./examples/Echarts/Custom/ZoomVertical\": 184,\n\t\"./examples/Echarts/Custom/ZoomVertical.jsx\": 184,\n\t\"./examples/Echarts/Custom/config\": 185,\n\t\"./examples/Echarts/Custom/config.json\": 185,\n\t\"./examples/Echarts/Custom/onClick\": 186,\n\t\"./examples/Echarts/Custom/onClick.jsx\": 186,\n\t\"./examples/Echarts/Format/Legend\": 187,\n\t\"./examples/Echarts/Format/Legend.jsx\": 187,\n\t\"./examples/Echarts/Format/ToolboxExample\": 188,\n\t\"./examples/Echarts/Format/ToolboxExample.jsx\": 188,\n\t\"./examples/Echarts/Format/config\": 189,\n\t\"./examples/Echarts/Format/config.json\": 189,\n\t\"./examples/Echarts/Heatmap/Simple\": 190,\n\t\"./examples/Echarts/Heatmap/Simple.jsx\": 190,\n\t\"./examples/Echarts/Heatmap/config\": 191,\n\t\"./examples/Echarts/Heatmap/config.json\": 191,\n\t\"./examples/Echarts/Line/ErrorBars\": 192,\n\t\"./examples/Echarts/Line/ErrorBars.jsx\": 192,\n\t\"./examples/Echarts/Line/Highlight\": 193,\n\t\"./examples/Echarts/Line/Highlight.jsx\": 193,\n\t\"./examples/Echarts/Line/Simple\": 194,\n\t\"./examples/Echarts/Line/Simple.jsx\": 194,\n\t\"./examples/Echarts/Line/config\": 195,\n\t\"./examples/Echarts/Line/config.json\": 195,\n\t\"./examples/Echarts/Pie/FromSeries\": 196,\n\t\"./examples/Echarts/Pie/FromSeries.jsx\": 196,\n\t\"./examples/Echarts/Pie/Simple\": 197,\n\t\"./examples/Echarts/Pie/Simple.jsx\": 197,\n\t\"./examples/Echarts/Pie/config\": 198,\n\t\"./examples/Echarts/Pie/config.json\": 198,\n\t\"./examples/Echarts/RectGrid/Custom\": 199,\n\t\"./examples/Echarts/RectGrid/Custom.jsx\": 199,\n\t\"./examples/Echarts/RectGrid/Simple\": 200,\n\t\"./examples/Echarts/RectGrid/Simple.jsx\": 200,\n\t\"./examples/Echarts/RectGrid/config\": 201,\n\t\"./examples/Echarts/RectGrid/config.json\": 201,\n\t\"./examples/Echarts/Scatter/ColorBy\": 202,\n\t\"./examples/Echarts/Scatter/ColorBy.jsx\": 202,\n\t\"./examples/Echarts/Scatter/Labeled\": 203,\n\t\"./examples/Echarts/Scatter/Labeled.jsx\": 203,\n\t\"./examples/Echarts/Scatter/Simple\": 204,\n\t\"./examples/Echarts/Scatter/Simple.jsx\": 204,\n\t\"./examples/Echarts/Scatter/config\": 205,\n\t\"./examples/Echarts/Scatter/config.json\": 205,\n\t\"./examples/Echarts/Selection/SelectionScatter\": 206,\n\t\"./examples/Echarts/Selection/SelectionScatter.jsx\": 206,\n\t\"./examples/Echarts/Selection/config\": 207,\n\t\"./examples/Echarts/Selection/config.json\": 207,\n\t\"./examples/Echarts/Tooltips/config\": 208,\n\t\"./examples/Echarts/Tooltips/config.json\": 208,\n\t\"./examples/Echarts/Tooltips/tooltips\": 209,\n\t\"./examples/Echarts/Tooltips/tooltips.jsx\": 209,\n\t\"./examples/Echarts/config\": 210,\n\t\"./examples/Echarts/config.js\": 210,\n\t\"./examples/Table/Accordian/AccordianTable\": 211,\n\t\"./examples/Table/Accordian/AccordianTable.jsx\": 211,\n\t\"./examples/Table/Accordian/config\": 212,\n\t\"./examples/Table/Accordian/config.json\": 212,\n\t\"./examples/Table/Filtering/ColumnFilters\": 213,\n\t\"./examples/Table/Filtering/ColumnFilters.jsx\": 213,\n\t\"./examples/Table/Filtering/config\": 214,\n\t\"./examples/Table/Filtering/config.json\": 214,\n\t\"./examples/Table/Header/MultiRow\": 215,\n\t\"./examples/Table/Header/MultiRow.jsx\": 215,\n\t\"./examples/Table/Header/NoHeader\": 216,\n\t\"./examples/Table/Header/NoHeader.jsx\": 216,\n\t\"./examples/Table/Header/config\": 217,\n\t\"./examples/Table/Header/config.json\": 217,\n\t\"./examples/Table/LazyLoading/LazyLoading\": 218,\n\t\"./examples/Table/LazyLoading/LazyLoading.jsx\": 218,\n\t\"./examples/Table/LazyLoading/config\": 219,\n\t\"./examples/Table/LazyLoading/config.json\": 219,\n\t\"./examples/Table/MultiRow/MultiRowCol\": 220,\n\t\"./examples/Table/MultiRow/MultiRowCol.jsx\": 220,\n\t\"./examples/Table/MultiRow/MultirowTable\": 221,\n\t\"./examples/Table/MultiRow/MultirowTable.jsx\": 221,\n\t\"./examples/Table/MultiRow/config\": 222,\n\t\"./examples/Table/MultiRow/config.json\": 222,\n\t\"./examples/Table/ParentFilterCol\": 223,\n\t\"./examples/Table/ParentFilterCol.jsx\": 223,\n\t\"./examples/Table/ParentSortCol\": 224,\n\t\"./examples/Table/ParentSortCol.jsx\": 224,\n\t\"./examples/Table/SpecialContent/Checkbox\": 225,\n\t\"./examples/Table/SpecialContent/Checkbox.jsx\": 225,\n\t\"./examples/Table/SpecialContent/config\": 226,\n\t\"./examples/Table/SpecialContent/config.json\": 226,\n\t\"./examples/Table/Style/AlternatingStyle\": 227,\n\t\"./examples/Table/Style/AlternatingStyle.jsx\": 227,\n\t\"./examples/Table/Style/SimpleTable\": 228,\n\t\"./examples/Table/Style/SimpleTable.jsx\": 228,\n\t\"./examples/Table/Style/TableFormat\": 229,\n\t\"./examples/Table/Style/TableFormat.jsx\": 229,\n\t\"./examples/Table/Style/config\": 230,\n\t\"./examples/Table/Style/config.json\": 230,\n\t\"./examples/Table/config\": 231,\n\t\"./examples/Table/config.js\": 231,\n\t\"./examples/data/jsonArray/data\": 166,\n\t\"./examples/data/jsonArray/data.json\": 166,\n\t\"./examples/data/jsonArray/yield_timeframe\": 167,\n\t\"./examples/data/jsonArray/yield_timeframe.json\": 167,\n\t\"./examples/getData\": 19,\n\t\"./examples/getData.js\": 19,\n\t\"./index\": 271,\n\t\"./index.jsx\": 271,\n\t\"./install.py\": 1271\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 493;","\n// Standardize method to map prop variables to series to\n// avoid multiple changes in multiple files\nexport default function propsToSeries(props, Series){\n\n    if( props.name !== undefined ) Series['name'] = props.name\n    if( props.stacked !== undefined ) Series['stack'] = props.stacked\n    if( props.color !== undefined ) Series['color'] = props.color\n    if( props.smooth !== undefined ) Series['smooth'] = props.smooth\n    if( props.symbol !== undefined ) Series['symbol'] = props.symbol\n    if( props.symbolSize !== undefined ) Series['symbolSize'] = props.symbolSize\n    if( props.lineStyle !== undefined ) Series['lineStyle'] = props.lineStyle\n    if( props.axis !== undefined ) Series['yAxisIndex'] = props.axis\n    if( props.z !== undefined ) Series['z'] = props.z\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\n\n    if( props.label !== undefined ){\n      Series['label'] = {\n        show: true,\n        position: 'top',\n        formatter: props.label\n      }\n      Series['showSymbol'] = true\n    }\n    if( props.lw !== undefined ) Series['itemStyle'] = {normal: {borderWidth:props.lw}}\n\n    return Series\n}\n","/**\n * File Input/Output Interface\n * ==============================\n *\n * React component used to retrieve from and store to the user's\n * desktop\n *\n * :Author: Nik Sumikawa\n * :Date: Oct 7, 2020\n */\n\n\nimport React from 'react';\nimport ReactLibraryFramework from '../ReactLibraryFramework'\n\nimport {Button} from '../framework/Components'\n\nconst extract = require('../../fileIO/extract')\n\n\n\nexport default class FileIOLibrary extends ReactLibraryFramework{\n  constructor(data){\n    super(data)\n\n    // must bind this to all internal functions or they will be\n    // lost when rendering via react\n    this.ToCsv = this.ToCsv.bind(this)\n\n\n  }\n\n  ToCsv( props ){\n    return ToCsv( this.props(props) )\n  }\n\n}\n\n\n\n\n/**\n * Returns a heatmap plotting component based on the contents of the\n * jsonArray DAtaFrame\n */\nexport function ToCsv( props ){\n\n  // set defaults for the button label and filename and\n  // overwrite the defaults when values are passed in\n  var value = 'Download'\n  if( props.value !== undefined ) value = props.value\n\n  var filename = 'file.csv'\n  if( props.filename !== undefined ) value = props.filename\n\n  return(\n    <Button\n      {...props}\n      style={{...{textAlign:'center'}, ...props.buttonStyle}}\n      component={props.button}\n      key={`toCSV Button`}\n      defaultValue={value}\n      onClick={() => extract.toCsv(props.data, filename )}\n      />\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport Documentation from './Documentation'\n\nReactDOM.render( <Documentation />,  document.getElementById('root') );\n","var map = {\n\t\"./Demo/BasicExample\": 311,\n\t\"./Demo/BasicExample.jsx\": 311,\n\t\"./Echarts/Area/Simple\": 154,\n\t\"./Echarts/Area/Simple.jsx\": 154,\n\t\"./Echarts/Area/config\": 168,\n\t\"./Echarts/Area/config.json\": 168,\n\t\"./Echarts/Bar/Pareto\": 169,\n\t\"./Echarts/Bar/Pareto.jsx\": 169,\n\t\"./Echarts/Bar/Simple\": 170,\n\t\"./Echarts/Bar/Simple.jsx\": 170,\n\t\"./Echarts/Bar/Stacked\": 171,\n\t\"./Echarts/Bar/Stacked.jsx\": 171,\n\t\"./Echarts/Bar/config\": 172,\n\t\"./Echarts/Bar/config.json\": 172,\n\t\"./Echarts/Boxplot/AllSamples\": 173,\n\t\"./Echarts/Boxplot/AllSamples.jsx\": 173,\n\t\"./Echarts/Boxplot/AllSamplesGrouped\": 174,\n\t\"./Echarts/Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./Echarts/Boxplot/FilteredOverlay\": 175,\n\t\"./Echarts/Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./Echarts/Boxplot/Simple\": 176,\n\t\"./Echarts/Boxplot/Simple.jsx\": 176,\n\t\"./Echarts/Boxplot/config\": 177,\n\t\"./Echarts/Boxplot/config.json\": 177,\n\t\"./Echarts/Custom/HorizontalLine\": 178,\n\t\"./Echarts/Custom/HorizontalLine.jsx\": 178,\n\t\"./Echarts/Custom/Selection\": 179,\n\t\"./Echarts/Custom/Selection.jsx\": 179,\n\t\"./Echarts/Custom/Simple\": 180,\n\t\"./Echarts/Custom/Simple.jsx\": 180,\n\t\"./Echarts/Custom/Style\": 181,\n\t\"./Echarts/Custom/Style.jsx\": 181,\n\t\"./Echarts/Custom/Zoom\": 182,\n\t\"./Echarts/Custom/Zoom.jsx\": 182,\n\t\"./Echarts/Custom/ZoomSlider\": 183,\n\t\"./Echarts/Custom/ZoomSlider.jsx\": 183,\n\t\"./Echarts/Custom/ZoomVertical\": 184,\n\t\"./Echarts/Custom/ZoomVertical.jsx\": 184,\n\t\"./Echarts/Custom/config\": 185,\n\t\"./Echarts/Custom/config.json\": 185,\n\t\"./Echarts/Custom/onClick\": 186,\n\t\"./Echarts/Custom/onClick.jsx\": 186,\n\t\"./Echarts/Format/Legend\": 187,\n\t\"./Echarts/Format/Legend.jsx\": 187,\n\t\"./Echarts/Format/ToolboxExample\": 188,\n\t\"./Echarts/Format/ToolboxExample.jsx\": 188,\n\t\"./Echarts/Format/config\": 189,\n\t\"./Echarts/Format/config.json\": 189,\n\t\"./Echarts/Heatmap/Simple\": 190,\n\t\"./Echarts/Heatmap/Simple.jsx\": 190,\n\t\"./Echarts/Heatmap/config\": 191,\n\t\"./Echarts/Heatmap/config.json\": 191,\n\t\"./Echarts/Line/ErrorBars\": 192,\n\t\"./Echarts/Line/ErrorBars.jsx\": 192,\n\t\"./Echarts/Line/Highlight\": 193,\n\t\"./Echarts/Line/Highlight.jsx\": 193,\n\t\"./Echarts/Line/Simple\": 194,\n\t\"./Echarts/Line/Simple.jsx\": 194,\n\t\"./Echarts/Line/config\": 195,\n\t\"./Echarts/Line/config.json\": 195,\n\t\"./Echarts/Pie/FromSeries\": 196,\n\t\"./Echarts/Pie/FromSeries.jsx\": 196,\n\t\"./Echarts/Pie/Simple\": 197,\n\t\"./Echarts/Pie/Simple.jsx\": 197,\n\t\"./Echarts/Pie/config\": 198,\n\t\"./Echarts/Pie/config.json\": 198,\n\t\"./Echarts/RectGrid/Custom\": 199,\n\t\"./Echarts/RectGrid/Custom.jsx\": 199,\n\t\"./Echarts/RectGrid/Simple\": 200,\n\t\"./Echarts/RectGrid/Simple.jsx\": 200,\n\t\"./Echarts/RectGrid/config\": 201,\n\t\"./Echarts/RectGrid/config.json\": 201,\n\t\"./Echarts/Scatter/ColorBy\": 202,\n\t\"./Echarts/Scatter/ColorBy.jsx\": 202,\n\t\"./Echarts/Scatter/Labeled\": 203,\n\t\"./Echarts/Scatter/Labeled.jsx\": 203,\n\t\"./Echarts/Scatter/Simple\": 204,\n\t\"./Echarts/Scatter/Simple.jsx\": 204,\n\t\"./Echarts/Scatter/config\": 205,\n\t\"./Echarts/Scatter/config.json\": 205,\n\t\"./Echarts/Selection/SelectionScatter\": 206,\n\t\"./Echarts/Selection/SelectionScatter.jsx\": 206,\n\t\"./Echarts/Selection/config\": 207,\n\t\"./Echarts/Selection/config.json\": 207,\n\t\"./Echarts/Tooltips/config\": 208,\n\t\"./Echarts/Tooltips/config.json\": 208,\n\t\"./Echarts/Tooltips/tooltips\": 209,\n\t\"./Echarts/Tooltips/tooltips.jsx\": 209,\n\t\"./Echarts/config\": 210,\n\t\"./Echarts/config.js\": 210,\n\t\"./Table/Accordian/AccordianTable\": 211,\n\t\"./Table/Accordian/AccordianTable.jsx\": 211,\n\t\"./Table/Accordian/config\": 212,\n\t\"./Table/Accordian/config.json\": 212,\n\t\"./Table/Filtering/ColumnFilters\": 213,\n\t\"./Table/Filtering/ColumnFilters.jsx\": 213,\n\t\"./Table/Filtering/config\": 214,\n\t\"./Table/Filtering/config.json\": 214,\n\t\"./Table/Header/MultiRow\": 215,\n\t\"./Table/Header/MultiRow.jsx\": 215,\n\t\"./Table/Header/NoHeader\": 216,\n\t\"./Table/Header/NoHeader.jsx\": 216,\n\t\"./Table/Header/config\": 217,\n\t\"./Table/Header/config.json\": 217,\n\t\"./Table/LazyLoading/LazyLoading\": 218,\n\t\"./Table/LazyLoading/LazyLoading.jsx\": 218,\n\t\"./Table/LazyLoading/config\": 219,\n\t\"./Table/LazyLoading/config.json\": 219,\n\t\"./Table/MultiRow/MultiRowCol\": 220,\n\t\"./Table/MultiRow/MultiRowCol.jsx\": 220,\n\t\"./Table/MultiRow/MultirowTable\": 221,\n\t\"./Table/MultiRow/MultirowTable.jsx\": 221,\n\t\"./Table/MultiRow/config\": 222,\n\t\"./Table/MultiRow/config.json\": 222,\n\t\"./Table/ParentFilterCol\": 223,\n\t\"./Table/ParentFilterCol.jsx\": 223,\n\t\"./Table/ParentSortCol\": 224,\n\t\"./Table/ParentSortCol.jsx\": 224,\n\t\"./Table/SpecialContent/Checkbox\": 225,\n\t\"./Table/SpecialContent/Checkbox.jsx\": 225,\n\t\"./Table/SpecialContent/config\": 226,\n\t\"./Table/SpecialContent/config.json\": 226,\n\t\"./Table/Style/AlternatingStyle\": 227,\n\t\"./Table/Style/AlternatingStyle.jsx\": 227,\n\t\"./Table/Style/SimpleTable\": 228,\n\t\"./Table/Style/SimpleTable.jsx\": 228,\n\t\"./Table/Style/TableFormat\": 229,\n\t\"./Table/Style/TableFormat.jsx\": 229,\n\t\"./Table/Style/config\": 230,\n\t\"./Table/Style/config.json\": 230,\n\t\"./Table/config\": 231,\n\t\"./Table/config.js\": 231,\n\t\"./data/jsonArray/data\": 166,\n\t\"./data/jsonArray/data.json\": 166,\n\t\"./data/jsonArray/yield_timeframe\": 167,\n\t\"./data/jsonArray/yield_timeframe.json\": 167,\n\t\"./getData\": 19,\n\t\"./getData.js\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 801;","\nexport const ENTROPY = [\n  \"#363388\",\n  \"#87ea00\",\n  \"#011fc3\",\n  \"#4cdf21\",\n  \"#3e0eba\",\n  \"#00d226\",\n  \"#692dda\",\n  \"#9bf94f\",\n  \"#3445ee\",\n  \"#a6db00\",\n  \"#714ffc\",\n  \"#82fc5f\",\n  \"#a227dd\",\n  \"#66ff72\",\n  \"#9335e6\",\n  \"#76c900\",\n  \"#023cda\",\n  \"#cef036\",\n  \"#da37ec\",\n  \"#2bff88\",\n  \"#c400c4\",\n  \"#00aa0a\",\n  \"#c454ff\",\n  \"#02c744\",\n  \"#dd55ff\",\n  \"#c0f346\",\n  \"#7d5dff\",\n  \"#f0d600\",\n  \"#0146ce\",\n  \"#a3c700\",\n  \"#50199f\",\n  \"#b0f55d\",\n  \"#c800b5\",\n  \"#02df7f\",\n  \"#ff5ff8\",\n  \"#00a52e\",\n  \"#da00b1\",\n  \"#95f980\",\n  \"#9e00a3\",\n  \"#5ba400\",\n  \"#566dff\",\n  \"#bdc400\",\n  \"#0032a9\",\n  \"#eabf00\",\n  \"#7371ff\",\n  \"#eee652\",\n  \"#0161e1\",\n  \"#deeb5b\",\n  \"#69028a\",\n  \"#9cf78f\",\n  \"#ea00b0\",\n  \"#01dd93\",\n  \"#fc00ab\",\n  \"#02f3b9\",\n  \"#c600a0\",\n  \"#6ffba9\",\n  \"#e90096\",\n  \"#01ae56\",\n  \"#ec70ff\",\n  \"#348900\",\n  \"#c47cff\",\n  \"#7ca500\",\n  \"#3682ff\",\n  \"#ffc530\",\n  \"#0261d6\",\n  \"#d5b200\",\n  \"#0144ab\",\n  \"#bab100\",\n  \"#258bff\",\n  \"#ea9f00\",\n  \"#0287ed\",\n  \"#f17f00\",\n  \"#01459b\",\n  \"#ceee6f\",\n  \"#7b007a\",\n  \"#5cfbc9\",\n  \"#fa0085\",\n  \"#019136\",\n  \"#ff57cd\",\n  \"#217500\",\n  \"#ff72e7\",\n  \"#00781d\",\n  \"#f38aff\",\n  \"#5b8700\",\n  \"#a68dff\",\n  \"#849600\",\n  \"#592282\",\n  \"#ffd760\",\n  \"#8b007a\",\n  \"#00e8c3\",\n  \"#ff2236\",\n  \"#02eadc\",\n  \"#ff312a\",\n  \"#00ebfd\",\n  \"#ff3f20\",\n  \"#00e9ec\",\n  \"#dd0018\",\n  \"#2be2ff\",\n  \"#ff3d3f\",\n  \"#5ff7f6\",\n  \"#f4005e\",\n  \"#01ad68\",\n  \"#e60072\",\n  \"#6bf8de\",\n  \"#cc002f\",\n  \"#00d1d3\",\n  \"#c32c00\",\n  \"#02ccf4\",\n  \"#d94a00\",\n  \"#4ab0ff\",\n  \"#ec6500\",\n  \"#6ea0ff\",\n  \"#d59f00\",\n  \"#005fad\",\n  \"#ffa72c\",\n  \"#007bc3\",\n  \"#ff772d\",\n  \"#00a4d7\",\n  \"#ce7600\",\n  \"#8aa8ff\",\n  \"#c19900\",\n  \"#dd91ff\",\n  \"#356b00\",\n  \"#ff4fa7\",\n  \"#016e30\",\n  \"#ff4f92\",\n  \"#005312\",\n  \"#ff95e9\",\n  \"#245200\",\n  \"#b69aff\",\n  \"#838600\",\n  \"#6f156a\",\n  \"#b5f19c\",\n  \"#af006a\",\n  \"#9af4c1\",\n  \"#da005a\",\n  \"#00a484\",\n  \"#ff4369\",\n  \"#00b1a4\",\n  \"#ae002c\",\n  \"#5cceff\",\n  \"#9d2300\",\n  \"#73c2ff\",\n  \"#c66800\",\n  \"#0185bf\",\n  \"#ffc24b\",\n  \"#293a79\",\n  \"#f4e379\",\n  \"#572a73\",\n  \"#f5e285\",\n  \"#79035b\",\n  \"#d0eb9c\",\n  \"#91005b\",\n  \"#019069\",\n  \"#ae004f\",\n  \"#a0f1e0\",\n  \"#9d0012\",\n  \"#02b0b8\",\n  \"#ff6c4c\",\n  \"#00abc4\",\n  \"#ff8e3d\",\n  \"#016398\",\n  \"#ffa548\",\n  \"#005174\",\n  \"#b48200\",\n  \"#8fbbff\",\n  \"#ad5000\",\n  \"#028aab\",\n  \"#ff6362\",\n  \"#007548\",\n  \"#ff658c\",\n  \"#005629\",\n  \"#e8a9ff\",\n  \"#948500\",\n  \"#c8adff\",\n  \"#6f7300\",\n  \"#ffb7fc\",\n  \"#184817\",\n  \"#ff8ecd\",\n  \"#344700\",\n  \"#f8c4ff\",\n  \"#575900\",\n  \"#b8b9ff\",\n  \"#9d3500\",\n  \"#aeebfe\",\n  \"#aa003b\",\n  \"#aeedea\",\n  \"#92002d\",\n  \"#baecd9\",\n  \"#980050\",\n  \"#018d81\",\n  \"#ff6c74\",\n  \"#029195\",\n  \"#ff7e5c\",\n  \"#00667f\",\n  \"#ff9158\",\n  \"#00535b\",\n  \"#ffa466\",\n  \"#204259\",\n  \"#fede92\",\n  \"#572e65\",\n  \"#ffd08b\",\n  \"#323e5c\",\n  \"#ffa173\",\n  \"#074648\",\n  \"#ff808c\",\n  \"#00523c\",\n  \"#ff8cb3\",\n  \"#2f4513\",\n  \"#fbd6fb\",\n  \"#822f00\",\n  \"#c1e6ff\",\n  \"#86003d\",\n  \"#e6e4ad\",\n  \"#701f49\",\n  \"#dbe6c4\",\n  \"#7c112f\",\n  \"#c9e7ec\",\n  \"#791a1f\",\n  \"#e0dffc\",\n  \"#682e03\",\n  \"#d5cfff\",\n  \"#975d00\",\n  \"#016b72\",\n  \"#ff9493\",\n  \"#016252\",\n  \"#ffaed5\",\n  \"#7b6a00\",\n  \"#4c3752\",\n  \"#ffba84\",\n  \"#164738\",\n  \"#ff9e8a\",\n  \"#294529\",\n  \"#ffbec1\",\n  \"#4c3d02\",\n  \"#f7dbdd\",\n  \"#55390b\",\n  \"#e0e2de\",\n  \"#6d291d\",\n  \"#f4dec0\",\n  \"#6a2937\",\n  \"#ffd8b0\",\n  \"#3b3e4d\",\n  \"#ffc999\",\n  \"#563548\",\n  \"#ffd1c3\",\n  \"#43401e\",\n  \"#ffb3a3\",\n  \"#413f30\",\n  \"#854c00\",\n  \"#443d3b\",\n  \"#755000\",\n  \"#59343c\",\n  \"#695800\",\n  \"#543830\",\n  \"#60331a\"\n]\n","\nexport const ENTROPY_8BIT = [\n    '#0082c8',\t//\tBlue\t1\n    '#FF0000',\t//\tRed\t    2\n    '#3cb44b',\t//\tGreen\t3\n    '#f58231',\t//\tOrange\t4\n    '#911eb4',\t//\tPurple\t5\n    '#ffe119',\t//\tYellow\t6\n    '#46f0f0',\t//\tCyan\t7\n    '#f032e6',\t//\tMagenta\t8\n    '#d2f53c',\t//\tLime\t9\n    '#fabebe',\t//\tPink\t10\n    '#008080',\t//\tTeal\t11\n    '#e6beff',\t//\tLavender\t12\n    '#aa6e28',\t//\tBrown\t13\n    '#fffac8',\t//\tBeige\t14\n    '#800000',\t//\tMaroon\t15\n    '#aaffc3',\t//\tMint\t16\n    '#808000',\t//\tOlive\t17\n    '#ffd8b1',\t//\tCoral\t18\n    '#000080',\t//\tNavy\t19\n    '#808080',\t//\tGrey\t20\n    '#FFFFFF',\t//\tWhite\t21\n    '#000000',\t//\tBlack\t22\n    ]\n","\nexport const  REDS = [\n  '#ff0000', '#ff1900', '#ff2700', '#ff3100', '#ff3900',\n  '#ff4000', '#ff4700', '#ff4d00', '#ff5200', '#ff5800',\n  '#ff5d00', '#ff6101', '#ff6602', '#ff6a04', '#ff6e05',\n  '#ff7207', '#ff7609', '#ff7a0c', '#ff7e0e', '#ff8110',\n  '#ff8513', '#ff8815', '#ff8c17', '#ff8f19', '#ff921c',\n  '#ff951e', '#ff9820', '#ff9b23', '#ff9e25', '#ffa127',\n  '#ffa42a', '#ffa62c', '#ffa92f', '#ffac31', '#ffae34',\n  '#ffb136', '#ffb338', '#ffb63b', '#ffb83d', '#ffba40',\n  '#ffbd43', '#ffbf45', '#ffc148', '#ffc34a', '#ffc54d',\n  '#ffc850', '#ffca52', '#ffcc55', '#ffce58', '#ffcf5a',\n  '#ffd15d', '#ffd360', '#ffd563', '#ffd765', '#ffd868',\n  '#ffda6b', '#ffdc6e', '#ffdd71', '#ffdf74', '#ffe077',\n  '#ffe27a', '#ffe37d', '#ffe580', '#ffe683', '#ffe786',\n  '#ffe989', '#ffea8c', '#ffeb8f', '#ffec92', '#ffee95',\n  '#ffef99', '#fff09c', '#fff19f', '#fff2a2', '#fff3a6',\n  '#fff4a9', '#fff5ac', '#fff5b0', '#fff6b3', '#fff7b6',\n  '#fff8ba', '#fff8bd', '#fff9c1', '#fffac4', '#fffac8',\n  '#fffbcb', '#fffbcf', '#fffcd2', '#fffcd6', '#fffdd9',\n  '#fffddd', '#fffee1', '#fffee4', '#fffee8', '#fffeec',\n  '#fffff0', '#fffff3', '#fffff7', '#fffffb', '#ffffff',]\n","/**\n * Colors\n * ======\n *\n * Description\n * -----------\n * Routiens for generating colors based on a given index\n *\n */\n\nimport {ENTROPY} from './pallet/entropy_pallet'\nimport {ENTROPY_8BIT} from './pallet/entropy_8bit'\nimport {REDS} from './pallet/reds'\n\n\n\n\nexport function color( index, opacity, color_type='entropy', min=null, max=null, invert=true){\n  const color_hex = get_color( index, color_type, min, max, invert )\n\n  return convertHex(color_hex, opacity)\n}\n\n//\n /**\n  * returns the color at the specified index. Round robbin selection implemented\n  * @param  {Int} index                  color index\n  * @param  {String} [color_type='entropy'] color type definition\n  * @return {String}                        hex color string\n  */\n function get_color( index, color_type='entropy', min=null, max=null, invert=true ){\n\n   //select the color type. Default to entropy\n   var colors = ENTROPY\n   if( color_type === 'entropy' ){colors = ENTROPY}\n   if( color_type === 'entropy_8bit' ){colors = ENTROPY_8BIT}\n   if( color_type === 'reds' ){colors = REDS}\n\n   const max_colors = colors.length - 1\n\n   var step_size\n   var val = index\n\n   if( max !== null) {\n\n     //default the color range assuming there is no minum value\n     // var step_size = max_colors/max\n     // var val = max_colors - Math.floor((index*step_size))\n     // if( invert ){ val = max_colors - Math.floor((index*step_size)) }\n     //\n     //change the scale and color range when a minimum value exists\n    if( min !== null ){\n       step_size = max_colors/(max - min + 1)\n\n       //determine the color value\n       val = max_colors - Math.floor((index*step_size)-min)\n       if( invert ){ val = max_colors - Math.floor((index*step_size)-min) }\n\n     //scale the colors when there is no minimum value\n     }else{\n       step_size = max_colors/max\n       val = max_colors - Math.floor((index*step_size))\n       if( invert ){ val = max_colors - Math.floor((index*step_size)) }\n     }\n\n     //set an upper and lower bound to avoid accessing outside of the array\n     if( val > max_colors ){ val = max_colors }\n     if( val < 0 ){ val = 0}\n\n     return colors[val]\n   }\n\n\n   // for continuous color schemes, cap the positive and negative sizes of th\n   // array\n   if( color_type === 'reds' ){\n\n     val = max_colors-index\n\n     // Invert the color scheme and check to ensure the highside\n     // doesn't run off the negative side of the array\n     if( invert === true ){\n       if( val < 0 ){ val = 0}\n       return colors[val]\n     }\n\n     if( val > max_colors ){ val = max_colors }\n\n     return colors[val]\n   }\n\n\n   return colors[val%colors.length]\n }\n\n\nexport function convertHex(hex,opacity){\n    hex = hex.replace('#','');\n    const r = parseInt(hex.substring(0,2), 16);\n    const g = parseInt(hex.substring(2,4), 16);\n    const b = parseInt(hex.substring(4,6), 16);\n\n    return 'rgba('+r+','+g+','+b+','+opacity/100+')';\n\n}\n\n\n function int_to_color(v, min=0, max=100) {\n   v = 100*((v-min) / (max - min)) - 1\n   v = Math.max(0, v)\n   return REDS[Math.round(v)]\n }\n\n function shadeHexColor(color, percent) {\n   // changes the color by a percent. positive percentage are lighter and negative are darker\n   var f = parseInt(color.slice(1),16)\n   var t = percent<0?0:255\n   var p = percent<0?percent*-1:percent\n   var R = f>>16\n   var G = (f>>8) & 0x00FF\n   var B = f&0x0000FF\n\n   return \"#\"+( 0x1000000+(Math.round((t-R)*p)+R) *\n                0x10000+(Math.round((t-G)*p)+G) *\n                0x100+(Math.round((t-B)*p)+B))\n                .toString(16)\n                .slice(1);\n }\n\n\n/**\n * returns and object containing the fill and edge color based on a boolean value\n */\nexport function booleanColor( value ){\n\n  var fill, edge\n\n  switch( value ){\n    case true :\n      fill = '#FF0000'\n      edge = shadeHexColor( fill, -0.5)\n      break\n\n    case false :\n      fill = '#00FF00'\n      edge = shadeHexColor( fill, -0.5)\n      break\n\n    case 0 :\n      fill = '#00FF00'\n      edge = shadeHexColor( fill, -0.5)\n      break\n\n    case 1 :\n      fill = '#FF0000'\n      edge = shadeHexColor( fill, -0.5)\n      break\n\n    case -1 :\n      fill = '#B0B0B0'\n      edge = shadeHexColor( fill, -0.5)\n      break\n\n    case -2 :\n      fill = '#000000'\n      edge = shadeHexColor( fill, 0.5)\n      break\n\n    default :\n      fill = 'white'\n      edge = 'black'\n      break\n  }\n\n  return {\n    fill: fill,\n    edge: edge\n  }\n}\n\n\n/**\n * lightens the fill color and darkens the edge color to\n * create a nice contrast between edge and fill\n * @param  {hex color} colorHex hex color value\n * @return {object}          object containing the edge and fill colors\n */\nexport function fillAndEdge( colorHex ){\n  return {\n    fill: shadeHexColor( colorHex, 0.2),\n    edge: shadeHexColor( colorHex, -0.5)\n  }\n}\n\n/**\n * Converts a single RGB component to hex string\n * @param  {8bit integer} c 8 bit color integer\n * @return {string}   hex string for the specified component\n */\nfunction componentToHex(c) {\n  if ( c === undefined ) return 'FF'\n\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\n/**\n * returns the hex string based on the provided components\n * @param  {string} r red color component integer value\n * @param  {string} g green color component integer value\n * @param  {string} b blue color component integer value\n * @return {string}   hex color string\n */\nexport function rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\n\nexport {get_color, int_to_color, shadeHexColor};\nexport default get_color;\n"],"sourceRoot":""}