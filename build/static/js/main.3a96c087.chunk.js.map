{"version":3,"sources":["jsonArray/frameworks/react/framework/SemanticUI.js","jsonArray/frameworks/react/plugins/Excel.jsx","jsonArray/frameworks/fileIO/fromFile.js","jsonArray/frameworks/react/ReactLibraryFramework.js","jsonArray/data_types/datetime.js","jsonArray/Series.js","Documentation/examples/data sync /^/.*$","Documentation/examples/Echarts sync /^/.*$","Documentation/examples/Table sync /^/.*$","Documentation/doc/Demo/BasicExample.doc","Documentation/doc/Echarts/Bar/Pareto.doc","Documentation/doc/Echarts/Bar/Simple.doc","Documentation/doc/Echarts/Bar/Stacked.doc","Documentation/doc/Echarts/Boxplot/AllSamples.doc","Documentation/doc/Echarts/Boxplot/AllSamplesGrouped.doc","Documentation/doc/Echarts/Boxplot/FilteredOverlay.doc","Documentation/doc/Echarts/Boxplot/Simple.doc","Documentation/doc/Echarts/Custom/HorizontalLine.doc","Documentation/doc/Echarts/Custom/Selection.doc","Documentation/doc/Echarts/Custom/Simple.doc","Documentation/doc/Echarts/Custom/Style.doc","Documentation/doc/Echarts/Custom/Zoom.doc","Documentation/doc/Echarts/Custom/ZoomSlider.doc","Documentation/doc/Echarts/Custom/ZoomVertical.doc","Documentation/doc/Echarts/Custom/onClick.doc","Documentation/doc/Echarts/Format/Legend.doc","Documentation/doc/Echarts/Format/ToolboxExample.doc","Documentation/doc/Echarts/Heatmap/Simple.doc","Documentation/doc/Echarts/Line/ErrorBars.doc","Documentation/doc/Echarts/Line/Highlight.doc","Documentation/doc/Echarts/Line/Simple.doc","Documentation/doc/Echarts/Pie/FromSeries.doc","Documentation/doc/Echarts/Pie/Simple.doc","Documentation/doc/Echarts/RectGrid/Custom.doc","Documentation/doc/Echarts/RectGrid/Simple.doc","Documentation/doc/Echarts/Scatter/ColorBy.doc","Documentation/doc/Echarts/Scatter/Labeled.doc","Documentation/doc/Echarts/Scatter/Simple.doc","Documentation/doc/Echarts/Selection/SelectionScatter.doc","Documentation/doc/Echarts/Tooltips/tooltips.doc","Documentation/doc/Table/AccordianTable.doc","Documentation/doc/Table/AlternatingStyle.doc","Documentation/doc/Table/Checkbox.doc","Documentation/doc/Table/ColumnFilters.doc","Documentation/doc/Table/LazyLoading.doc","Documentation/doc/Table/MultiRowCol.doc","Documentation/doc/Table/MultirowTable.doc","Documentation/doc/Table/NoHeader.doc","Documentation/doc/Table/ParentFilterCol.doc","Documentation/doc/Table/ParentSortCol.doc","Documentation/doc/Table/SimpleTable.doc","Documentation/doc/Table/TableFormat.doc","Documentation/install.py","jsonArray/frameworks/react/table/utilities/ColGroupsToCol.js","jsonArray/frameworks/react/table/header/Filter/ColumnFilter.jsx","jsonArray/frameworks/react/table/header/Cell/index.jsx","jsonArray/frameworks/react/table/header/SingleRow/ColumnRow.jsx","jsonArray/frameworks/react/table/header/SingleRow/index.jsx","jsonArray/frameworks/react/table/header/MultiRow/CategoryRow.jsx","jsonArray/frameworks/react/table/header/MultiRow/index.jsx","jsonArray/frameworks/react/table/header/DataFrameHeader.jsx","jsonArray/frameworks/react/table/header/SeriesHeader.jsx","jsonArray/frameworks/react/table/cell/coloredSquare.jsx","jsonArray/frameworks/react/table/cell/onClickFunc.jsx","jsonArray/frameworks/react/table/cell/cellType.jsx","jsonArray/frameworks/react/table/cell/booleanCircle.jsx","jsonArray/frameworks/react/table/cell/index.jsx","jsonArray/frameworks/react/table/body/Row.jsx","jsonArray/frameworks/react/table/body/SeriesRow.jsx","jsonArray/frameworks/react/table/body/AccordianRow.jsx","jsonArray/frameworks/react/table/body/MultiRow.jsx","jsonArray/frameworks/react/table/body/index.jsx","jsonArray/frameworks/react/table/Table.js","jsonArray/frameworks/echarts/series/scatter/scatterBy.js","jsonArray/data_types/format/valueToString.js","Documentation/examples/Echarts/Area/Simple.jsx","Documentation/examples/Echarts/Bar/Pareto.jsx","Documentation/examples/Echarts/Bar/Simple.jsx","Documentation/examples/Echarts/Bar/Stacked.jsx","Documentation/examples/Echarts/Boxplot/AllSamples.jsx","Documentation/examples/Echarts/Boxplot/AllSamplesGrouped.jsx","Documentation/examples/Echarts/Boxplot/FilteredOverlay.jsx","Documentation/examples/Echarts/Boxplot/Simple.jsx","Documentation/examples/Echarts/Custom/HorizontalLine.jsx","Documentation/examples/Echarts/Custom/Selection.jsx","jsonArray/index.jsx","Documentation/examples/Echarts/Custom/Simple.jsx","Documentation/examples/Echarts/Custom/Style.jsx","Documentation/examples/Echarts/Custom/Zoom.jsx","Documentation/examples/Echarts/Custom/ZoomSlider.jsx","Documentation/examples/Echarts/Custom/ZoomVertical.jsx","Documentation/examples/Echarts/Custom/onClick.jsx","Documentation/examples/Echarts/Format/Legend.jsx","Documentation/examples/Echarts/Format/ToolboxExample.jsx","Documentation/examples/getData.js","Documentation/examples/Echarts/Heatmap/Simple.jsx","Documentation/examples/Echarts/Line/ErrorBars.jsx","Documentation/examples/Echarts/Line/Highlight.jsx","Documentation/examples/Echarts/Line/Simple.jsx","Documentation/examples/Echarts/Pie/FromSeries.jsx","Documentation/examples/Echarts/Pie/Simple.jsx","Documentation/examples/Echarts/RectGrid/Custom.jsx","Documentation/examples/Echarts/RectGrid/Simple.jsx","Documentation/examples/Echarts/Scatter/ColorBy.jsx","Documentation/examples/Echarts/Scatter/Labeled.jsx","Documentation/examples/Echarts/Scatter/Simple.jsx","Documentation/examples/Echarts/Selection/SelectionScatter.jsx","Documentation/examples/Echarts/Tooltips/tooltips.jsx","Documentation/examples/Echarts/config.js","Documentation/examples/Table/Accordian/AccordianTable.jsx","Documentation/examples/Table/Filtering/ColumnFilters.jsx","Documentation/examples/Table/Header/MultiRow.jsx","Documentation/examples/Table/Header/NoHeader.jsx","Documentation/examples/Table/LazyLoading/LazyLoading.jsx","Documentation/examples/Table/MultiRow/MultiRowCol.jsx","Documentation/examples/Table/MultiRow/MultirowTable.jsx","Documentation/examples/Table/ParentFilterCol.jsx","Documentation/examples/Table/ParentSortCol.jsx","Documentation/examples/Table/SpecialContent/Checkbox.jsx","Documentation/examples/Table/Style/AlternatingStyle.jsx","Documentation/examples/Table/Style/SimpleTable.jsx","Documentation/examples/Table/Style/TableFormat.jsx","Documentation/examples/Table/config.js","Documentation/components/jsonArray.js","Documentation/index.jsx","jsonArray/frameworks/fileIO/extract.js","jsonArray/frameworks/react/framework/Components.jsx","Documentation/examples/Demo/BasicExample.jsx","Documentation/components/Example.jsx","jsonArray/jsonObject.js","jsonArray/data_types/format/arrayToString.js","jsonArray/data_types/format/strFormat.js","jsonArray/frameworks/echarts/tooltips.js","jsonArray/frameworks/echarts/axis.js","jsonArray/frameworks/echarts/options/features/axline.js","jsonArray/frameworks/echarts/options/charts/line.js","jsonArray/frameworks/echarts/series/line/rollingAvg/CenterWindow.js","jsonArray/frameworks/echarts/series/line/rollingAvg/index.js","jsonArray/frameworks/echarts/series/line/rollingAvg/TailingWindow.js","jsonArray/frameworks/echarts/options/charts/rollingAvg.js","jsonArray/frameworks/echarts/options/charts/boxplot.js","jsonArray/frameworks/echarts/options/charts/heatmap.js","jsonArray/frameworks/echarts/options/charts/scatter.js","jsonArray/frameworks/echarts/options/charts/bar.js","jsonArray/frameworks/echarts/options/charts/pareto.js","jsonArray/frameworks/echarts/series/grid/index.js","jsonArray/frameworks/echarts/options/charts/grid.js","jsonArray/frameworks/echarts/series/pie/index.js","jsonArray/frameworks/echarts/options/charts/pie/index.js","jsonArray/frameworks/echarts/series/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/waterfall.js","jsonArray/frameworks/echarts/options/index.js","jsonArray/frameworks/echarts/options/format/Toolbox.js","jsonArray/frameworks/echarts/options/features/Selection.js","jsonArray/frameworks/echarts/options/features/DataZoom.js","jsonArray/frameworks/echarts/options/features/Highlight.js","jsonArray/frameworks/echarts/options/format/legend.js","jsonArray/frameworks/echarts/components.js","jsonArray/frameworks/echarts/series/features/Vline.js","jsonArray/frameworks/echarts/series/features/Circle.jsx","jsonArray/frameworks/echarts/series/features/Hline.js","jsonArray/frameworks/echarts/series/index.js","jsonArray/frameworks/echarts/series/features/ErrorBars.js","jsonArray/statistics/array.js","jsonArray/statistics/matrix.js","jsonArray/jsonArray.js","Documentation/components/Header.jsx","Documentation/components/CodeRender.jsx","Documentation/components/Sidebar.jsx","Documentation/config.js","jsonArray/data_types/dtypes.js","jsonArray/frameworks/react/plugins/Plugins.js","jsonArray/frameworks/react/ReactComponents.js","jsonArray/frameworks/echarts/series/line/index.js","jsonArray/frameworks/echarts/series/waterfall/index.js","jsonArray/frameworks/echarts/series/boxplot/index.js","jsonArray/frameworks/echarts/series/boxplot/scatter_overlay.js","jsonArray/frameworks/echarts/series/bar/bar.js","jsonArray/frameworks/echarts/series/bar/index.js","jsonArray/frameworks/react/plugins/echarts/EchartsReact.jsx","jsonArray/frameworks/react/plugins/echarts/index.jsx","Documentation sync /^/.*$","jsonArray/frameworks/echarts/series/propsToSeries.js","jsonArray/frameworks/react/plugins/fileIO.jsx","index.js","Documentation/examples sync /^/.*$","jsonArray/frameworks/colors/pallet/entropy_pallet.js","jsonArray/frameworks/colors/pallet/entropy_8bit.js","jsonArray/frameworks/colors/pallet/reds.js","jsonArray/frameworks/colors/Colors.js","jsonArray/frameworks/echarts/series/scatter/index.js"],"names":["SemanticUI","require","SemanticUILibrary","data","Excel","bind","Table","Dropdown","ToCsv","props","this","button","Button","ReactLibraryFramework","react","undefined","buttonStyle","margin","buttonProps","color","input","Input","inputStyle","inputProps","icon","placeholder","table","th","HeaderCell","thead","Header","td","Cell","tr","Row","body","Body","image","Image","Icon","checkbox","Checkbox","values","ascending","plottype","columns","filter","r","column","unique","options","forEach","element","push","key","text","value","child_props","Form","Field","control","Select","label","search","clearable","multiple","onChange","e","d","callback","state","name","filename","fileInputRef","React","createRef","console","log","component","style","onClick","current","click","defaultValue","type","hidden","ref","event","fileHandler","target","className","readOnly","files","length","fileObj","setState","ExcelRenderer","err","response","alert","rows","header","splice","json_array","jsonArray","Component","parser","http","zlib","fromFileLibrary","fromUrl","toCsv","url","params","from_url","from_file","file","parse","a","download","complete","results","row","Object","keys","from_gz_url","buffer","get","res","gunzip","createGunzip","pipe","on","toString","join","VALUE","datetime","self","moment","__proto__","prototype","format","strftime","week","year","isoWeek","timedelta","inplace","date","param_keys","i","pkey","add","Series","includes","index","object","dtypes","dtype","DataTypes","parse_series","bins","min","max","binNum","count","item","j","bin","logic","ordered","unique_values","Set","temp","concat","sort","map","x","b","variable","func","obj","Number","isNaN","entries","val","compute","y","Math","reduce","sum","ReactComponents","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","toColumns","columnGroups","flat","ColumnFilter","col","_","uniqueId","fontSize","padding","headerCellOnClick","columnOnClick","col_name","col_number","filterValues","columnFilterOnChange","filters","Segment","Group","raised","compact","width","boxShadow","border","backgroundColor","basic","textAlign","maxWidth","minHeight","selection","fluid","columnNames","colNumber","ColComponent","thProps","thStyle","tableName","ColumnRow","col_offset","colCells","accordian","table_data","trProps","trStyle","DataFrameHeader","headerrow","theadProps","theadStyle","TableRow","catCells","categories","cat","MultiRowHeader","toColumn","showHeader","SeriesHeader","coloredSquare","colorHex","colors","fillAndEdge","preserveAspectRatio","viewBox","transform","display","height","overflow","stroke","edge","strokeWidth","fill","onClickFunc","row_idx","row_data","cellOnClick","cellType","cellContent","valueToString","componentOnClick","imageProps","imageStyle","IconProps","iconStyle","CheckboxProps","checkboxStyle","checked","booleanColor","radius","cx","cy","booleanCircle","whiteSpace","overflowWrap","cell","cellBackgroundColor","cellStyle","tdProps","tdStyle","col_span","row_span","rowOnClick","setSelectedRow","rowStyle","alternateStyle","rowColor","idx","__index__","rowBackgroundColor","selectedRow","cellContentOnly","multirow_idx","SeriesRow","__value__","AccordianRow","useState","visible","setVisible","AccordianTable","json_obj","accordianFunc","accordianColumns","AccordianComponent","iconOnClick","iconColor","accordianComponent","semanticUI","tableStyle","accordianHeader","accordianProps","rowSpan","colSpan","MultiRow","modProps","multirowSpan","multirow","multirowStyle","span_len","span","ceil","TableBody","onHover","setOnHover","lazyLoading","renderedRows","step","lazyLoadingStep","setRenderedRows","onMouseOver","onMouseOut","bodyProps","bodyStyle","SeriesTable","Render","sortBy","setSortBy","sortAscending","setSortAscending","setFilters","lazyLoadingStart","sortable","content","filterable","sortedColumn","sort_values","filt","scatter_by","group","groupby","colorBy","series","color_value","scatter","groupId","numeric","percentage","float","string","format_float","format_int","format_array","format_object","format_boolean","format_scientific","format_percentage","format_datetime","format_string","pow","toFixed","toExponential","formatted","parseFloat","slice","SimpleScatter","pivot","pivot_table","echarts","Echarts","option","stack","smooth","lineStyle","showSymbol","areaStyle","opacity","emphasis","focus","tooltip","trigger","axisPointer","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","graphic","LinearGradient","offset","getData","echartsOptions","pareto","ratio","Bar","colx","coly","StackedScatter","stack_col","stacked_id","stacked","AllSamples","Boxplot","allSample","overlayFilter","CATEGORY2","SimpleLine","axhline","onSelect","line","echartsStyle","zoom","scroll","sliders","selected","setSelected","DevelopmentExample","pie","path","Heatmap","append_series","echartsSeries","errorbars","avg","rotate","xtick_padding","highlight","Line","SimplePie","create_column","QRB","FORCE_INK","DEV","SBL","pieFromSeries","rectGrid","circle","RectGrid","ColorByScatter","Scatter","from_DataFrame","horizontal","as","importConfig","config","indev","localConfig","groups","astype","ColumnFilters","SimpleTable","category","JsonArray","ParentSortColumn","CheckboxTable","checkboxField","array","__inplace__","df","newCol","df1","df2","col_left","col_right","how","on_right","on_left","df1_rows","df2_rows","Array","isArray","__groupby__","atts","temp_keys","assign","s","counts","split_val","split","id_att","summaryType","row_val","column_val","rval","by_row","cval","by_col","temp_json","sep","col1","col2","combine","sample_index","new_col","mapping","ex_columns","enable","max_length","rename","Examples","setCategory","subcategory","setSubCategory","docType","setDocType","getConfig","fillna","inverted","Navbar","Column","stretched","PageContent","examples","exampleComponents","title","vertical","jsxDir","docDir","example","size","Item","active","Papa","browserInterface","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","parentNode","removeChild","csv","unparse","csvData","Blob","wrapper","src","alt","Example","showCode","setShowCode","dir","default","NullComponent","description","jsonObject","key_name","value_name","json_object","arrayToString","tab_count","tab_space","max_width","value_to_string","col_width","spacing","row_array","whitespace","col_spacing","format_columns","format_row","jsonArray_str","strFormat","echartsTooltip","show","formatter","sample","echartsAxis","axis","initialize","scale","axisLabel","units","Axline","markLine","symbol","position","to_category","to_date","CenterWindow","midStart","floor","midEnd","rollingAvg","avgType","rolling_average","TailingWindow","propsToSeries","boxplot","to_value","dynamic_range","heatmap","visualMap","calculable","orient","inRange","bar","tick_values","Pareto","att","total","cumsum","row_apply","color_col","get_color","renderItem","renderRectangle","animation","legendHoverLink","silent","encode","z","zlevel","api","xCoor","yCoor","coord","shape","minValue","maxValue","hide","avoidLabelOverlap","labelLine","fontWeight","pieChart","fromSeries","waterfall","generate_options","RollingAvg","Grid","Pie","PieFromSeries","Waterfall","dataZoom","restore","xAxisIndex","outOfBrush","colorAlpha","scrollZoom","start","end","filterMode","showDataShadow","handleSize","handleIcon","yAxisIndex","features","indexOf","local_variables","delete","top","eChartsComponents","Vline","colz","itemStyle","normal","borderWidth","xValue","highPoint","lowPoint","children","transition","x1","y1","x2","y2","visual","render","Circle","Hline","yValue","zIndex","ErrorBars","dropna","mean","arrayStats","forward_diff","yValues","pStep","nStep","JSON","stringify","hasOwnProperty","init","subset","stats","col_names","convert","rcol","gcol","bcol","colorCol","toHex","rgbToHex","colorType","Controls","CodeRender","rel_path","source","setSource","ext","syntax","fetch","then","circular","downloadFile","editorProps","$blockScrolling","Infinity","maxLines","minLines","mode","tabSize","theme","Sidebar","menuItems","flat_categories","subcategories","subMenuItems","subcat","Menu","sub_categories","pointing","secondary","set_dtypes","dtype_col","String","apply","set_label","number","toLowerCase","replace","data_type","dtype1","dtype2","priority","temp_dtype","dtypePriority","existing","parse_column","enabledComponents","excel","components","FileIO","echartsLibrary","pos","waferfallDiff","neg","abs","barBorderColor","prepareBoxplotData","group_values","echartsData","boxData","outliers","copy_column","scatterFunc","scatter_overlay","BarPlot","EchartsReact","onEvents","batch","dataIndex","iloc","Histogram","plot_options","binning","react_echarts","split_values","dates","datetimes","t","Date","start_date","month","getMonth","day","getDate","getFullYear","formatDate","timeframe","_props","symbolSize","lw","extract","FileIOLibrary","ReactDOM","getElementById","ENTROPY","ENTROPY_8BIT","REDS","color_type","invert","color_hex","convertHex","step_size","max_colors","hex","parseInt","substring","int_to_color","v","round","shadeHexColor","percent","f","p","R","G","B","componentToHex","c","g","coordinates"],"mappings":"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","file":"static/js/main.3a96c087.chunk.js","sourcesContent":["/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nvar SemanticUI\r\ntry{ SemanticUI = require('semantic-ui-react') }catch{}\r\n\r\n\r\nexport default class SemanticUILibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Excel = this.Excel.bind(this)\r\n    this.Table = this.Table.bind(this)\r\n    this.Dropdown = this.Dropdown.bind(this)\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n  }\r\n\r\n  Excel( props ){\r\n    return Excel( this.props(props) )\r\n  }\r\n\r\n  Table( props ){\r\n    return Table( this.props(props) )\r\n  }\r\n\r\n  Dropdown( props ){\r\n    return Dropdown( this.props(props) )\r\n  }\r\n\r\n  ToCsv( props ){\r\n    const fileIO = require('../plugins/fileIO')\r\n    return fileIO.ToCsv( {...this.props(props), ...{button: SemanticUI.Button}})\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n// returns the excel reader using teh Semantic UI Framework for input controls\r\nexport function Excel( props ){\r\n\r\n  var Excel = props.data.react.Excel\r\n\r\n  if( SemanticUI === undefined ){\r\n    return <Excel />\r\n  }\r\n\r\n  return(\r\n    <Excel\r\n      {...props}\r\n      button = {SemanticUI.Button}\r\n      buttonStyle = {{margin:0}}\r\n      buttonProps = {{...{color: 'blue'}, ...props.buttonProps}}\r\n\r\n      input = {SemanticUI.Input}\r\n      inputStyle = {{margin:0}}\r\n      inputProps = {{icon: 'file', placeholder: 'xlsx, csv, ...' }}\r\n      />\r\n    )\r\n}\r\n\r\n\r\n\r\n// returns a table formatted using the Semantic UI table Framework\r\nexport function Table(props){\r\n\r\n  var Table = props.data.react.Table\r\n\r\n  if( SemanticUI === undefined ) return Table\r\n\r\n  return(\r\n    <Table\r\n      {...props}\r\n      table = {SemanticUI.Table}\r\n      th = {SemanticUI.Table.HeaderCell}\r\n      thead = {SemanticUI.Table.Header}\r\n      td = {SemanticUI.Table.Cell}\r\n      tr = {SemanticUI.Table.Row}\r\n      body = {SemanticUI.Table.Body}\r\n\r\n      button = {SemanticUI.Table.Button}\r\n      image = {SemanticUI.Table.Image}\r\n      icon = {SemanticUI.Icon}\r\n      checkbox = {SemanticUI.Checkbox}\r\n      />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function Dropdown( props ){\r\n\r\n  // set ascending order as a default for dropdown content\r\n  var ascending = true\r\n  if( props.ascending !== undefined ) ascending = props.ascending\r\n\r\n\r\n  // retrieve the unique calues from the specified column\r\n  var values\r\n  switch( props.plottype ){\r\n    case 'column':\r\n      values = props.data.columns\r\n      break\r\n\r\n    case 'value' :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n\r\n    default :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n  }\r\n\r\n  var options = []\r\n\r\n  // push the values into the array formatted for the dropdown menu\r\n  values.forEach( element => options.push({\r\n     key:  element, text: element, value: element\r\n  }) )\r\n\r\n  const child_props = props\r\n  delete child_props.data\r\n\r\n  return(\r\n    <SemanticUI.Form.Field\r\n      {...child_props}\r\n      key={`dropdown-${props.column}`}\r\n      control={SemanticUI.Select}\r\n      label={props.column}\r\n      options={options}\r\n      search={true}\r\n      clearable={true}\r\n      multiple={(props.multiple === undefined) ? false : props.multiple}\r\n      placeholder={props.column}\r\n      onChange={(e, d) => (props.callback !== undefined) ? props.callback({[props.column]: d.value}) : null}\r\n    />\r\n  )\r\n}\r\n\r\n// <SemanticUI.Dropdown\r\n//   {...child_props}\r\n//   options={options}\r\n//   key={`dropdown-${props.column}`}\r\n//   />\r\n","/*!\r\n\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport {ExcelRenderer} from 'react-excel-renderer';\r\n\r\nimport {Button, Input} from '../framework/Components'\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\n// export default function DefaultFunction(){ console.log('not implemented')}\r\n\r\nexport default class Excel extends React.Component{\r\n\r\n\r\n  constructor( props ) {\r\n    super(props)\r\n\r\n    this.state = { name: 'excel', filename: '' }\r\n  }\r\n\r\n  // returns the React components used to select the csv file for parsing\r\n  // and to display the name of the file in an input component\r\n  render(){\r\n\r\n    var fileInputRef = React.createRef();\r\n\r\n    console.log( 'button props', this.props)\r\n    return (\r\n      <>\r\n        <Button\r\n          {...this.props.buttonProps}\r\n          component= {this.props.button}\r\n          key={`${this.state.name}-Button`}\r\n          style={this.props.buttonStyle}\r\n          onClick={() => fileInputRef.current.click()}\r\n          defaultValue={this.props.defaultValue === undefined ? 'Upload' : this.props.defaultValue}\r\n          />\r\n\r\n        <input\r\n          key={`${this.state.name}-hidden-input`}\r\n          type=\"file\"\r\n          hidden\r\n          ref={fileInputRef}\r\n          onChange={(event) => this.fileHandler(event) }\r\n          onClick={(event)=> { event.target.value = null }}\r\n          style={{\"padding\":\"10px\"}} />\r\n\r\n\r\n        <Input\r\n          {...this.props.inputProps}\r\n          component= {this.props.input}\r\n          style={{...this.props.inputStyle, ...{\"paddingTop\":\"0px\"}}}\r\n          key={`${this.state.name}-input`}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={this.state.filename}\r\n          readOnly\r\n          />\r\n      </>\r\n    )\r\n\r\n  }\r\n\r\n  // parses the selected file. An error is thrown when this\r\n  // routine fails. Otherwise a jsonArray object is returned\r\n  // via the callback function\r\n  fileHandler( event ){\r\n\r\n    if(event.target.files.length){\r\n\r\n      const fileObj = event.target.files[0];\r\n      this.setState( {filename: fileObj.name} )\r\n\r\n      ExcelRenderer(fileObj, (err, response) => {\r\n\r\n        if(err){\r\n          alert('csv parsing error: ' + err);\r\n        }\r\n        else{\r\n\r\n          var data = response.rows\r\n          var columns\r\n\r\n          // assume that the first row contains a header\r\n          if( this.props.header !== false ){\r\n              columns = data[0]\r\n              data = data.splice(1)\r\n          }\r\n\r\n          // convert the data to a json array\r\n          const json_array = new jsonArray(data)\r\n\r\n          // set the column names when defined\r\n          if( columns !== undefined ) json_array.columns = columns\r\n\r\n\r\n          if( this.props.callback !== undefined ){\r\n            this.props.callback( json_array )\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * cSV to jsonArray\r\n * ==================\r\n *\r\n * pluggin that supports the json to csv module. This converts the a\r\n * csv file stored remotely into a json Array\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 20, 2020\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport toCsv from './extract'\r\n\r\n// import papaparser when available\r\nvar parser\r\ntry{ parser = require(\"papaparse\"); }catch{}\r\n\r\nvar http = require(\"http\"), zlib = require(\"zlib\");\r\n\r\n\r\nexport default class fromFileLibrary{\r\n  constructor(data){\r\n\r\n    this.json_array = data\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.fromUrl = this.fromUrl.bind(this)\r\n    this.toCsv = this.toCsv.bind(this)\r\n  }\r\n\r\n  async fromUrl( url, callback, params={} ){\r\n\r\n    // // retrieve the data from the url and parse out the text\r\n    // const res = await fetch( url )\r\n    // var text = await res.text();\r\n    //\r\n    // // parse the csv and return a json array containing the data\r\n    // return from_file(text, {header: true})\r\n\r\n    return from_url( url, callback, params )\r\n  }\r\n\r\n  toCsv( filename='file.csv' ){\r\n    toCsv(this.json_array, filename)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Returns a json array with the contents of the csv file\r\n * provided at the url address\r\n * @param  {string} url url address where the data is stored\r\n * @return {Array}     jsonArray containing the csv data\r\n */\r\nexport function from_file( file, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  const data = parser.parse(\r\n    file,\r\n    { ...{params},\r\n      ...{\r\n        header: true\r\n      }\r\n  })\r\n\r\n  // console.log( data )\r\n  return new jsonArray( data.data )\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  // var data\r\n\r\n  return await parser.parse(\r\n    url,\r\n    { ...{params},\r\n      ...{\r\n        download: true,\r\n        header: true,\r\n        complete: function(results) {\r\n          if( callback !== undefined ){\r\n\r\n            // convert to a json Array and remove all missing rows\r\n            var json_array = new jsonArray( results.data )\r\n            json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n            // perform callback to update parent state\r\n            callback( json_array )\r\n          }\r\n        }\r\n\r\n      }\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_gz_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n  // buffer to store the streamed decompression\r\n  var buffer = [];\r\n\r\n  http.get(url, function(res) {\r\n      // pipe the response into the gunzip to decompress\r\n      var gunzip = zlib.createGunzip();\r\n      res.pipe(gunzip);\r\n\r\n      gunzip.on('data', function(data) {\r\n          // decompression chunk ready, add it to the buffer\r\n          buffer.push(data.toString())\r\n\r\n      }).on(\"end\", function() {\r\n        parser.parse(\r\n          buffer.join(\"\"),\r\n          { ...{params},\r\n            ...{\r\n              header: true,\r\n              complete: function(results) {\r\n                // console.log( results )\r\n\r\n                var data = results.data\r\n                data = data.filter( row => row.VALUE !== '1')\r\n\r\n\r\n                if( callback !== undefined ){\r\n                  // convert to a json Array and remove all missing rows\r\n                  var json_array = new jsonArray( data )\r\n                  // json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n                  // perform callback to update parent state\r\n                  callback( json_array )\r\n                }\r\n              }\r\n\r\n            }\r\n        })\r\n\r\n      }).on(\"error\", function(e) {\r\n        console.log( 'failed' )\r\n          callback(e);\r\n      })\r\n  }).on('error', function(e) {\r\n    console.log( 'failed' )\r\n      callback(e)\r\n  });\r\n\r\n}\r\n","/**\r\n * React Library Framework\r\n * =========================\r\n *\r\n * Class used to store a global copy of the json array so it\r\n * can be automatically included as a prop into the desired\r\n * react component. This Framework is intended to be extended\r\n * upon for each component library\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 28, 2020\r\n *\r\n */\r\n\r\n\r\nexport default class ReactLibraryFramework{\r\n\r\n  constructor(data){\r\n    // cast the data to a json_array data type\r\n    this.data = data\r\n  }\r\n\r\n  props( props ){\r\n    return {\r\n      ...props,\r\n      ...{\r\n        data: this.data\r\n      }}\r\n  }\r\n\r\n}\r\n","/**\r\n * Datetime\r\n * ===============\r\n *\r\n * extend the moments class to provide python datetime functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 29, 2020\r\n */\r\n\r\n\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function datetime( value ) {\r\n  var self = moment( value );\r\n\r\n  self.__proto__ = datetime.prototype;\r\n\r\n  return self;\r\n}\r\n\r\ndatetime.prototype.__proto__ = moment.prototype;\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.toString = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.strftime = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.week = function(){\r\n  return `${this.year()}-${this.isoWeek()}`\r\n}\r\n\r\n\r\n/**\r\n *  adds to the date based on the params object\r\n * @param  {objects}  params         'add' parameters with keys of days, months, years, etc.\r\n * @param  {Boolean} [inplace=false] When True, the local copy of the date will be changed.\r\n * @return {datetime}                updated datetime object\r\n */\r\ndatetime.prototype.timedelta = function(params, inplace=false){\r\n\r\n  // avoid mutating the original copy via cloning unless specified otherwise\r\n  var date = this\r\n  if( inplace === false ){\r\n    date = datetime(this)\r\n  }\r\n\r\n  /// retrieve the offset parameters\r\n  const param_keys = Object.keys( params )\r\n\r\n  // add the offset to the date\r\n  for( var i=0; i < param_keys.length; i++ ){\r\n    const pkey = param_keys[i]\r\n    date.add(params[pkey], pkey)\r\n  }\r\n\r\n  return date\r\n}\r\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport DataTypes from './data_types/dtypes';\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\n\r\nexport default class Series extends Object {\r\n\r\n  constructor(props={}) {\r\n    super()\r\n\r\n    const keys = Object.keys(props)\r\n\r\n    if( keys.includes('index') & keys.includes('value') ){\r\n      for( var i=0; i < props.value.length; i++ ){\r\n        this[props.index[i]] = props.value[i]\r\n      }\r\n    }\r\n\r\n    if( keys.includes('object') ){\r\n      const keys = Object.keys(props.object)\r\n      for( i=0; i < keys.length; i++ ){\r\n        this[keys[i]] = props.object[keys[i]]\r\n      }\r\n    }\r\n\r\n    // allow for mixed datatype, referenced by the keys.\r\n    // This is only applicable when the data types are provided.\r\n    // Otherwise, it is assumed that the data is from a single\r\n    // data type which will be parsed out\r\n    if( props.dtypes !== undefined ){\r\n      this.dtypes = props.dtypes\r\n      this.dtype = 'mixed'\r\n\r\n    }else{\r\n      this.dtype = props.dtype\r\n\r\n      // parse the data type from the data when one is not provided\r\n      if( this.dtype === undefined ){\r\n        this.dtype = new DataTypes().parse_series( this )\r\n      }\r\n\r\n    }\r\n\r\n    this.name = props.name\r\n    // this.dtype.parse_series( this )\r\n  }\r\n\r\n  get index(){\r\n    return Object.keys(this.data)\r\n  }\r\n\r\n  get values(){\r\n    return Object.values(this.data)\r\n  }\r\n\r\n  // copies the local data removes all metadata elements\r\n  get data(){\r\n    var data = {...this}\r\n    delete data.dtype\r\n    delete data.dtypes\r\n    delete data.name\r\n\r\n    return data\r\n  }\r\n\r\n\r\n  /**\r\n   * Discretizes (bins) the values for a specific column\r\n   * based on the users specifications\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] parameters to define the binning\r\n   * @return {Object}             jsonArray containing the binning results\r\n   */\r\n  binning( params={} ){\r\n\r\n    // placeholder for the bins\r\n    var bins = [];\r\n\r\n    // extract the parameters\r\n    const param_keys = Object.keys(params)\r\n\r\n    const min = this.min\r\n\r\n    // set defaults when none are provided\r\n    if( !param_keys.includes('bins') ) params['bins'] = 10\r\n    if( !param_keys.includes('interval') ){\r\n      const max = this.max\r\n      params['interval'] = (max-min)/params['bins']\r\n    }\r\n\r\n\r\n    //Setup Bins\r\n    for(var i = 0; i < params['bins']; i++ ){\r\n      bins.push({\r\n        binNum: i,\r\n        value: min + i*params['interval'],\r\n        max: min + (i+1)*params['interval'],\r\n        count: 0\r\n      })\r\n    }\r\n\r\n    //Loop through data and add to bin's count\r\n    for (i = 0; i < this.values.length; i++){\r\n      var item = this.values[i];\r\n\r\n      for (var j = 0; j < bins.length; j++){\r\n        var bin = bins[j];\r\n\r\n        // condition logic to account for the first step\r\n        // to include the minimum value\r\n        var logic = item > bin.value && item <= bin.max\r\n        if( j === 0) logic = item >= bin.value && item <= bin.max\r\n\r\n        if(logic){\r\n          bin.count++;\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( bins )\r\n  }\r\n\r\n\r\n  /**\r\n   * Counts the number of occurences for each unique value in the\r\n   * specified column and returns a jsonArray of the statistics\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] parameters to define the binning\r\n   * @return {Object}             jsonArray containing the binning results\r\n   */\r\n  get count(){\r\n\r\n    // placeholder for the results\r\n    var results = {};\r\n\r\n    const unique_values = this.unique()\r\n\r\n    // setup the results\r\n    for(var i = 0; i < unique_values.length; i++ ){\r\n      const value = unique_values[i]\r\n      results[value] = this.values.filter(item => item === value).length\r\n    }\r\n\r\n    return new Series({object: results})\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the number of occurences for each unique value\r\n   * @param  {Boolean} [ordered=false] When True, the unique values are returned in sorted order\r\n   * @return {Array}                   Array of unique values\r\n   */\r\n  unique( ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    var unique_values = [...new Set([...this.values])]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtype === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        // order string type\r\n        if( this.dtype === 'string' ){\r\n          return unique_values.sort()\r\n        }\r\n\r\n        try{\r\n          unique_values = unique_values.map( x => +x)\r\n          unique_values = unique_values.sort(function(a,b){return a - b})\r\n        }catch{\r\n          // default to the standard sort\r\n          unique_values.sort()\r\n        }\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  get max(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.max(...this.values)\r\n  }\r\n\r\n  get min(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.min(...this.values)\r\n  }\r\n\r\n  get sum(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return this.values.reduce((a,b) => a + b, 0)\r\n  }\r\n\r\n  get mean(){\r\n    if( this.values.length === 1 ) return this[0]\r\n    return this.sum / this.values.length\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Applies the function using the variable and the local series\r\n   * as inputs. this is intended for arithmetic Functions\r\n   * @param  {mixed} variable variable or series\r\n   * @param  {function} func     function to apply on the local and variable data\r\n   * @return {Series}            Series containing the resuting data\r\n   */\r\n  compute(variable, func){\r\n\r\n    var data = {...this}\r\n\r\n    var obj = Number(variable)\r\n\r\n    var key, value\r\n    \r\n    // apply the function on the objects sharing the same key\r\n    if( isNaN(obj) ){\r\n\r\n      for ([key, value] of Object.entries(variable)) {\r\n        var val = data[key]\r\n        if( val === undefined ) val = 0\r\n        data[key] = func( val, value)\r\n      }\r\n\r\n    // perform the function using the object value directly\r\n    }else{\r\n      for ([key, value] of Object.entries(data)) {\r\n        data[key] = func( value, obj)\r\n      }\r\n    }\r\n\r\n    // return the data as a series\r\n    return new Series({\r\n      object: data,\r\n      dtype: this.dtype,\r\n      dtypes: this.dtypes,\r\n      name: this.name,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Performs addition on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  add( variable ){\r\n    return this.compute( variable, (x, y) => {return x + y} )\r\n  }\r\n\r\n  /**\r\n   * Performs subtraction on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  sub( variable ){\r\n    return this.compute( variable, (x, y) => {return x - y} )\r\n  }\r\n\r\n  /**\r\n   * Performs multiplication on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  multiply( variable ){\r\n    return this.compute( variable, (x, y) => {return x * y} )\r\n  }\r\n\r\n  /**\r\n   * Performs division on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  divide( variable ){\r\n    return this.compute( variable, (x, y) => {return x/y} )\r\n  }\r\n\r\n  get react(){ return new ReactComponents(this) }\r\n\r\n}\r\n","var map = {\n\t\"./jsonArray/data\": 166,\n\t\"./jsonArray/data.json\": 166,\n\t\"./jsonArray/yield_timeframe\": 167,\n\t\"./jsonArray/yield_timeframe.json\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1221;","var map = {\n\t\"./Area/Simple\": 154,\n\t\"./Area/Simple.jsx\": 154,\n\t\"./Area/config\": 168,\n\t\"./Area/config.json\": 168,\n\t\"./Bar/Pareto\": 169,\n\t\"./Bar/Pareto.jsx\": 169,\n\t\"./Bar/Simple\": 170,\n\t\"./Bar/Simple.jsx\": 170,\n\t\"./Bar/Stacked\": 171,\n\t\"./Bar/Stacked.jsx\": 171,\n\t\"./Bar/config\": 172,\n\t\"./Bar/config.json\": 172,\n\t\"./Boxplot/AllSamples\": 173,\n\t\"./Boxplot/AllSamples.jsx\": 173,\n\t\"./Boxplot/AllSamplesGrouped\": 174,\n\t\"./Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./Boxplot/FilteredOverlay\": 175,\n\t\"./Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./Boxplot/Simple\": 176,\n\t\"./Boxplot/Simple.jsx\": 176,\n\t\"./Boxplot/config\": 177,\n\t\"./Boxplot/config.json\": 177,\n\t\"./Custom/HorizontalLine\": 178,\n\t\"./Custom/HorizontalLine.jsx\": 178,\n\t\"./Custom/Selection\": 179,\n\t\"./Custom/Selection.jsx\": 179,\n\t\"./Custom/Simple\": 180,\n\t\"./Custom/Simple.jsx\": 180,\n\t\"./Custom/Style\": 181,\n\t\"./Custom/Style.jsx\": 181,\n\t\"./Custom/Zoom\": 182,\n\t\"./Custom/Zoom.jsx\": 182,\n\t\"./Custom/ZoomSlider\": 183,\n\t\"./Custom/ZoomSlider.jsx\": 183,\n\t\"./Custom/ZoomVertical\": 184,\n\t\"./Custom/ZoomVertical.jsx\": 184,\n\t\"./Custom/config\": 185,\n\t\"./Custom/config.json\": 185,\n\t\"./Custom/onClick\": 186,\n\t\"./Custom/onClick.jsx\": 186,\n\t\"./Format/Legend\": 187,\n\t\"./Format/Legend.jsx\": 187,\n\t\"./Format/ToolboxExample\": 188,\n\t\"./Format/ToolboxExample.jsx\": 188,\n\t\"./Format/config\": 189,\n\t\"./Format/config.json\": 189,\n\t\"./Heatmap/Simple\": 190,\n\t\"./Heatmap/Simple.jsx\": 190,\n\t\"./Heatmap/config\": 191,\n\t\"./Heatmap/config.json\": 191,\n\t\"./Line/ErrorBars\": 192,\n\t\"./Line/ErrorBars.jsx\": 192,\n\t\"./Line/Highlight\": 193,\n\t\"./Line/Highlight.jsx\": 193,\n\t\"./Line/Simple\": 194,\n\t\"./Line/Simple.jsx\": 194,\n\t\"./Line/config\": 195,\n\t\"./Line/config.json\": 195,\n\t\"./Pie/FromSeries\": 196,\n\t\"./Pie/FromSeries.jsx\": 196,\n\t\"./Pie/Simple\": 197,\n\t\"./Pie/Simple.jsx\": 197,\n\t\"./Pie/config\": 198,\n\t\"./Pie/config.json\": 198,\n\t\"./RectGrid/Custom\": 199,\n\t\"./RectGrid/Custom.jsx\": 199,\n\t\"./RectGrid/Simple\": 200,\n\t\"./RectGrid/Simple.jsx\": 200,\n\t\"./RectGrid/config\": 201,\n\t\"./RectGrid/config.json\": 201,\n\t\"./Scatter/ColorBy\": 202,\n\t\"./Scatter/ColorBy.jsx\": 202,\n\t\"./Scatter/Labeled\": 203,\n\t\"./Scatter/Labeled.jsx\": 203,\n\t\"./Scatter/Simple\": 204,\n\t\"./Scatter/Simple.jsx\": 204,\n\t\"./Scatter/config\": 205,\n\t\"./Scatter/config.json\": 205,\n\t\"./Selection/SelectionScatter\": 206,\n\t\"./Selection/SelectionScatter.jsx\": 206,\n\t\"./Selection/config\": 207,\n\t\"./Selection/config.json\": 207,\n\t\"./Tooltips/config\": 208,\n\t\"./Tooltips/config.json\": 208,\n\t\"./Tooltips/tooltips\": 209,\n\t\"./Tooltips/tooltips.jsx\": 209,\n\t\"./config\": 210,\n\t\"./config.js\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1222;","var map = {\n\t\"./Accordian/AccordianTable\": 211,\n\t\"./Accordian/AccordianTable.jsx\": 211,\n\t\"./Accordian/config\": 212,\n\t\"./Accordian/config.json\": 212,\n\t\"./Filtering/ColumnFilters\": 213,\n\t\"./Filtering/ColumnFilters.jsx\": 213,\n\t\"./Filtering/config\": 214,\n\t\"./Filtering/config.json\": 214,\n\t\"./Header/MultiRow\": 215,\n\t\"./Header/MultiRow.jsx\": 215,\n\t\"./Header/NoHeader\": 216,\n\t\"./Header/NoHeader.jsx\": 216,\n\t\"./Header/config\": 217,\n\t\"./Header/config.json\": 217,\n\t\"./LazyLoading/LazyLoading\": 218,\n\t\"./LazyLoading/LazyLoading.jsx\": 218,\n\t\"./LazyLoading/config\": 219,\n\t\"./LazyLoading/config.json\": 219,\n\t\"./MultiRow/MultiRowCol\": 220,\n\t\"./MultiRow/MultiRowCol.jsx\": 220,\n\t\"./MultiRow/MultirowTable\": 221,\n\t\"./MultiRow/MultirowTable.jsx\": 221,\n\t\"./MultiRow/config\": 222,\n\t\"./MultiRow/config.json\": 222,\n\t\"./ParentFilterCol\": 223,\n\t\"./ParentFilterCol.jsx\": 223,\n\t\"./ParentSortCol\": 224,\n\t\"./ParentSortCol.jsx\": 224,\n\t\"./SpecialContent/Checkbox\": 225,\n\t\"./SpecialContent/Checkbox.jsx\": 225,\n\t\"./SpecialContent/config\": 226,\n\t\"./SpecialContent/config.json\": 226,\n\t\"./Style/AlternatingStyle\": 227,\n\t\"./Style/AlternatingStyle.jsx\": 227,\n\t\"./Style/SimpleTable\": 228,\n\t\"./Style/SimpleTable.jsx\": 228,\n\t\"./Style/TableFormat\": 229,\n\t\"./Style/TableFormat.jsx\": 229,\n\t\"./Style/config\": 230,\n\t\"./Style/config.json\": 230,\n\t\"./config\": 231,\n\t\"./config.js\": 231\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1223;","export default __webpack_public_path__ + \"static/media/BasicExample.ac843189.doc\";","export default __webpack_public_path__ + \"static/media/Pareto.3f381510.doc\";","export default __webpack_public_path__ + \"static/media/Simple.43fbfd31.doc\";","export default __webpack_public_path__ + \"static/media/Stacked.19aee742.doc\";","export default __webpack_public_path__ + \"static/media/AllSamples.d2ca8046.doc\";","export default __webpack_public_path__ + \"static/media/AllSamplesGrouped.e14389c9.doc\";","export default __webpack_public_path__ + \"static/media/FilteredOverlay.0a919588.doc\";","export default __webpack_public_path__ + \"static/media/Simple.0998509d.doc\";","export default __webpack_public_path__ + \"static/media/HorizontalLine.01d045fc.doc\";","export default __webpack_public_path__ + \"static/media/Selection.ca287540.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ac9d6926.doc\";","export default __webpack_public_path__ + \"static/media/Style.1c3a8c53.doc\";","export default __webpack_public_path__ + \"static/media/Zoom.aa973c04.doc\";","export default __webpack_public_path__ + \"static/media/ZoomSlider.1dad555e.doc\";","export default __webpack_public_path__ + \"static/media/ZoomVertical.68b7fd34.doc\";","export default __webpack_public_path__ + \"static/media/onClick.c318e611.doc\";","export default __webpack_public_path__ + \"static/media/Legend.f367df42.doc\";","export default __webpack_public_path__ + \"static/media/ToolboxExample.dd92f223.doc\";","export default __webpack_public_path__ + \"static/media/Simple.2d862a29.doc\";","export default __webpack_public_path__ + \"static/media/ErrorBars.133ac994.doc\";","export default __webpack_public_path__ + \"static/media/Highlight.e40abc5f.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ed38691e.doc\";","export default __webpack_public_path__ + \"static/media/FromSeries.fb55d306.doc\";","export default __webpack_public_path__ + \"static/media/Simple.4ef4ef49.doc\";","export default __webpack_public_path__ + \"static/media/Custom.79a55982.doc\";","export default __webpack_public_path__ + \"static/media/Simple.2491f20a.doc\";","export default __webpack_public_path__ + \"static/media/ColorBy.aedf42bd.doc\";","export default __webpack_public_path__ + \"static/media/Labeled.fffca27c.doc\";","export default __webpack_public_path__ + \"static/media/Simple.d6531c7d.doc\";","export default __webpack_public_path__ + \"static/media/SelectionScatter.98d21352.doc\";","export default __webpack_public_path__ + \"static/media/tooltips.6c82abc1.doc\";","export default __webpack_public_path__ + \"static/media/AccordianTable.c6c79840.doc\";","export default __webpack_public_path__ + \"static/media/AlternatingStyle.722b45d1.doc\";","export default __webpack_public_path__ + \"static/media/Checkbox.41c2605e.doc\";","export default __webpack_public_path__ + \"static/media/ColumnFilters.1274a36a.doc\";","export default __webpack_public_path__ + \"static/media/LazyLoading.436accb3.doc\";","export default __webpack_public_path__ + \"static/media/MultiRowCol.38989a59.doc\";","export default __webpack_public_path__ + \"static/media/MultirowTable.a14bcb9f.doc\";","export default __webpack_public_path__ + \"static/media/NoHeader.7670f9ba.doc\";","export default __webpack_public_path__ + \"static/media/ParentFilterCol.52b459ec.doc\";","export default __webpack_public_path__ + \"static/media/ParentSortCol.5d0b7307.doc\";","export default __webpack_public_path__ + \"static/media/SimpleTable.e51e24b8.doc\";","export default __webpack_public_path__ + \"static/media/TableFormat.1fa82fe0.doc\";","export default __webpack_public_path__ + \"static/media/install.727080ea.py\";","\r\n/// convert the column group object to an array of columns\r\nexport default function toColumns(columnGroups, header=false){\r\n\r\n  var columns = Object.values(columnGroups)\r\n\r\n  /// remove the string values (these will be merged across header rows)\r\n  if( header === true ) columns = columns.filter(r => typeof r !== 'string' )\r\n\r\n  // flatten the arrays into a single array\r\n  return columns.flat()\r\n}\r\n","/**\r\n * Column Filter\r\n * ==============\r\n *\r\n * adds a dropdown menu to the column header, that can\r\n * be used to filter the column contents\r\n *\r\n * @author Nik Sumikawa\r\n * @Date Dec 1, 2020\r\n *\r\n */\r\n\r\nimport React from 'react';\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { Dropdown, Segment } from 'semantic-ui-react'\r\n\r\nexport default function ColumnFilter( props ){\r\n\r\n  const unique_values = props.data.unique(props.col, true)\r\n  const options = unique_values.map(r => {\r\n    return {\r\n      key:`${r}-${_.uniqueId()}`,\r\n      text:`${r}`,\r\n      value:`${r}`,\r\n      style: {fontSize:'12px', padding: '0px', margin:0}\r\n    }})\r\n\r\n  var headerCellOnClick = null\r\n  if( props.columnOnClick !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    headerCellOnClick = () => props.columnOnClick({\r\n      col_name: props.col,\r\n      col_number: props.col_number\r\n    })\r\n  }\r\n\r\n\r\n  var columnFilterOnChange = null\r\n  if( props.columnFilterOnChange !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    columnFilterOnChange = (e, val) => props.columnFilterOnChange({\r\n      col_name: props.col,\r\n      col_number: props.col_number,\r\n      value: val.value\r\n    })\r\n  }\r\n\r\n  var filterValues\r\n  if( props.filters !== undefined ){\r\n    filterValues = (props.filters\r\n      .filter(r => r.col_name === props.col)\r\n      .map(r => r.value)\r\n    )\r\n\r\n    if( filterValues.length === 0 ){\r\n      filterValues = undefined\r\n    }else{\r\n      filterValues = filterValues[0]\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <Segment.Group\r\n      key={`Header-SeggyGroup-${props.col}`}\r\n      raised={false}\r\n      compact\r\n\r\n      style={{\r\n        width:'100%',\r\n        padding:0,\r\n        margin:0,\r\n        boxShadow: 'none',\r\n        border: '0',\r\n        backgroundColor:'transparent'}}>\r\n\r\n      <Segment\r\n        key={`Header-Title-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        onClick={headerCellOnClick}\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}} >\r\n        {props.col}\r\n      </Segment>\r\n\r\n      <Segment\r\n        key={`Header-Filter-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}}\r\n        >\r\n\r\n        <Dropdown\r\n          key={`Header-Dropdown-${props.col}}`}\r\n          style={{\r\n            margin:0,\r\n            padding:'0',\r\n            maxWidth: '100px',\r\n            minHeight: '10px',\r\n            fontSize: '10px',\r\n            color: '#212121'\r\n          }}\r\n          placeholder={'filter...'}\r\n          multiple\r\n          selection\r\n          fluid\r\n          value={filterValues}\r\n          onChange={columnFilterOnChange}\r\n          options={options}\r\n          icon= {null}\r\n\r\n\r\n          />\r\n      </Segment>\r\n    </Segment.Group>\r\n\r\n\r\n  )\r\n}\r\n","/**\r\n * Table Cell Framework\r\n * =======================\r\n *\r\n * Component used to render table cells\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell} from '../../../framework/Components'\r\n\r\nimport ColumnFilter from '../Filter/ColumnFilter'\r\n\r\n\r\n/**\r\n * [Cell description]\r\n * @param       {string} col column name\r\n * @param       {integer} colNumber column number\r\n * @constructor\r\n */\r\nexport default function Cell( props ) {\r\n\r\n  var col = props.col\r\n\r\n  //map the column name when the mapping exists\r\n  if( props.columnNames !== undefined ){\r\n    if( Object.keys(props.columnNames).includes(col) ){\r\n      col = props.columnNames[col]\r\n    }\r\n  }\r\n\r\n  // generate the standard Header onClick function\r\n  var headerCellOnClick = null\r\n  if( props.columnOnClick !== undefined ){\r\n    headerCellOnClick = () => props.columnOnClick({\r\n      col_name: col,\r\n      colNumber: props.colNumber\r\n    })\r\n  }\r\n\r\n  // replace the column component with a filter when filters are specified\r\n  var ColComponent = col\r\n  if( props.columnFilterOnChange !== undefined ){\r\n    headerCellOnClick = null\r\n\r\n    ColComponent = (\r\n      <ColumnFilter\r\n        {...props}\r\n        key = {`Header-ColFilter-${col}`}\r\n        col = {col}\r\n        colNumber = {props.colNumber}\r\n        />\r\n    )\r\n  }\r\n\r\n  // sorted={value === props.sortBy ? direction : null}\r\n\r\n  //populate the header cell\r\n  return(\r\n    <HeaderCell\r\n      {...props.thProps}\r\n      style={{...{textAlign:'center'}, ...props.thStyle}}\r\n      component={props.th}\r\n      defaultValue = {ColComponent}\r\n      key = {`${props.tableName}-th-${props.colNumber}`}\r\n      onClick={headerCellOnClick}\r\n      />\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Row Framework\r\n * =======================\r\n *\r\n * Component used to render table Rows\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Row} from '../../../framework/Components'\r\nimport Cell from '../Cell'\r\n\r\nexport default function ColumnRow( props ) {\r\n\r\n  var col_offset = 0\r\n  var colCells = []\r\n\r\n  // add a leading column when specific parameters are provided\r\n  // in the table object\r\n  if( props.accordian === true ){\r\n    colCells.push(\r\n      <HeaderCell\r\n        {...props.thProps}\r\n        style={{...{textAlign:'center'}, ...props.thStyle}}\r\n        component={props.th}\r\n        defaultValue = {''}\r\n        key = {`${props.tableName}-th-0-ColRow`}\r\n        />\r\n    )\r\n    col_offset = col_offset + 1\r\n  }\r\n\r\n\r\n  // when no columns are provided as props, pull them from the data source\r\n  var columns = props.columns\r\n  if( columns === undefined ) columns = props.table_data.columns\r\n\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n      const colNumber = i + col_offset\r\n\r\n      //populate the header cell\r\n      colCells.push(\r\n        <Cell\r\n          {...props}\r\n          col = {col}\r\n          colNumber = {colNumber}\r\n          key = {`${props.tableName}-th-${colNumber}-ColRow`}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n\r\n  // define the header row\r\n  return (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={colCells}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {Header} from '../../../framework/Components'\r\nimport ColumnRow from './ColumnRow'\r\n\r\nexport default function DataFrameHeader( props ) {\r\n\r\n  // define the header row\r\n  const headerrow = <ColumnRow {...props} />\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n","/**\r\n * Table Row Framework\r\n * =======================\r\n *\r\n * Component used to render table Rows\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Row} from '../../../framework/Components'\r\nimport Cell from '../Cell'\r\n\r\nexport default function TableRow( props ) {\r\n\r\n  var col_offset = 0\r\n  var catCells = []\r\n\r\n  // add a leading column when specific parameters are provided\r\n  // in the table object\r\n  if( props.accordian === true ){\r\n    catCells.push(\r\n      <HeaderCell\r\n        {...props.thProps}\r\n        style={{...{textAlign:'center'}, ...props.thStyle}}\r\n        component={props.th}\r\n        defaultValue = {''}\r\n        key = {`${props.tableName}-th-0-CategoryRow`}\r\n        />\r\n    )\r\n    col_offset = col_offset + 1\r\n  }\r\n\r\n\r\n  // when no columns are provided as props, pull them from the data source\r\n  var categories = Object.keys(props.columnGroups)\r\n\r\n  for (var i=0; i < categories.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var cat = categories[i]\r\n      const colNumber = i + col_offset\r\n\r\n      // determine the col/row spanning based on the col group types\r\n      var thProps = {...props.thProps, ...{}}\r\n      if( typeof props.columnGroups[cat] === 'string' ){\r\n        thProps['rowSpan'] = 2\r\n      } else{\r\n        thProps['colSpan'] = props.columnGroups[cat].length\r\n      }\r\n\r\n      //populate the header cell\r\n      catCells.push(\r\n        <Cell\r\n          {...props}\r\n          col = {cat}\r\n          colNumber = {colNumber}\r\n          thProps={thProps}\r\n          key = {`${props.tableName}-th-${colNumber}-CategoryRow`}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n\r\n  // define the header row\r\n  return (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={catCells}\r\n      key={`${props.tableName}-CategoryRow`}\r\n      />\r\n  )\r\n\r\n\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport toColumn from '../../utilities/ColGroupsToCol'\r\nimport { Table as SemanticTable } from 'semantic-ui-react'\r\n\r\n// import {Header} from '../../../framework/Components'\r\nimport ColumnRow from '../SingleRow/ColumnRow'\r\nimport CategoryRow from './CategoryRow'\r\n\r\nexport default function MultiRowHeader( props ) {\r\n\r\n  const columns = toColumn(props.columnGroups, true)\r\n\r\n  return (\r\n      <SemanticTable.Header>\r\n        <CategoryRow\r\n          key={`${props.tableName}-CombinedRow1`}\r\n          {...props}\r\n          />\r\n\r\n        <ColumnRow\r\n          key={`${props.tableName}-CombinedRow2`}\r\n          {...props}\r\n          columns = {columns}\r\n          />\r\n      </SemanticTable.Header>\r\n\r\n    );\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport SingleRow from './SingleRow'\r\nimport MultiRow from './MultiRow'\r\n// import TableRow from './Row'\r\n\r\nexport default function DataFrameHeader( props ) {\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n\r\n  if( props.columnGroups !== undefined ) return <MultiRow {...props}/>\r\n\r\n  // // return the standard single row\r\n  return <SingleRow {...props}/>\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Header, Row} from '../../framework/Components'\r\n\r\n\r\n\r\n/**\r\n * Returns the Table Header for data in Series Format\r\n * @param       {Object} props Parameter object\r\n * @constructor\r\n */\r\nexport default function SeriesHeader( props ) {\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n  var data = props.table_data\r\n\r\n  // attempt to pull the name out of the series. Default to\r\n  // value when it's not available\r\n  var name = data.name\r\n  if( name === undefined ) name = 'value'\r\n\r\n  var row = []\r\n  const columns = ['', name]\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n\r\n\r\n      var headerCellOnClick = null\r\n      if( props.columnOnClick !== undefined ){\r\n        // persist the onClick inputs to avoid mutation\r\n        const col_name = col\r\n        const col_number = i\r\n        headerCellOnClick = () => props.columnOnClick({\r\n          col_name: col_name,\r\n          col_number: col_number\r\n        })\r\n      }\r\n\r\n      //populate the header cell\r\n      row.push(\r\n        <HeaderCell\r\n          {...props.thProps}\r\n          style={{...{textAlign:'center'}, ...props.thStyle}}\r\n          component={props.th}\r\n          defaultValue = {col}\r\n          key = {`${props.tableName}-th-${i}`}\r\n          onClick={headerCellOnClick}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n  // define the header row\r\n  const headerrow = (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={row}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {fillAndEdge} from '../../../colors/Colors'\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a svg object containing a colored square\r\n * @param       {string} colorHex string containing the hex color value\r\n * @constructor\r\n */\r\nexport default function coloredSquare( colorHex, props ){\r\n\r\n  if( colorHex === undefined ) colorHex = '#B0B0B0'\r\n\r\n  const colors = fillAndEdge(colorHex)\r\n\r\n  return(\r\n    <svg preserveAspectRatio=\"xMinYMin meet\"\r\n      viewBox=\"0, 0, 40, 20\"\r\n      transform=\"scale(1, -1)\"\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"40px\",\r\n        height: '100%',\r\n        overflow: \"visible\",\r\n      }}>\r\n\r\n      <rect\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"40\"\r\n        height=\"100%\"\r\n        stroke={colors.edge}\r\n        strokeWidth=\"1\"\r\n        fill={colors.fill}\r\n        />\r\n\r\n    </svg>\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n/**\r\n * returns the onClick function when specified. Defaults to undefined\r\n * @param  {object} json_table  jsonTable object\r\n * @param  {string} col         column name\r\n * @param  {integer} row        row number\r\n * @return {function}           onClick function\r\n */\r\nexport default function onClickFunc( props ){\r\n\r\n  var onClick\r\n\r\n  // select the onClick function when provided globally\r\n  if( props.onClick !== undefined ){\r\n    onClick = () => props.onClick({\r\n      row: props.row_idx,\r\n      col: props.col,\r\n      value: props.value,\r\n      row_data: props.row\r\n      })\r\n  }\r\n\r\n  // extract the onClick function for the specific cell\r\n  if( props.cellOnClick !== undefined ){\r\n\r\n    // add the onClick function when one exists for the column\r\n    const onClickColumns = Object.keys(props.cellOnClick)\r\n    if( onClickColumns.includes(props.col) ){\r\n      onClick = () => props.cellOnClick[props.col]({\r\n        row: props.row_idx,\r\n        col: props.col,\r\n        value: props.value,\r\n        row_data: props.row\r\n        })\r\n    }\r\n  }\r\n\r\n  return onClick\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {Button, Image, Icon, Checkbox} from '../../framework/Components'\r\n\r\nimport valueToString from '../../../../data_types/format/valueToString'\r\n\r\nimport booleanCircle from './booleanCircle'\r\nimport coloredSquare from './coloredSquare'\r\nimport onClickFunc from './onClickFunc'\r\n\r\n\r\nexport default function cellType( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n\r\n  const format = new valueToString()\r\n\r\n  //add the onclick fundtion. Default to do nothing when the function does not exist\r\n  var cellOnClick = onClickFunc( props )\r\n  var componentOnClick = onClickFunc( props )\r\n\r\n  var value = props.value\r\n  var cellContent\r\n\r\n  switch( props.dtype ){\r\n\r\n    case 'button':\r\n      cellOnClick = null\r\n\r\n      cellContent = (\r\n        <Button\r\n          {...props.buttonProps}\r\n          style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n          component={props.button}\r\n          key={`${props.tableName}-button-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'image':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Image\r\n          {...props.imageProps}\r\n          style={{...{textAlign:'center'}, ...props.imageStyle}}\r\n          component={props.image}\r\n          key={`${props.tableName}-image-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'icon':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Icon\r\n          {...props.IconProps}\r\n          key={`${props.tableName}-icon-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.iconStyle}}\r\n          component={props.icon}\r\n          name={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'checkbox':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Checkbox\r\n          {...props.CheckboxProps}\r\n          key={`${props.tableName}-checkbox-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.checkboxStyle}}\r\n          component={props.checkbox}\r\n          checked={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    // case 'function':\r\n    //   return props.table.function[col_name](props)\r\n\r\n    case 'boolean':\r\n      cellOnClick = null\r\n      cellContent = booleanCircle(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'square':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'hexcolor':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'text':\r\n      cellContent = <p style={{whiteSpace:'pre'}}>{value}</p>\r\n      break\r\n\r\n    case 'float':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'percent':\r\n    case 'percentage':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'scientific':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'datetime':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'table':\r\n      cellContent = value\r\n      break\r\n\r\n    default:\r\n      cellContent = <p style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}}>{value}</p>\r\n  }\r\n\r\n\r\n  return {\r\n    cellContent: cellContent,\r\n    cellOnClick: cellOnClick\r\n  }\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {booleanColor} from '../../../colors/Colors'\r\n\r\n\r\n/**\r\n * Creates a green or red circle based on the value of the cell\r\n * @constructor\r\n */\r\nexport default function booleanCircle(value, onClick, props){\r\n\r\n  var colors = booleanColor( value )\r\n\r\n  var radius = 20\r\n  if( props.radius !== undefined ) radius = props.radius\r\n\r\n  return (\r\n\r\n      <svg preserveAspectRatio=\"xMinYMin meet\"\r\n           viewBox={`0, 0, ${radius}, ${radius}`}\r\n           transform=\"scale(1, -1)\"\r\n           style={{display: \"inline-block\",\r\n                   width: `${radius+4}px`,\r\n                   overflow: \"visible\",\r\n           }}>\r\n\r\n        <circle\r\n          cx={`${radius/2 - 2}`}\r\n          cy={`${radius/2 - 2}`}\r\n          r={`${radius/2}`}\r\n          stroke={colors.edge}\r\n          strokeWidth=\"1\"\r\n          fill={colors.fill}\r\n          onClick={onClick}\r\n          />\r\n\r\n       </svg>\r\n )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {Cell as TableCell} from '../../framework/Components'\r\n\r\nimport cellType from './cellType'\r\n\r\n\r\nexport default function Cell( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n  const cell = cellType(props)\r\n\r\n  var style = {textAlign:'center'}\r\n\r\n  // the background color can be provided as a field of table object.\r\n  // The background color parameter requires a json array with the\r\n  // same fields as the data table. What would normally contain the\r\n  // data now contains colors\r\n  if( props.cellBackgroundColor !== undefined ){\r\n    try{\r\n      const color = props.cellBackgroundColor[props.row_idx][props.col]\r\n      if( color !== undefined ) style['backgroundColor'] = color\r\n    }catch{}\r\n  }\r\n\r\n  if( props.cellStyle !== undefined ){\r\n    try{\r\n      style = {\r\n        ...style,\r\n        ...props.cellStyle[props.row_idx][props.col]\r\n\r\n      }\r\n    }catch{}\r\n  }\r\n\r\n  return (\r\n    <TableCell\r\n      {...props.tdProps}\r\n      style={{...props.tdStyle, ...style}}\r\n      component={props.td}\r\n      key = {`${props.tableName}-cell-${props.col}-${props.row_idx}`}\r\n      onClick={cell.cellOnClick}\r\n      defaultValue= {cell.cellContent}\r\n      />\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n\r\n\r\nexport default function Row( props ) {\r\n\r\n    const row_data = props.table_data[props.row_idx]\r\n    const row = []\r\n    for (var i=0; i < props.columns.length; i++ ){\r\n      const col = props.columns[i]\r\n\r\n      var tdProps = {...props.tdProps, ...{}}\r\n      if( props.col_span !== undefined ) tdProps['colSpan'] = props.col_span[col]\r\n      if( props.row_span !== undefined){\r\n        if (Object.keys(props.row_span).includes(col)) tdProps['rowSpan'] = props.row_span[col]\r\n      }\r\n\r\n\r\n      row.push(\r\n        <Cell\r\n          {...props}\r\n          row={row_data}\r\n          value={row_data[col]}\r\n          dtype={props.table_data.dtypes[col]}\r\n          key={`${props.tableName}-cell-${props.row_idx}-${i}`}\r\n          col = {col}\r\n          tdProps={tdProps}\r\n          />\r\n      )\r\n    }\r\n\r\n\r\n    // define the rowOnClick function to standardize the returned data\r\n    var rowOnClick = null\r\n    if( props.rowOnClick !== undefined ){\r\n      rowOnClick = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // set the background color when the row is selected\r\n    var rowStyle = {textAlign:'center'}\r\n\r\n    if((props.alternateStyle === true)&(props.row_idx % 2 === 0) ){\r\n      rowStyle['backgroundColor'] = '#f6fcfe'\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowColor !== undefined ){\r\n      const rows = Object.keys(props.rowColor)\r\n      const idx = row_data.__index__.toString()\r\n      if( rows.includes(idx) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: props.rowColor[idx]}\r\n      }\r\n    }\r\n\r\n    // Add custom row style\r\n    if( props.rowStyle !== undefined ){\r\n      if( props.rowStyle.length > props.row_idx ){\r\n        rowStyle = {...rowStyle, ...props.rowStyle[props.row_idx]}\r\n      }\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowBackgroundColor !== undefined ){\r\n      if( props.rowBackgroundColor.includes(row_data.__index__) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n      }\r\n    }\r\n\r\n    if( props.row_idx === props.selectedRow ){\r\n      rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n    }\r\n\r\n    // return the cell content not wrapped in a row element. This\r\n    // is needed for row extensions such as the accordian rows.\r\n    if( props.cellContentOnly === true ){\r\n      return row\r\n    }\r\n\r\n\r\n    return (\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}--${props.multirow_idx}`}\r\n        onClick={rowOnClick}\r\n        defaultValue={row}\r\n        />\r\n    )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n/**\r\n * Returns a Row of Cell components based on data Formatted\r\n * as a Series\r\n * @param       {Object} props data and style parameters\r\n */\r\nexport default function SeriesRow( props ) {\r\n\r\n  const index = props.table_data.index\r\n  const values = props.table_data.values\r\n\r\n  // format the row data to return in onClick functions\r\n  const row_data = {\r\n    __index__: index[props.row_idx],\r\n    __value__: values[props.row_idx],\r\n  }\r\n\r\n  // default the data type unless the table contains a datatype array\r\n  // which is provided manually for table customization\r\n  var dtype = props.table_data.dtype\r\n  if( props.table_data.dtypes !== undefined ) dtype = props.table_data.dtypes[row_data['__index__']]\r\n\r\n  const row = [\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__index__']}\r\n      dtype={'string'}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${0}`}\r\n      col = {'__index__'}\r\n      />,\r\n\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__value__']}\r\n      dtype={dtype}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${1}`}\r\n      col = {'__value__'}\r\n      />\r\n\r\n  ]\r\n\r\n\r\n\r\n  // define the rowOnClick function to standardize the returned data\r\n  var rowOnClick = null\r\n  if( props.rowOnClick !== undefined ){\r\n    rowOnClick = () => props.rowOnClick({\r\n      row: props.row_idx,\r\n      row_data: row_data\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      key={`${props.tableName}-row--${props.row_idx}`}\r\n      onClick={rowOnClick}\r\n      defaultValue={row}\r\n      />\r\n  )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\n\r\n/**\r\n * Accordian Tables are available after performing the groupby\r\n * function, where both metadata and the json object are available\r\n * based on the split.\r\n *\r\n * The accordian table shows the data based on the split described\r\n * by the parent table\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport default function AccordianRow( props ){\r\n\r\n  // state variable to track the visibility state of the accordian\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const row_data = props.table_data[props.row_idx]\r\n\r\n  // map the rowOnClick function to cellonClick to\r\n  // disable the onClick function of the icon row\r\n  var cellOnClick = {}\r\n  if( props.rowOnClick !== undefined ){\r\n    for( var i=0; i < props.columns.length; i++ ){\r\n      cellOnClick[props.columns[i]] = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // console.log( props.selectedRow, props)\r\n  // set the background color when the row is selected\r\n  var rowStyle = {textAlign:'center'}\r\n  if( props.row_idx === props.selectedRow ){\r\n    rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n  }\r\n\r\n\r\n\r\n  var AccordianTable = row_data.json_obj\r\n\r\n  // when provided, apply the the function to transform the subgroup\r\n  if( props.accordianFunc !== undefined) AccordianTable = props.accordianFunc(AccordianTable)\r\n\r\n  var columns = AccordianTable.columns\r\n  if( props.accordianColumns !== undefined ) columns = props.accordianColumns\r\n\r\n  // select an icon based on the visible flag\r\n  var iconOnClick = () => {setVisible(!visible)}\r\n  var icon = 'caret right'\r\n  var iconColor = 'black'\r\n  if( visible === true ) icon = 'caret down'\r\n  if( AccordianTable.length === 0 ){\r\n    icon = 'ellipsis horizontal'\r\n    iconColor = '#D0D0D0'\r\n    iconOnClick = () => {console.log('no data to unfold')}\r\n  }\r\n\r\n  var AccordianComponent\r\n  if( props.accordianComponent !== undefined ){\r\n\r\n    AccordianComponent = (\r\n      <props.accordianComponent\r\n        {...props}\r\n        row={props.row_idx}\r\n        row_data={row_data}\r\n        />\r\n    )\r\n\r\n  }else{\r\n\r\n    AccordianComponent = (\r\n      <AccordianTable.react.semanticUI.Table\r\n        tableName={`accordianTable - ${props.tableName} - ${props.row_idx}`}\r\n        tableStyle={{padding:0, margin:0}}\r\n        columns={columns}\r\n        thStyle={{margin:0, padding:0}}\r\n        tdStyle={{margin:0, padding:0}}\r\n        showHeader={props.accordianHeader}\r\n        radius={10}\r\n        {...props.accordianProps}\r\n        />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}`}\r\n        defaultValue={\r\n          <>\r\n            <Cell\r\n              {...props}\r\n              tdProps={{rowSpan:(visible) ? 2 : 1}}\r\n              style={{maxWidth:'50px'}}\r\n              row={props.row_idx}\r\n              value={icon}\r\n              dtype={'icon'}\r\n              key={`${props.tableName}-accordian-control-${props.row_idx}`}\r\n              col = {'accordianEnable'}\r\n              onClick={iconOnClick}\r\n              iconStyle={{color:iconColor}}\r\n              />\r\n\r\n            <Row\r\n              {...props}\r\n              cellContentOnly={true}\r\n              cellOnClick={cellOnClick}\r\n              />\r\n          </>\r\n        }\r\n        />\r\n\r\n\r\n\r\n        { visible ?\r\n          <TableRow\r\n            {...props.trProps}\r\n            component={props.tr}\r\n            key={`${props.tableName}-accordian-row-${props.row_idx}`}\r\n            defaultValue={\r\n              <Cell\r\n                {...props}\r\n                tdProps={{colSpan:props.columns.length}}\r\n                tdStyle={{margin:0, padding:0}}\r\n                row={props.row_idx}\r\n                dtype={'table'}\r\n                key={`${props.tableName}-accordian-dropodwn-${props.row_idx}-${-1}`}\r\n                col = {'accordianTable'}\r\n                value={AccordianComponent}\r\n                />\r\n\r\n\r\n            }\r\n            />\r\n          : null\r\n        }\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\n\r\nimport Row from './Row'\r\n\r\n\r\nexport default function MultiRow( props ) {\r\n\r\n  const modProps = rowSpan(props)\r\n\r\n  var MultiRow = [Row(modProps)]\r\n\r\n  for( var i=0; i < props.multirow.length; i++ ){\r\n    const columns = props.multirow[i]\r\n\r\n    MultiRow.push(\r\n      Row({\r\n        ...props,\r\n        ...{\r\n          columns: columns,\r\n          multirow_idx: i,\r\n          col_span: colSpan(props, columns),\r\n          tdStyle: {\r\n            ...{textAlign: 'left'},\r\n            ...props.tdStyle,\r\n            ...props.multirowStyle\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n  }\r\n\r\n  return MultiRow\r\n}\r\n\r\n\r\nfunction colSpan( props, columns ){\r\n\r\n  var span_len = props.columns.length\r\n  if( props.multirowSpan !== undefined ) span_len = span_len - props.multirowSpan.length\r\n\r\n  // compute the lower bound on column span width\r\n  const span = Math.ceil(span_len/columns.length)\r\n\r\n  var colSpan = {}\r\n  for( var i=0; i < columns.length; i++ ){\r\n    colSpan[columns[i]] = span\r\n\r\n    // shrink the last column when span does not align properly\r\n    if(  (columns.length - i*span) < 0 ){\r\n      colSpan[columns[i]] = columns.length - (i-1)*span\r\n    }\r\n  }\r\n\r\n  return colSpan\r\n\r\n}\r\n\r\nfunction rowSpan( props ){\r\n\r\n  var modProps = {...props, ...{}}\r\n\r\n\r\n  if( props.multirowSpan !== undefined ){\r\n\r\n    // const multiRowCol = [...new Set(props.multirowSpan.filter(x => props.columns.includes(x)))]\r\n    // const colDiff = [...new Set(props.multirowSpan.filter(x => !props.columns.includes(x)))]\r\n    //\r\n    // modProps.columns = multiRowCol.concat(colDiff)\r\n\r\n    modProps['row_span'] = {}\r\n    props.multirowSpan.map(r => modProps['row_span'][r] = props.multirow.length + 1 )\r\n  }\r\n\r\n  return modProps\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Series from '../../../../Series'\r\n\r\nimport {Body, Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\nimport SeriesRow from './SeriesRow'\r\nimport AccordianRow from './AccordianRow'\r\nimport MultiRow from './MultiRow'\r\n\r\nexport default function TableBody( props ) {\r\n\r\n  const [selectedRow, setSelectedRow] = useState(props.selectedRow)\r\n  const [onHover, setOnHover] = useState(false)\r\n\r\n  // default to using the DataFrame Row Format\r\n  var Component = Row\r\n  var rows = props.table_data.length\r\n\r\n  // when lazy loading is implemented, limited the number of rows to render\r\n  if( (props.lazyLoading === true)&(props.renderedRows < rows) ){\r\n    rows = props.renderedRows\r\n  }\r\n\r\n  // overwrite the component with Accordian rows when specified\r\n  if( props.accordian === true ) Component = AccordianRow\r\n\r\n  // change component types when the data is of series type\r\n  if( props.table_data instanceof Series ){\r\n    Component = SeriesRow\r\n    rows = props.table_data.values.length\r\n  }\r\n\r\n  // change component types to MultiRow when the multirow props are present\r\n  if( props.multirow !== undefined ){\r\n    Component = MultiRow\r\n  }\r\n\r\n  const body = []\r\n  for (var i=0; i < rows; i++ ){\r\n\r\n    body.push(\r\n      <Component\r\n        {...props}\r\n        key={`${props.tableName}-Row-${i}`}\r\n        row_idx = {i}\r\n        selectedRow = {selectedRow}\r\n        setSelectedRow = {(value) => setSelectedRow(value)}\r\n        />\r\n    )\r\n  }\r\n\r\n  // add a row to show more rows, when there are more rows to show\r\n  if( (props.lazyLoading === true)&(props.renderedRows < props.table_data.length) ){\r\n    body.push(\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--lazyloading`}\r\n        onClick={() => {\r\n          const step = (props.lazyLoadingStep === undefined ? 100 : props.lazyLoadingStep)\r\n          props.setRenderedRows(props.renderedRows + step)\r\n        }}\r\n        defaultValue={\r\n          <td\r\n            onMouseOver={()=>setOnHover(true)}\r\n            onMouseOut={()=>setOnHover(false)}\r\n            style={{backgroundColor: (onHover ? '#AFEEEE' : '#F0FFFF')}}\r\n            colSpan={props.columns.length}>\r\n            <h3>show more rows</h3>\r\n          </td>\r\n        }\r\n        />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Body\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.body}\r\n      key={`${props.tableName}-body`}\r\n      defaultValue={body}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport Series from '../../../Series'\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport toColumn from './utilities/ColGroupsToCol'\r\nimport {Table as TableComponent} from '../framework/Components'\r\nimport {SeriesHeader, DataFrameHeader} from './header'\r\nimport TableBody from './body'\r\n\r\n\r\n/**\r\n * Integrated table component  build into the jsonArray\r\n * @param       {String} props.tableName\r\n * @param       {Component} props.table base html component that can be overwritten by Framework component\r\n * @param       {Component} props.tr    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.td    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.th    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.body  base html component that can be overwritten by Framework component\r\n * @param       {Component} props.button base html component that can be overwritten by Framework component\r\n * @param       {function} props.columnOnClick  function exectued when a column is selected\r\n * @param       {function} props.rowOnClick     function exectued when a row is selected\r\n * @param       {function} props.cellOnClick    function exectued when a cell is selected\r\n * @param       {Boolean} props.accordian  Not implemented\r\n * @param       {Boolean} props.accordianHeader  Not implemented\r\n * @param       {Boolean} props.accordianColumns  Not implemented\r\n * @param       {Boolean} props.accordianFunc  Not implemented\r\n * @param       {Boolean} props.showHeader when True, the table header will be shown\r\n * @param       {Boolean} props.sortable   When True, the table can be sorted by the columns\r\n * @param       {Array} props.columns     Array of column names\r\n * @param       {Array} props.columnNames Array of column names\r\n * @param       {String} props.sortBy     column name that will be presorted\r\n * @param       {String} props.sortAscending  sort column direction\r\n * @param       {boolean} props.lazingLoading  when True, only part of the table will be rendered with the ability to render in steps (lazy loading)\r\n * @param       {Integer} props.lazyLoadingStart  Number of rows to render on init\r\n * @param       {Integer} props.lazyLoadingStep   Number of rows to add when rerendering\r\n * @param       {Array} props.rowBackgroundColor set the background color of multiple rows based on the index number\r\n * @constructor\r\n */\r\nexport default class Table extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Table = this.Table.bind(this)\r\n  }\r\n\r\n  Table( props ){\r\n\r\n    // Render the table with a Series data structure\r\n    if( this.data instanceof Series ){\r\n      return SeriesTable( this.props(props) )\r\n    }\r\n\r\n    // default to render the table as a DataFrame type\r\n    return Render( this.props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the table based on the data and parameters specified in the\r\n // json table attribute. This was moved to it's own function in order\r\n // to be complient with React's requirement for useState functionality\r\n // to be implemented within a function\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport function Render( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n  const [filters, setFilters] = useState(props.filters)\r\n  const [renderedRows, setRenderedRows] = useState((props.lazyLoadingStart === undefined) ? 100 : props.lazyLoadingStart)\r\n\r\n  // cast the data to a json_array data type\r\n  var table_data = props.data\r\n  if( !(table_data instanceof jsonArray) ){\r\n    table_data = new jsonArray(table_data)\r\n  }\r\n\r\n  // pull the column names from the props when available. Default\r\n  // to using all columns in the DataFrame\r\n  var columns = props.columns\r\n  if( props.columnGroups !== undefined) columns = toColumn(props.columnGroups, false)\r\n  if( columns === undefined ) columns = table_data.columns\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'Table'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnFilterOnChange = props.columnFilterOnChange\r\n  if( props.filterable === true ){\r\n      columnFilterOnChange = (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value.length > 0 ) temp.push( content )\r\n        setFilters( temp )\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  // filter Table based on the values stored in the filter object array\r\n  if( filters !== undefined ){\r\n    for( var i=0; i < filters.length; i ++ ){\r\n\r\n      const filt = filters[i]\r\n      if( !(columns.includes(filt.col_name)) ) continue\r\n      if( filt.value.length === 0 ) continue\r\n\r\n      table_data = table_data.filter(r => filt.value.includes(r[filt.col_name].toString()) )\r\n    }\r\n    // console.log( table_data)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <DataFrameHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          filters = {filters}\r\n          columnOnClick = {columnOnClick}\r\n          columnFilterOnChange = {columnFilterOnChange}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          renderedRows = {renderedRows}\r\n          setRenderedRows = {setRenderedRows}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the a table for data of Series type\r\n * @param       {Object} props parameters for rendering Table\r\n * @constructor\r\n */\r\nexport function SeriesTable( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  var table_data = props.data\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'SeriesTable'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <SeriesHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columnOnClick = {columnOnClick}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n","/**\r\n * echarts Scatter by\r\n * ==================\r\n *\r\n * groups the data based on values in a given column\r\n * and creates a multicolored scatter plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport {color} from '../../../colors/Colors'\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter from './index'\r\n\r\n/**\r\n * Returns a list of echarts scatter objects colored by the specified att\r\n *\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {string} colorBy    color for grouping the samples\r\n * @return {Array}       Array of x/y cooridnates\r\n */\r\nexport default function scatter_by( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // group samples based on the specified column\r\n  const group = json_array.groupby([props.colorBy])\r\n\r\n  var series = []\r\n\r\n  for( var i=0; i < group.length; i++ ){\r\n\r\n    // extract the color based on the index and format the data\r\n    // from a json_array to a list of x/y coordinates\r\n    const color_value = color( i, 100, 'entropy_8bit' )\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series = series.concat( scatter({\r\n      ...props,\r\n      ...{\r\n        json_array: group[i].json_obj,\r\n        color: color_value,\r\n        groupId: group[i][props.colorBy],\r\n      }}\r\n    ))\r\n  }\r\n\r\n  return series\r\n}\r\n","/**\r\n * Value To String\r\n * ====================\r\n *\r\n * Converts values to string formats based on the provided\r\n * data types\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport datetime from '../datetime'\r\n\r\nexport default class valueToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    this.numeric = 8\r\n    this.percentage = 2\r\n    this.float = 4\r\n    this.string = 50\r\n\r\n  }\r\n\r\n  // returns a formatted string based on the value data type\r\n  toString( value, dtype ){\r\n\r\n    switch( dtype ){\r\n\r\n      case 'float': return this.format_float(value)\r\n      case 'int': return this.format_int(value)\r\n      case 'array': return this.format_array(value)\r\n      case 'object': return this.format_object(value)\r\n      case 'boolean': return this.format_boolean(value)\r\n\r\n      case 'scientific': return this.format_scientific( value )\r\n\r\n      case 'percent': return this.format_percentage( value )\r\n      case 'percentage': return this.format_percentage( value )\r\n\r\n      case 'datetime': return this.format_datetime( value )\r\n\r\n      default: return this.format_string( value )\r\n    }\r\n  }\r\n\r\n  // formats a float by removing resolution to 4 decimal points or\r\n  // converting it to scientific notation\r\n  format_float( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value/Math.pow(10,this.float-1) > 0 ) return value.toFixed(this.float).toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  // formats a value of percent data type into a percentage string\r\n  format_percentage( value ){\r\n    if( value === undefined ) return '-'\r\n    const formatted = (100*value).toFixed(this.percentage)\r\n    if( isNaN(formatted) ) return '-'\r\n    return `${formatted}%`\r\n  }\r\n\r\n  // limits the resolution of integers. Returns the original\r\n  // value when less than the maximum resolutions\r\n  format_int( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value < Math.pow(10,this.numeric-1) ) return value.toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  format_array( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_object( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_boolean( value ){\r\n    return value\r\n  }\r\n\r\n  format_scientific( value ){\r\n    return Number.parseFloat(value).toExponential(2)\r\n  }\r\n\r\n  format_datetime( value ){\r\n    return datetime(value).format('YYYY-MM-DD')\r\n  }\r\n\r\n\r\n  // limits the number of characters in a string\r\n  format_string( value ){\r\n    if( value.length > this.string ) return value.slice(1, this.string)\r\n    return value\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nimport echarts from 'echarts'\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var data = [\r\n    {\"WEEK\":1,\"PRODUCT\":\"A\", \"VALUE\":97.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"A\", \"VALUE\":96.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"A\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"A\", \"VALUE\":94.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"A\", \"VALUE\":93.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"A\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":1,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"B\", \"VALUE\":96.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"B\", \"VALUE\":94.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"B\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"B\", \"VALUE\":91.08416666666666},\r\n    {\"WEEK\":1,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"C\", \"VALUE\":93.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\r\n    ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  // pivot the table\r\n  const pivot = json_array.pivot_table(\r\n    'PRODUCT',\r\n    'WEEK',\r\n    'sum',\r\n    'VALUE'\r\n  )\r\n\r\n  // extract a list of columns\r\n  const columns = pivot.columns.filter(r => r !== 'row')\r\n\r\n  var data = []\r\n\r\n  // combine the data for each row including data for columns with missing data\r\n  for( let i=0; i < pivot.length; i++ ){\r\n    var row = []\r\n    var id = pivot[i]['row']\r\n    console.log( 'what is the id', id)\r\n    for( let j=0; j < columns.length; j++ ){\r\n      row.push(pivot[i][columns[j]])\r\n    }\r\n    data.push( series(id, row) )\r\n  }\r\n\r\n\r\n  console.log( data )\r\n  console.log( options(data) )\r\n\r\n  // var option = json_array.echartsOptions\r\n  // option = option.scatter({\r\n  //   colx:'WEEK',\r\n  //   coly:'VALUE'\r\n  // })\r\n  //\r\n\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {options(data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nfunction series( id, data ){\r\n  return {\r\n      name: id,\r\n      type: 'line',\r\n      stack: 'stack',\r\n      smooth: true,\r\n      lineStyle: {\r\n          width: 0\r\n      },\r\n      showSymbol: false,\r\n      areaStyle: {\r\n          opacity: 0.8,\r\n      //     color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n      //         offset: 0,\r\n      //         color: 'rgba(128, 255, 165)'\r\n      //     }, {\r\n      //         offset: 1,\r\n      //         color: 'rgba(1, 191, 236)'\r\n      //     }])\r\n      },\r\n      emphasis: {\r\n          focus: 'series'\r\n      },\r\n      data: data\r\n  }\r\n\r\n}\r\n\r\nfunction options( series ){\r\n\r\n  return {\r\n    color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\r\n    // title: {\r\n    //     text: '渐变堆叠面积图'\r\n    // },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                backgroundColor: '#6a7985'\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5', 'Line 6']\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: series\r\n};\r\n\r\n}\r\n\r\n\r\nconst testoption = {\r\n    color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\r\n    title: {\r\n        text: '渐变堆叠面积图'\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                backgroundColor: '#6a7985'\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5']\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name: 'Line 1',\r\n            type: 'line',\r\n            stack: '总量',\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 0\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n                opacity: 0.8,\r\n                // color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                //     offset: 0,\r\n                //     // color: 'rgba(128, 255, 165)'\r\n                // }, {\r\n                //     offset: 1,\r\n                //     // color: 'rgba(1, 191, 236)'\r\n                // }])\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [140, 232, 101, 264, 90, 340, 250]\r\n        },\r\n        {\r\n            name: 'Line 2',\r\n            type: 'line',\r\n            stack: '总量',\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 0\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n                opacity: 0.8,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(0, 221, 255)'\r\n                }, {\r\n                    offset: 1,\r\n                    color: 'rgba(77, 119, 255)'\r\n                }])\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [120, 282, 111, 234, 220, 340, 310]\r\n        },\r\n        {\r\n            name: 'Line 3',\r\n            type: 'line',\r\n            stack: '总量',\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 0\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n                opacity: 0.8,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(55, 162, 255)'\r\n                }, {\r\n                    offset: 1,\r\n                    color: 'rgba(116, 21, 219)'\r\n                }])\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [320, 132, 201, 334, 190, 130, 220]\r\n        },\r\n        {\r\n            name: 'Line 4',\r\n            type: 'line',\r\n            stack: '总量',\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 0\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n                opacity: 0.8,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(255, 0, 135)'\r\n                }, {\r\n                    offset: 1,\r\n                    color: 'rgba(135, 0, 157)'\r\n                }])\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [220, 402, 231, 134, 190, 230, 120]\r\n        },\r\n        {\r\n            name: 'Line 5',\r\n            type: 'line',\r\n            stack: '总量',\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 0\r\n            },\r\n            showSymbol: false,\r\n            label: {\r\n                show: true,\r\n                position: 'top'\r\n            },\r\n            areaStyle: {\r\n                opacity: 0.8,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(255, 191, 0)'\r\n                }, {\r\n                    offset: 1,\r\n                    color: 'rgba(224, 62, 76)'\r\n                }])\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [220, 302, 181, 234, 210, 290, 150]\r\n        }\r\n    ]\r\n};\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions.pareto({\r\n    col: 'CATEGORY1',\r\n    ratio: true,\r\n  })\r\n\r\n  console.log( json_array)\r\n  console.log(json_array.sum('COUNT'))\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key={`Pareto`}\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Bar\r\n      colx='id'\r\n      coly='COUNT'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var stack_col = 'CATEGORY2'\r\n\r\n  var json_array = new jsonArray( data )\r\n  // create a pivot table so there is a unique column for each\r\n  // category you wish to stack (CATEGORY2 in this case)\r\n  var pivot = json_array.pivot_table('CATEGORY1', stack_col, 'count')\r\n\r\n  // retrieve the unique values for column you wish to stack\r\n  const stacked_id = json_array.unique(stack_col)\r\n\r\n  console.log( stacked_id)\r\n  return(\r\n    <pivot.react.echarts.Bar\r\n      colx = 'row'\r\n      coly = {stacked_id}\r\n      stacked = {true}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      overlayFilter = {r => r.CATEGORY2 === '71F00295B-05'}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option = option.axhline( 3.5 )\r\n\r\n  \r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.selection()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport jsonArray from './jsonArray'\r\n\r\nexport default jsonArray\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      echartsStyle={{height:'500px'}}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({scroll:true})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({sliders: {xAxis: true, yAxis: true}})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoomslider'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({\r\n    scroll: true,\r\n    yAxis: true,\r\n    sliders: {yAxis:true}\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const [selected, setSelected] = React.useState()\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <json_array.react.echarts.Echarts\r\n        key='selection'\r\n        option = {option}\r\n        onClick={(val) => setSelected(val.data)}\r\n        />\r\n\r\n      {(selected === undefined) ? null : <h2>Selected -- {selected.join(',')}</h2>}\r\n\r\n  </div>\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx:'COUNT',\r\n    coly:'id',\r\n    colorBy:'CATEGORY2'\r\n  })\r\n\r\n  option.toolbox()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\n// retrieves data from the data repository. modularizing the data this way, makes\r\n// it possible to easily offload the data to an external location to reduce the\r\n// overall build size thus improving build and loading times\r\nexport default function getData( path ){\r\n  return require('./data/' + path)\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  console.log( data )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Heatmap\r\n      colx='__index__'\r\n      coly='COUNT'\r\n      value='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG_YIELD',\r\n      min:'MIN_YIELD',\r\n      max:'MAX_YIELD',\r\n    })\r\n  )\r\n\r\n  option.xAxis[0].rotate()\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG_YIELD',\r\n      min:'MIN_YIELD',\r\n      max:'MAX_YIELD',\r\n    })\r\n  )\r\n\r\n  option.xAxis[0].rotate()\r\n  option.xAxis[0].max = json_array.length\r\n  option.xAxis[0].min = -1\r\n\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  option = option.highlight({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD',\r\n    value: 'TZ62817.1C',\r\n\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Line\r\n      colx='WP_LOTID'\r\n      coly='AVG_YIELD'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {\"START_TIME\":\"2021-02-24 04:32:01\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-13 19:15:32\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69644.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-22 06:09:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70094.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-06 17:28:18\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:35:14\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 01:13:39\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-07 21:40:40\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70491.1X\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 07:42:45\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 19:43:32\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-07 03:49:22\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70484.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-22 13:21:03\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69643.1W\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 14:05:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 07:41:31\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70099.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-25 21:17:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 04:18:51\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70106.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-25 02:12:10\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 03:55:42\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 17:33:24\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 16:07:48\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71012.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:58\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-24 06:30:56\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69639.1A\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-16 08:49:56\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 10:03:11\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70101.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-09 21:34:30\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70483.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:09:28\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 18:25:51\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 01:25:29\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71018.1T\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-24 18:41:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 23:08:54\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 13:48:53\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 11:29:21\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70490.1F\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-23 20:52:06\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 12:30:11\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-02 18:32:23\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69221.1R\",\"FAB\":\"CHDFAB\",\"QRB\":true,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:57\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-23 10:26:55\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69253.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 17:21:56\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-28 04:32:00\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69641.1K\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"}]\r\n\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column('type', r => {\r\n    if(r.QRB === true) return 'QRB'\r\n    if(r.FORCE_INK === true) return 'FORCE_INK'\r\n    if(r.DEV === true) return 'DEV'\r\n    if(r.SBL === true) return 'SBL'\r\n    return 'OTHER'\r\n  })\r\n\r\n  // const col = 'type'\r\n  // const group = json_array.groupby([col])\r\n  //\r\n  // console.log( group )\r\n  var option = json_array.echartsOptions\r\n  option = option.pieFromSeries({\r\n    col: 'type'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='pieFromSeries'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  var option = json_array.echartsOptions\r\n  // option = option.scatter({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   // label: true\r\n  // })\r\n\r\n  option = option.rectGrid({\r\n      colx: 'x',\r\n      coly: 'y',\r\n      value: 'v',\r\n      label: true\r\n  })\r\n\r\n  option = option.append_series(\r\n      json_array.echartsSeries.circle({\r\n          data: [2,2],\r\n          radius: 150\r\n      })\r\n    )\r\n\r\n  // option = option.rectGrid({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   label: true\r\n  // })\r\n  //\r\n  option.zoom({\r\n    scroll: true,\r\n    sliders : {\r\n      xAxis: true,\r\n      yAxis: true\r\n    }\r\n  })\r\n  // // option['xAxis'][0]['show'] = false\r\n  // // option['xAxis'][0]['min'] = function (value) { return value.min }\r\n  // // option['xAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['yAxis'][0]['min'] = function (value) { return  value.min - 1 }\r\n  // // option['yAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['xAxis']['max'] = 6\r\n  // // option['yAxis']['min'] = -1\r\n  // // option['yAxis']['max'] = 6\r\n  //\r\n  // option['dataZoom'] = [\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           xAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //       },\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           yAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //           // left: '93%',\r\n  //           // start: 0,\r\n  //           // end: 5\r\n  //       },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     xAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     yAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // }\r\n  //   ]\r\n\r\n  console.log( option )\r\n  return(\r\n    <div>\r\n      this is still custom\r\n      <json_array.react.echarts.Echarts\r\n        key='zoomslider'\r\n        option = {option}\r\n        />\r\n    </div>\r\n\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  return(\r\n    <json_array.react.echarts.RectGrid\r\n      colx = {'x'}\r\n      coly = {'y'}\r\n      value = {'v'}\r\n      label = {true}\r\n      />\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColorByScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      colorBy='CATEGORY2'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.label(r => r.CATEGORY2 === '71F00295B-07')\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      label='label'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nimport { Divider, Header } from 'semantic-ui-react'\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx: 'COUNT',\r\n    coly: 'id',\r\n  })\r\n\r\n  console.log( json_array )\r\n  option.tooltip.from_DataFrame(\r\n    data,\r\n    ['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']\r\n  )\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n\r\n      <Divider horizontal>Example 1</Divider>\r\n      <Header as='h4'>Tooltips are provided as a parameter</Header>\r\n      <json_array.react.echarts.Scatter\r\n        colx='COUNT'\r\n        coly='id'\r\n        tooltip = {['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']}\r\n        />\r\n\r\n      <Divider horizontal>Example 2</Divider>\r\n      <Header as='h4'>Tooltips are added to the option. This enables more customization</Header>\r\n      <json_array.react.echarts.Echarts\r\n        option ={option}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'Area/config.json', true)\r\nconfig = importConfig(config, 'Bar/config.json', false)\r\nconfig = importConfig(config, 'Boxplot/config.json', false)\r\nconfig = importConfig(config, 'Custom/config.json', false)\r\nconfig = importConfig(config, 'Format/config.json', false)\r\nconfig = importConfig(config, 'Heatmap/config.json', false)\r\nconfig = importConfig(config, 'Line/config.json', false)\r\nconfig = importConfig(config, 'RectGrid/config.json', false)\r\nconfig = importConfig(config, 'Scatter/config.json', false)\r\nconfig = importConfig(config, 'Selection/config.json', false)\r\nconfig = importConfig(config, 'Tooltips/config.json', false)\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  var groups = json_array.groupby(['CATEGORY1', 'CATEGORY2'])\r\n\r\n\r\n  console.log( groups )\r\n  return (\r\n    <groups.react.semanticUI.Table\r\n      tableName = {'AccordianTable'}\r\n      columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n\r\n      accordian={true}\r\n      accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n      accordianHeader = {true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filterable={true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  console.log( data )\r\n  const columnGroups = {\r\n    id: 'id',\r\n    category: ['CATEGORY1','CATEGORY2'],\r\n    data: ['COUNT','VALUE', 'image']\r\n  }\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'NoHeader'}\r\n      columnGroups={columnGroups}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'NoHeader'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      showHeader={false}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var JsonArray = new jsonArray( data )\r\n  JsonArray = JsonArray.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <JsonArray.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      sortable={true}\r\n      lazyLoading = {true}\r\n      lazyLoadingStart = {5}\r\n      lazyLoadingStep = {5}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRowCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      multirowSpan={['COUNT']}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRow'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const [filters, setFilters] = React.useState([])\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'ParentFilterCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filters = {filters}\r\n      columnFilterOnChange = { (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value !== '' ) temp.push( content )\r\n        setFilters( temp )\r\n      }}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ParentSortColumn( props ){\r\n\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columnOnClick={(content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }}\r\n      sortBy = {sortBy}\r\n      sortAscending = {sortAscending}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function CheckboxTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column( 'checkboxField', () => false )\r\n  json_array = json_array.astype({checkboxField: 'checkbox', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['checkboxField','COUNT','VALUE','id','CATEGORY1','CATEGORY2' ]}\r\n      sortable={true}\r\n      cellOnClick={{\r\n        checkboxField: (val) => {\r\n          alert('checkbox selected. see console for details')\r\n          console.log( 'cell was selected', val)\r\n      }}}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      alternateStyle= {true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'TableFormat'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      tdStyle={{padding:'2px 5px 2px 5px'}}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'Accordian/config.json', false)\r\nconfig = importConfig(config, 'Header/config.json', true)\r\nconfig = importConfig(config, 'LazyLoading/config.json', false)\r\nconfig = importConfig(config, 'MultiRow/config.json', false)\r\nconfig = importConfig(config, 'Style/config.json', false)\r\nconfig = importConfig(config, 'Filtering/config.json', false)\r\nconfig = importConfig(config, 'SpecialContent/config.json', false)\r\n","/**\n * JSON Array\n * ===============\n *\n * Extend the Array components to include various functions useful\n * for processing an array of JSON objects\n *\n * :Author: Nik Sumikawa\n * :Date: Feb 11, 2020\n */\n\n\nexport default class jsonArray extends Array{\n\n  constructor(array=[], inplace, dtypes) {\n\n    super()\n\n    // to avoid max recursion depth, we push each row separately\n    array.map( row => this.push(row))\n\n  }\n\n\n  // returns all columns in the jsonArray\n  get columns(){\n    var columns = []\n\n    var max_length = this.length\n    if( max_length > 50 ) max_length = 50\n\n    for( var i=0; i < max_length; i++ ){\n      columns = columns.concat(Object.keys(this[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  /**\n   * Replace the column names with those provided by the column array\n   * @param  {Array} columns array of column names\n   * @return {Array}         jsonArray with new column names\n   */\n  set columns( columns ){\n      const keys = this.columns\n\n      // define a mapping between the current and new column names\n      var mapping = {}\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\n        mapping[keys[i]] =columns[i]\n      }\n\n      // return a json array with the new mapping applied\n      return this.rename( mapping, {inplace: true} )\n  }\n\n  // resets the index value\n  reset_index(props={}){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(props['inplace'])\n\n    for( var i=0; i < array.length; i++ ){\n      array[i]['__index__'] = i\n    }\n    return array\n  }\n\n  // return all values for the specified column\n  values( col ){\n    return [...this].map(row => row[col])\n  }\n\n  /**\n   * Returns an array of index values\n   * @return {Array} Array of index values\n   */\n  get index(){\n    return [...this].map(row => row.__index__)\n  }\n\n\n\n  append( df ){\n    return new jsonArray([...this].concat(df))\n  }\n\n  /**\n   * Applies a given function to a column and returns a DataFrame\n   * with the results. The results can be written inplace or a nedw\n   * column created when specified as a parameter\n   * @param  {string} col     column name\n   * @param  {function} func  function to apply to the column\n   * @param  {string} newCol  when provided a new column is produced\n   * @return {[type]}      [description]\n   */\n  apply( col, func, newCol ){\n\n    if( newCol === undefined ) newCol = col\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][newCol] = func(this[i][col])\n    }\n\n    return this\n  }\n\n  /**\n   * cretes a new column by applying the provided function to each row\n   * @param  {string} col     name of the column to create\n   * @param  {function} func  function to apply to the column\n   */\n   create_column( col, func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][col] = func(this[i])\n    }\n\n    return this\n  }\n\n\n\n\n  /**\n   * overwrites the local index column with the provided column\n   * @param {String} col Column name\n   */\n  set_index( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < array.length; i ++ ){\n      array[i].__index__ = array[i][col]\n      delete array[i][col]\n    }\n\n    return array\n  }\n\n\n  // sorts the json array by the provided column\n  sort_values( col, ascending=true){\n\n    var array\n\n    //sort the table based on the ascending flag\n    if( ascending === true ){\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\n\n    }else{\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Merge two DataFrames together\n   * @param  {Array} json_array           DataFrame to be merged\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\n   * @param  {string} on                   index (col) to use for merging\n   * @return {Array}                      DataFrame containing the merged columns\n   */\n  merge( json_array, params={how:'left', on:'__index__'}  ){\n\n    var array = []\n    var df1, df2, index, a, b\n    // var primary_col, secondary_col, value\n\n    var col_left, col_right\n\n    // determine the columns to use for merging the left/right\n    // DataFrames based on the specified parameters\n    if( params.on !== undefined ){\n      col_left = params.on\n      col_right = params.on\n    }\n    if( params.on_right !== undefined ) col_right = params.on_right\n    if( params.on_left !== undefined ) col_left = params.on_left\n\n\n    // determine the merging criteria\n    switch( params.how ){\n      case 'left':\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n\n      case 'right':\n        df1 = [...json_array]\n        df2 = [...this]\n        // primary_col = col_right\n        // secondary_col = col_left\n        index = json_array.unique(col_right)\n        break;\n\n      // default to merge on left\n      default:\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n    }\n\n    // var lookup = {}\n    // for( a = 0; a < df2.length; a++ ){\n    //   value = df2[a][secondary_col]\n    //\n    //   const keys = Object.keys(lookup)\n    //   if( keys.includes(value) ){\n    //     lookup[value].push( df2[a] )\n    //   }else{\n    //     lookup[value] = [df2[a]]\n    //   }\n    // }\n    //\n    // // pull the rows corresponding to the provided index value\n    // for( var a=0; a < df1.length; a++ ){\n    //   value = df1[a][secondary_col]\n    //\n    //   const lookupVal = lookup[value ]\n    //\n    //   // merge rows with similar index values (intersection). Create\n    //   // multiple rows when duplicate index values are present\n    //   if( lookupVal.length > 0 ){\n    //     for( b=0; b < lookupVal.length; b++ ){\n    //       array.push({...lookupVal[b], ...df1[a]})\n    //     }\n    //   }\n    //\n    //   // add the rows that have no overlap\n    //   if( lookupVal.length === 0  ){\n    //     array.push(df1[a])\n    //   }\n    //\n    // }\n\n    // pull the rows corresponding to the provided index value\n    for( var i=0; i < index.length; i++ ){\n      const value = index[i]\n      const df1_rows = df1.filter(r => r[col_left] === value)\n      const df2_rows = df2.filter(r => r[col_right] === value)\n\n      // merge rows with similar index values (intersection). Create\n      // multiple rows when duplicate index values are present\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n          for( b=0; b < df2_rows.length; b++ ){\n            array.push({...df2_rows[b], ...df1_rows[a]})\n          }\n        }\n      }\n\n      // add the rows that have no overlap\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n            array.push(df1_rows[a])\n        }\n      }\n\n    }\n\n    return new jsonArray( array, true )\n\n  }\n\n  /**\n   * Replaces undefined data with a given value. The values\n   * can be assigned globally or by column\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\n   *                              Values can be assigne by column, by providing a value\n   *                              per colum in the parameter dictionary\n   * @return {Array}             DataFrame with missing values replaed\n   */\n  fillna( params={} ){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    var i, j, columns, col, val\n\n    // fill missing values with unique values per column\n    // This assumes that the input is an object with a\n    // value for each column name\n    if( typeof params === 'object'){\n      columns = Object.keys(params)\n\n      // nothing to do when no inputs are provided\n      if( columns.length === 0) return array\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          val = params[col]\n          if( array[i][col] === undefined ) array[i][col] = val\n          if( array[i][col] === null ) array[i][col] = val\n          // if( isNaN(array[i][col]) ) array[i][col] = val\n        }\n      }\n\n    }else{\n\n      // fill all missing values with the same value\n      columns = array.columns\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          if( array[i][col] === undefined ) array[i][col] = params\n          if( array[i][col] === null ) array[i][col] = params\n          // if( isNaN(array[i][col]) ) array[i][col] = params\n        }\n      }\n    }\n\n    return array\n  }\n\n\n\n\n  // filters the json array based on the column and the provided value.\n  // The value can be either a single variable or an array\n  filter_column( col, value ){\n\n    if( Array.isArray(value) ){\n      return new jsonArray(\n        [...this].filter(row => value.includes(row[col])),\n        false\n       )\n    }else{\n      return new jsonArray(\n        [...this].filter(row => row[col] === value ),\n        false\n      )\n    }\n  }\n\n\n  filter( func ){\n    return new jsonArray( [...this].filter(func), false )\n  }\n\n  map( func ){\n    return [...this].map(func)\n  }\n\n  groupby( col ){\n\n    return new jsonArray( this.__groupby__( this, col ), true )\n  }\n\n\n  __groupby__( json_obj, atts, keys ){\n\n    // append the keys with the json object\n    if( atts.length === 0 ){\n      keys['json_obj'] = new jsonArray(json_obj)\n      keys['count'] = json_obj.length\n      return keys\n    }\n\n    // initial conditions for keys\n    if( keys === undefined ){ keys = {} }\n\n    var results = []\n\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\n    const values = json_obj.unique(atts[0], true)\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      const group = json_obj.filter( row => row[atts[0]] === val )\n\n      // deep copy the keys and append with the current key\n      var temp_keys = Object.assign({}, keys)\n      temp_keys[atts[0]] = values[i]\n\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\n    }\n\n    return results\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  count_values( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var counts = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      if( !unique.includes(val) ){\n        unique.push(val)\n        counts[val] = 0\n      }\n      counts[val]++\n    }\n\n    // map the unique object count back to a flat object\n    var buffer = []\n    for( i=0; i < unique.length; i++ ){\n      const split_val = unique[i].split(',')\n\n      //\n      const obj = {count: counts[unique[i]]}\n      for( var j=0; j < split_val.length; j++ ){\n        obj[columns[j]] = split_val[j]\n      }\n\n      buffer.push( obj )\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  drop_duplicates( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var buffer = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      if( !unique.includes(values[i]) ){\n          unique.push( values[i] )\n          buffer.push( this[i] )\n      }\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n\n  pivot( columns ){\n\n    var pivot_table = []\n\n    if( columns === undefined ) columns = this.columns\n\n    for( var i=0; i < columns.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {column: columns[i]}\n\n      // add the column value for each row\n      for( var j=0; j < this.length; j++ ){\n        temp[j] = this[j][columns[i]]\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n  // converts a matrix into a flatten table (opposite of pivot table)\n  flatten( id_att = '__index__' ){\n\n    // extract a list of column names\n    const columns = this.columns\n\n    var table = []\n\n    for( var i=0; i < this.length; i++ ){\n      const row = this[i]\n\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n\n        // avoid a duplicate entry as the id attribute\n        if( col === id_att ) continue\n\n        table.push({\n          column: col,\n          row: row[id_att],\n          value:  row[col]\n        })\n      }\n    }\n\n    return new jsonArray( table, true )\n\n  }\n\n  // creates a pivot table based on the specified row and column.\n  // The summary type is used to compute the value of the pivot.\n  pivot_table( row, column, summaryType='count', value=undefined ){\n\n    var pivot_table = []\n\n    const row_val = this.unique( row )\n    const column_val = this.unique( column )\n\n\n    for( var i=0; i < row_val.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {row: row_val[i]}\n\n      const rval = row_val[i]\n      // const by_row = this.filter( r => r[row] === rval )\n      const by_row = [...this].filter( r => r[row] === rval )\n\n      // add the column value for each row\n      for( var j=0; j < column_val.length; j++ ){\n\n        const cval = column_val[j]\n        // const by_col = by_row.filter( r => r[column] === cval )\n        const by_col = [...by_row].filter( r => r[column] === cval )\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\n        // console.log( by_col )\n\n        var temp_json\n        switch( summaryType ){\n          // returns the number of rows for the current split\n          case 'count':\n            temp[column_val[j]] = by_col.length\n            break;\n\n          // returns the number of unique values for the current split\n          case 'unique':\n            // set defaults for missing parameter values\n            if( value === undefined ) value = '__index__'\n\n            temp_json = new jsonArray( by_col )\n            temp[column_val[j]] = temp_json.unique( value ).length\n            break;\n\n\n          default:\n            temp[column_val[j]] = by_col.length\n            break\n        }\n\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n\n  /**\n   * Creates a new column by merging the content from the columns\n   * specified in the columns attribute\n   * @param  {array} columns  array of column names\n   * @param  {String} col_name Name of the resulting column\n   * @param  {String} [sep='   ']            string delimiter\n   * @return {OBJECT}          jsonArray with the new column\n   */\n  combine( columns, col_name, sep=' ', params={} ){\n\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < this.length; i++ ){\n      // seed the value with the value from the first column\n      var temp = this[i][columns[0]]\n\n      for( var j=1; j < columns.length; j++ ){\n        temp = temp + sep + this[i][columns[j]]\n      }\n\n      array[i][col_name] = temp\n    }\n\n    array.dtypes[col_name] = 'string'\n    return array\n  }\n\n  combine_columns( col1, col2, col_name, sep=' ' ){\n    // creates a new column by merging the content of col 1 and 2 to\n    // form a new column\n    return this.combine([col1, col2], col_name, sep )\n  }\n\n\n  unique( col, ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    var unique_values = [...new Set([...this].map(row => row[col] ))]\n\n\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        switch( typeof unique_values[0] ){\n          case \"string\":\n            return unique_values.sort()\n\n          case \"boolean\":\n            return unique_values.sort()\n\n          default :\n            try{\n              unique_values = unique_values.map( x => +x)\n              unique_values = unique_values.sort(function(a,b){return a - b})\n            }catch{\n              // default to the standard sort\n              unique_values.sort()\n            }\n        }\n\n    }\n\n    return unique_values\n  }\n\n\n\n\n  /**\n   * Applies a threshold to the specified column\n   * @param  {function} func     function used to partition dataset\n   * @param  {string} res_col   column name containing the results\n   * @return {Array}            jsonArray containing res_col\n   */\n  label( func, params={} ){\n\n    const param_keys = Object.keys(params)\n\n    // set defaults for missing parameter values\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\n    if( !param_keys.includes('value') ) params['value'] = true\n    if( !param_keys.includes('default') ) params['default'] = false\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\n\n    var array = this.__inplace__(params['inplace'])\n\n\n    // identify all samples identified by the rule\n    const sample_index = array.filter( func ).map( row => row.__index__ )\n\n    // create a boolean label, where parts in the sample set are true\n    for( var i=0; i < array.length; i ++ ){\n\n      // extract a list of columns name for the given row\n      const columns = Object.keys( array[i] )\n\n      // the value is true when it is included in the sample set\n      if( sample_index.includes( array[i].__index__ ) ){\n        array[i][params['output_col']] = params['value']\n        continue\n      }\n\n      // set the default value when no value exists\n      if( !columns.includes(params['output_col']) ){\n        array[i][params['output_col']] = params['default']\n        continue\n      }\n\n    }\n\n    return array\n  }\n\n  /**\n   * Copies the content from one column to a new column. This is\n   * non destructive, so if the column already exists, only the\n   * missing data will be copied over\n   * @param  {String} col     original column name\n   * @param  {String} new_col new column name\n   * @return {Object}         jsonArray with the new column added\n   */\n  copy_column( col, new_col, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      if(!columns.includes( new_col) ){\n        array[i][new_col] = array[i][col]\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * Returns a DataFrame containing only the specified column\n   * and the index\n   * @param  {array} columns array of column names\n   * @return {array}         json array containing the specified columns\n   */\n  select_columns( columns ){\n\n    var array = []\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < this.length; i++ ){\n\n      var row = {__index__: this[i].__index__}\n      // copy the specified columns for each row\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n        row[col] = this[i][col]\n      }\n\n      array.push( row )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Drops columns from the DataFrame\n   * @param  {String or Array} columns String or Array of column names\n   * @return {OBJECT}         JsonArray without the specified columns\n   */\n  drop_columns( columns, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n\n      // delete the specified column when of string type\n      if( typeof columns === 'string' ){\n        delete array[columns]\n\n      // when a list is provided, delete all columns in the string\n      }else{\n\n        for( var j=0; j < columns.length; j++ ){\n          delete array[i][columns[j]]\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * renames columns\n   * @param  {object} mapping object containing the existing column name and new column name\n   * @return {object}         json array with the new column naming\n   */\n  rename( mapping, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const columns = Object.keys( mapping )\n\n    // rename the specified columns\n    for( var i = 0; i < array.length; i++ ){\n\n      const ex_columns = Object.keys( array[i] )\n\n      // create a new column based on the mapping and delete\n      // the existing one (taht was replaced)\n      for( var j=0; j < columns.length; j++ ){\n        // only replace the column when data exists for that column\n        if( ex_columns.includes(columns[j]) ){\n          const new_col = mapping[columns[j]]\n          array[i][new_col] = array[i][columns[j]]\n\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\n          delete array[i][columns[j]]\n\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * replaces the values in the specified column with the given value\n   * based on the mapping\n   * @param  {String} col     original column name\n   * @param  {Object} mapping Object containing the value mapping\n   * @return {Object}         jsonArray with the new column added\n   */\n  replace( col, mapping={}, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const values = Object.keys( mapping )\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      // do not perform mapping when no data nor the mapping exists\n      if(!columns.includes(col) ) continue\n      if(!values.includes(array[i][col])) continue\n\n      array[i][col] = mapping[array[i][col]]\n\n    }\n\n    return new jsonArray( array )\n  }\n\n\n\n  /**\n   * returns the data object. When enable is true, the original\n   * jsonArray is returned so the values are modified directly. Otherwise\n   * the jsonArray is cloned to avoid mutation of the original object\n   *\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\n   * @return {Object}             current jsonArray content\n   */\n  __inplace__( enable=false ){\n\n    // clone the local copy to avoid mutation when inplace is disabled\n    if( enable ) return this\n\n    return new jsonArray( this )\n  }\n\n\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Grid, Segment, Menu, Button, Container} from 'semantic-ui-react'\n\nimport jsonArray from './components/jsonArray'\nimport Example from './components/Example'\nimport Sidebar from './components/Sidebar'\nimport getConfig from './config'\n\n// wraps the fixed code documentation framework in the\n// grid structure to provide one line per example\nexport default function Examples( props ){\n\n  const [category, setCategory] = useState()\n  const [subcategory, setSubCategory] = useState()\n  const [docType, setDocType] = useState('table')\n\n  var config = props.config\n  if( config === undefined ){\n    config = getConfig(docType)\n  }\n\n\n  config = new jsonArray(config)\n\n  // set default based on indev flag\n  const temp = config.filter(r => r.indev === true)\n\n  if( temp.length > 0 ){\n    // sort the configuration so the indev example is at the top\n    config = config.fillna({indev: false})\n    config = config.sort_values('indev', false)\n\n\n    if( category === undefined) {\n      setCategory( temp[0].category )\n      setSubCategory( temp[0].subcategory )\n    }\n  }\n\n\n  return (\n\n    <Segment inverted style={{height: '100vh'}}>\n      <Navbar callback={setDocType} docType={docType}/>\n\n      <Segment style={{margin:'0 20px 0 20px'}}>\n\n        <Grid columns={2}>\n           <Grid.Column\n             style={{maxWidth:'250px'}}>\n            <Sidebar\n              config={config}\n              category={category}\n              setCategory={setCategory}\n              setSubCategory={setSubCategory}\n              />\n           </Grid.Column>\n\n          <Grid.Column stretched style={{width:'calc(100% - 250px)'}}>\n             <PageContent\n               {...props}\n               category={category}\n               subcategory={subcategory}\n               config={config}\n               />\n           </Grid.Column>\n         </Grid>\n\n       </Segment>\n   </Segment>\n  )\n}\n\n\n\n\nfunction PageContent( props ){\n\n  // select all examples belonging to a single category\n  var examples = props.config.filter(r => r.category === props.category )\n\n  if( props.subcategory !== undefined ){\n    examples = examples.filter(r => r.subcategory === props.subcategory )\n  }\n\n\n\n  // create an array of example components\n  var exampleComponents = []\n  for( var i=0; i < examples.length; i++ ){\n\n    const title = examples[i].title\n\n    exampleComponents.push(\n      <Segment\n        key={`Example-${title}`}\n        vertical>\n        <Example\n          {...props}\n          jsxDir='examples'\n          docDir='doc'\n          example={ examples[i]}\n          />\n      </Segment>\n    )\n  }\n\n\n  return(\n    <div>\n      {exampleComponents}\n    </div>\n  )\n}\n\n\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nfunction Navbar(props){\n\n  var callback = (value) => console.log( 'selected', value)\n  if( props.callback !== undefined ) callback = (value) => props.callback(value)\n\n  return (\n\n      <Menu size='large' inverted>\n        <Container>\n          <Menu.Item as='a'\n            active={props.docType==='chart'}\n            onClick = {() => {\n              callback('chart')\n            }}>\n            Charts\n          </Menu.Item>\n          <Menu.Item as='a'\n            active={props.docType==='table'}\n            onClick = {(value) => {\n              callback('table')\n            }}>\n            Table\n          </Menu.Item>\n        </Container>\n      </Menu>\n\n  )\n  // <Menu.Item position='right'>\n  //   <Button as='a' inverted={!fixed}>\n  //     Log in\n  //   </Button>\n  //   <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n  //     Sign Up\n  //   </Button>\n  // </Menu.Item>\n\n}\n","/**\r\n * Extract\r\n * ===================\r\n *\r\n * Routines for extracting data to the local desktop\r\n * in various formats\r\n *\r\n * @author Nik Sumikawa\r\n * @date Oct 7, 2020\r\n */\r\n\r\nconst Papa = require(\"papaparse\")\r\n\r\n\r\n/**\r\n * Pushes the data into a downloadable location\r\n * and posts the interface to enable downlaodign\r\n * @param  {Blob}   data       Blob containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nfunction browserInterface( data, filename ){\r\n\r\n  var url = window.URL.createObjectURL(data);\r\n\r\n  var link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', filename);\r\n\r\n  document.body.appendChild(link);\r\n\r\n  link.click();\r\n\r\n  // Clean up and remove the link\r\n  link.parentNode.removeChild(link);\r\n}\r\n\r\n/**\r\n * Formats the data as a csv file and push it into a dowloadble location\r\n * @param  {Array}   data     DataFrame containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nexport default function toCsv( data, filename='file.csv' ){\r\n\r\n  var csv = Papa.unparse(data, {\r\n    header: true,\r\n    columns:data.columns\r\n  });\r\n\r\n  var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\r\n\r\n  browserInterface( csvData, filename )\r\n}\r\n","/**\r\n * Components\r\n * ==============\r\n *\r\n * standard html components are wrapped in order to provide\r\n * the ability to leverage an existing framework when specified.\r\n * Defaults to using the standard html components\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 25, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nexport function Button(props){\r\n  return wrapper( props, 'button' )\r\n}\r\n\r\nexport function Input(props){\r\n  return wrapper( props, 'input' )\r\n}\r\n\r\nexport function Image(props){\r\n  return wrapper( props, 'img' )\r\n}\r\n\r\nexport function Table(props){\r\n  return wrapper( props, 'table' )\r\n}\r\n\r\nexport function Cell(props){\r\n  return wrapper( props, 'td' )\r\n}\r\n\r\nexport function Header(props){\r\n  return wrapper( props, 'thead' )\r\n}\r\n\r\nexport function HeaderCell(props){\r\n  return wrapper( props, 'th' )\r\n}\r\n\r\nexport function Row(props){\r\n  return wrapper( props, 'tr' )\r\n}\r\n\r\nexport function Body(props){\r\n  return wrapper( props, 'body' )\r\n}\r\n\r\nexport function Icon(props){\r\n  return wrapper( props, 'icon' )\r\n}\r\n\r\nexport function Checkbox(props){\r\n  return wrapper( props, 'checkbox' )\r\n}\r\n\r\nfunction wrapper( props, type ){\r\n\r\n  if( props.component === undefined ){\r\n    switch( type ){\r\n      case 'button':\r\n        return <button {...props}>{props.defaultValue}</button>\r\n\r\n      case 'input':\r\n        return <input {...props}>{props.defaultValue}</input>\r\n\r\n      case 'checkbox':\r\n        return <input {...props} type=\"checkbox\" >{props.defaultValue}</input>\r\n\r\n      case 'img':\r\n        return <img\r\n          src={props.defaultValue}\r\n          alt=''\r\n          {...props} />\r\n\r\n      case 'table':\r\n        return <table {...props}>{props.defaultValue}</table>\r\n\r\n      case 'td':\r\n        return <td {...props}>{props.defaultValue}</td>\r\n\r\n      case 'tr':\r\n        return <tr {...props}>{props.defaultValue}</tr>\r\n\r\n      case 'th':\r\n        return <th {...props}>{props.defaultValue}</th>\r\n\r\n      case 'body':\r\n        return <tbody {...props}>{props.defaultValue}</tbody>\r\n\r\n      case 'thead':\r\n        return <thead {...props}>{props.defaultValue}</thead>\r\n\r\n      case 'icon':\r\n        return <i {...props}>{props.defaultValue}</i>\r\n\r\n      default:\r\n        console.log( 'default type', type)\r\n        return <div {...props}>{props.defaultValue}</div>\r\n\r\n\r\n    }\r\n  }\r\n\r\n  return(\r\n    <props.component\r\n      {...props}\r\n      component={undefined}\r\n      >\r\n      {props.defaultValue}\r\n    </props.component>\r\n  )\r\n}\r\n","import React from 'react';\n\n\n\nexport default function SimpleTable( props ){\n\n  return (\n    <div>\n      This is a very basic example to show how this works\n    </div>\n  )\n\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment} from 'semantic-ui-react'\n\nimport Controls from './Header'\nimport CodeRender from './CodeRender'\n\n\n\nexport default function Example( props ){\n\n  const [showCode, setShowCode] = useState(false)\n\n  var Component\n\n  var dir = props.jsxDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  try{\n    Component = require(`Documentation/${dir}/${props.example.path}`).default\n  }catch{\n    Component = NullComponent\n  }\n\n  console.log( 'what are the components', Component)\n\n  return(\n    <Segment.Group>\n      <Segment>\n        <Controls\n          title = {props.example.title}\n          description = {props.example.description}\n          onClick={() => setShowCode(!showCode)}\n          />\n      </Segment>\n\n      <Segment style={{width:'100%'}}>\n        <Component {...props}/>\n      </Segment>\n\n      <CodeRender\n        {...props}\n        visible = {showCode}\n        />\n\n    </Segment.Group>\n  )\n}\n\nfunction NullComponent(props){ return null }\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport datetime from './data_types/datetime';\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\nexport default class jsonObject extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    const keys = Object.keys(data)\r\n\r\n    // copy over the content from the input data\r\n    for( var index in keys ){\r\n      const key = keys[index]\r\n      this[key] = data[key]\r\n    }\r\n\r\n  }\r\n\r\n  // TODO: search for all columns in the Array\r\n  get columns(){ return Object.keys(this) }\r\n  get keys(){ return Object.keys(this) }\r\n\r\n  // converts the specified key to a datetime attribute\r\n  strptime( key ){\r\n\r\n    if( !(this[key] instanceof datetime) ){\r\n      this[key] = datetime(this[key])\r\n    }\r\n    return this\r\n  }\r\n\r\n\r\n  // convert the json Object to a two dimensional json array\r\n  to_jsonArray( key_name, value_name ){\r\n\r\n    var array = []\r\n    const keys = this.columns\r\n\r\n    // set defaults for the key and value attributes\r\n    if( key_name === undefined ) key_name = 'key'\r\n    if( value_name === undefined ) value_name = 'value'\r\n\r\n    // convert the json object into a json array\r\n    for( var i=0; i < keys.length; i++ ){\r\n      array.push( {\r\n        [key_name]: keys[i],\r\n        [value_name]: this.json_object[keys[i]]\r\n      })\r\n    }\r\n\r\n    return new jsonArray(array)\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Array To String\r\n * ====================\r\n *\r\n * Converts jsonArray to an array of strings\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class arrayToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    // whitespace for each tab and the tabs between each column\r\n    this.tab_count = 1\r\n    this.tab_space = 4\r\n\r\n    this.max_width = 20\r\n\r\n    this.columns = undefined\r\n\r\n  }\r\n\r\n\r\n    // returns the length of the contents\r\n    col_width( value ){\r\n\r\n      return value.length\r\n    }\r\n\r\n\r\n\r\n    // determines the maximum width between columns\r\n    col_spacing( json_array ){\r\n\r\n      var max_length = {}\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      // determine the maximum string lenght of each column\r\n      for( var i=0; i < this.columns.length; i++ ){\r\n\r\n        var col = this.columns[i]\r\n\r\n        // determine the length of the column name string\r\n        max_length[col] = this.col_width(this.columns[i])\r\n\r\n        // cap the length of the column name length. We can skip\r\n        // processing because we are already at the max width\r\n        if( max_length[col] > this.max_width ){\r\n          max_length[col] = this.max_width\r\n          continue\r\n        }\r\n\r\n\r\n        // determine the maximum string length of the column\r\n        for( var j=0; j < json_array.length; j++ ){\r\n\r\n          // do not consider non-existing values\r\n          if( !Object.keys(json_array[j]).includes(col) ) continue\r\n\r\n          const value = value_to_string.toString(\r\n            json_array[j][col],\r\n            json_array.dtypes[col]\r\n          )\r\n\r\n          if( value.length > max_length[col] ){\r\n            max_length[col] = value.length\r\n          }\r\n\r\n          // We can skip processing because we are already at the max width\r\n          if( max_length[col] > this.max_width ) break\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return max_length\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns a list of column names in order with the proper\r\n     * whitespace added for logging\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of column names with the appropriate whitespace\r\n     */\r\n    format_columns( spacing ){\r\n\r\n      var row_array = []\r\n\r\n      // add each column name with the appropriate white space added\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        const whitespace = spacing[col] - col.length\r\n        row_array.push( new Array(whitespace + 1).join(' ') + col )\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a formatted string of the formatted cell for each row\r\n     * @param  {Array}  row     Object containing the values for each row\r\n     * @param  {Object} dtypes  Object containing the maximum length for each column\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of values with the appropriate whitespace\r\n     */\r\n    format_row( row, dtypes, spacing ){\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      var row_array = []\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        var value = row[col]\r\n\r\n        var whitespace\r\n        if( value === undefined ){\r\n          value = 'nan'\r\n          whitespace = spacing[col] - 3\r\n        } else {\r\n\r\n          value = value_to_string.toString( value, dtypes[col] )\r\n          whitespace = spacing[col] - value.length\r\n        }\r\n\r\n        try{\r\n          row_array.push( new Array(whitespace + 1).join(' ') + value )\r\n        }catch{row_array.push(value)}\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts the array of strings int a single array where\r\n     * each column is separated by whitespace based on the\r\n     * local white space definition\r\n     * @param  {Array} array  Array of strings\r\n     * @return {String}       String containing each array element with the desired whitespace\r\n     */\r\n    format_array( array ){\r\n      return new Array(...array).join(new Array(this.tab_space * this.tab_count).join(' '))\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a matrix of strings that have been formated based on the data\r\n     * type of each column\r\n     * @param  {Array} array  jsonArray containing the matrix to convert\r\n     * @return {String}        Matrix of strings formatted based on the column data type\r\n     */\r\n    toString( array ){\r\n\r\n      // force the input array into a json array type\r\n      var json_array = array\r\n      if(!(json_array instanceof(jsonArray))){\r\n        json_array = new jsonArray(array)\r\n      }\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      const spacing = this.col_spacing( json_array )\r\n\r\n      // seed the formatted array with the column names\r\n      var formatted = this.format_array( this.format_columns(spacing) ) + '\\r\\n'\r\n\r\n      // format the data from each row\r\n      for( var i=0; i < json_array.length; i++ ){\r\n        formatted = formatted.concat(\r\n          this.format_array( this.format_row(json_array[i], json_array.dtypes, spacing) ) + '\\r\\n'\r\n        )\r\n      }\r\n\r\n      return formatted\r\n\r\n    }\r\n\r\n\r\n    toConsole( array ){\r\n\r\n      const jsonArray_str = this.toString( array )\r\n      console.log( jsonArray_str )\r\n    }\r\n}\r\n","/**\r\n * Format\r\n * =============\r\n * Routines to convert the jsonArray into a string for visualization\r\n * purposes\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n */\r\n\r\n\r\nimport arrayToString from './arrayToString'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class strFormat{\r\n\r\n  constructor( data ){\r\n    this.data = data\r\n  }\r\n\r\n\r\n  /**\r\n   * returns a string containing the jsonArray contents\r\n   * where each column is formated based on the local data\r\n   * types\r\n   * @return {String} Formatted string containing the jsonArray contents\r\n   */\r\n  get table(){\r\n    const format = new arrayToString()\r\n    return format.toString( this.data )\r\n  }\r\n\r\n  row( index ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  column( col ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  /**\r\n   * Returns the formatted data for the specified cell\r\n   * @param  {int} row row number\r\n   * @param  {String} col column name\r\n   * @return {String}     formatted string representing the string value\r\n   */\r\n  value( row, col ){\r\n    const format = new valueToString()\r\n    return format.toString(\r\n      this.data[row][col],\r\n      this.data.dtypes[col]\r\n    )\r\n  }\r\n\r\n}\r\n","/**\r\n * Echarts Tooltip formatter\r\n * =========================\r\n *\r\n * Attempt to standardize the tooltip format\r\n * to show data from the top 5 columns or those\r\n * specified by the user\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Sept 29, 2020\r\n */\r\n\r\n\r\nexport default class echartsTooltip extends Object {\r\n\r\n  constructor() {\r\n    super()\r\n    // super(...array)\r\n\r\n    // as a default, set the tooltip to trigger when\r\n    // hovering over an item\r\n    this.show = true\r\n    this.trigger = 'item'\r\n    // this.showContent = false\r\n  }\r\n\r\n\r\n  /**\r\n   * Formats the tooltip using data taken from the\r\n   * selected sample. When a list of columns are provided,\r\n   * they are used render the tooltip information\r\n   * @param  {object} json_array   array of json objects\r\n   * @param  {Array}  [columns=[]] array fo column names\r\n   * @return {none}              The tooltip format is stored locally\r\n   */\r\n  from_DataFrame( json_array, columns=[] ){\r\n\r\n    if( columns.length === 0 ){\r\n      columns = json_array.columns.splice(1,5)\r\n    }\r\n\r\n    columns = columns.concat(['__index__'])\r\n    this.formatter = (props) => {\r\n      // the dataframe index was pushed into the plot data in addition to the\r\n      // data used for plotting. This was used to locate the part by index\r\n      // number after splitting it for visualization purposes\r\n      const index = props.data[2]\r\n      if( index === undefined ) return ''\r\n\r\n      var sample = json_array.filter(r => r.__index__ === index)\r\n      if( sample.length === 0) return ''\r\n\r\n      // select the only sample that should reside at the index\r\n      sample = sample[0]\r\n\r\n      // format a string based on the DataFrame contents\r\n      var string = ''\r\n      for (var i=0; i < columns.length; i++ ){\r\n         // [key, value] of Object.entries(json_array[index])) {\r\n        const col = columns[i]\r\n        if( col === '__index__' ) continue\r\n        string = string + `<b>${col}</b>: ${sample[col]}<br/>`;\r\n      }\r\n\r\n      return string\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","/**\r\n * Echarts Axis formatter\r\n * =========================\r\n *\r\n * Routines to automatically change the axis format based on\r\n * specifications. The purpose is to limit axis configuration\r\n * to simplify the plotting process. At the same time, It is\r\n * possible to extend the axis parameters as desired.\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 22, 2020\r\n */\r\n\r\nimport moment from 'moment'\r\n\r\nexport default class echartsAxis extends Object {\r\n\r\n  constructor( col='', json_array=[] ) {\r\n    super()\r\n\r\n    this.axis = col\r\n    this.name = col\r\n    // super(...array)\r\n    //\r\n    this.initialize( json_array, col )\r\n  }\r\n\r\n  // default axis parameters\r\n  default(){\r\n    this.type = 'value'\r\n    this.scale = true\r\n  }\r\n\r\n  /**\r\n   * Initializes the axis based on the data type. this\r\n   * attempts to define the axis automatically. It's\r\n   * possible to overwrite this for custom plotting\r\n   * @param  {Array} json_array  jsonArray\r\n   * @param  {String} col       Column name\r\n   * @return {null}             nothing is returned\r\n   */\r\n  initialize( json_array, col ){\r\n\r\n    if( json_array === undefined ) return null\r\n    if( json_array.length === 0 ) return null\r\n    if( col === undefined ) return null\r\n    if( col === '' ) return null\r\n\r\n    // set the axis label\r\n    this.name = col\r\n\r\n    switch( json_array.dtypes[col] ){\r\n      case 'string' :\r\n        this.type = 'category'\r\n        this.data = json_array.unique(col)\r\n        break\r\n\r\n      // format date columns\r\n      case 'datetime':\r\n      case 'strftime':\r\n        this.type = 'time'\r\n        this.axisLabel = {\r\n          formatter: (function(value){\r\n            return moment(value).format('YYYY-MM-DD')\r\n          })\r\n        }\r\n        break;\r\n\r\n      default:\r\n        this.type = 'value'\r\n        this.scale = true\r\n    }\r\n  }\r\n\r\n\r\n  hide(){ this.show = false }\r\n\r\n  minValue(value){\r\n    this.min = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.min\r\n    }\r\n  }\r\n\r\n  maxValue(value){\r\n    this.max = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.max\r\n    }\r\n  }\r\n\r\n  rotate(){\r\n    this.axisLabel = {\r\n      ...this.axisLabel,\r\n      ...{ rotate: 90 }\r\n    }\r\n  }\r\n\r\n  label( label ){\r\n    if( label !== undefined ){\r\n      this.name = label\r\n    }\r\n  }\r\n\r\n  tick_values( values ){\r\n    if( values !== undefined ){\r\n      this.type = 'category'\r\n      this.data = values\r\n    }\r\n  }\r\n\r\n  // // process the parameters object to configure the plot axis\r\n  // process_params( params ){\r\n  //\r\n  //   // add the label to the axis configuration\r\n  //   this.label( params.label )\r\n  //\r\n  //   switch( params.type ){\r\n  //     case 'category':\r\n  //       this.tick_values( [...new Set(params.values)] )\r\n  //       break;\r\n  //\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n  // formats the axis to display categories\r\n  to_category( params={} ){\r\n    this.type = 'category'\r\n    this.data = [...new Set(params.values)]\r\n\r\n    // this.splitArea ={\r\n    //     show: true\r\n    // }\r\n  }\r\n\r\n  // formats the axis to display values\r\n  to_value( params={} ){\r\n    this.type = 'value'\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  to_date( params={} ){\r\n\r\n    var strftime = 'MM-DD'\r\n    if( params.strftime !== undefined ) strftime = params.strftime\r\n\r\n    this.type = 'time'\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return moment(value).format(strftime)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  scientific(units=2){\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return value.toExponential(units)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  dynamic_range( json_array ){\r\n    const min = json_array.min( this.name )\r\n    const max = json_array.max( this.name )\r\n    const padding = (max - min) * 0.05\r\n\r\n    console.log( min, max, padding)\r\n    this.min = (min - padding).toFixed(3)\r\n    this.max = (max + padding).toFixed(3)\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport default function Axline( value, props={} ){\r\n\r\n  var val = value\r\n  if( val/Math.pow(10,4-1) > 1 ) val = val.toExponential(3)\r\n\r\n  var label = val\r\n  if( props.label !== undefined) label = props.label\r\n\r\n  var color = 'red'\r\n  if( props.color !== undefined ) color = props.color\r\n\r\n  var line = {\r\n    name: 'limit',\r\n    type: 'line',\r\n    color: color,\r\n    markLine: {\r\n        symbol: \"none\",\r\n        data: [{\r\n          tooltip: {show:false},\r\n          // name: val,\r\n          label: {\r\n            formatter: label,\r\n            position: 'end'\r\n          }\r\n        }]\r\n    }\r\n  }\r\n\r\n  if( props.axis === 'yAxis' ){\r\n    line.markLine.data[0]['yAxis'] = value\r\n  }else{\r\n    line.markLine.data[0]['xAxis'] = value\r\n  }\r\n\r\n  return line\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function line( json_array, props={} ){\r\n\r\n  const line = require('../../series/line').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = line( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\n// returns a rolling average line where the average is\r\n// computed based on the center of the window\r\nexport default function CenterWindow(data, window){\r\n\r\n\r\n  var midStart = Math.floor(window/2) + 1\r\n  var midEnd = data.length - Math.floor(window/2) - 1\r\n\r\n  return [\r\n    {\r\n      type: 'line',\r\n      data: data.slice(0,midStart),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(midStart-1).concat(data.slice(midStart-1, midEnd+1)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#000000',\r\n          width: 2,\r\n          type: 'dashed'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(midEnd).concat(data.slice(midEnd, data.length)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    }\r\n  ]\r\n\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../../propsToSeries'\r\nimport CenterWindow from './CenterWindow'\r\nimport TailingWindow from './TailingWindow'\r\n\r\n// returns the\r\nexport default function rollingAvg( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  // define the average type\r\n  var avgType = props.avgType\r\n  if( avgType === undefined  ) avgType = 'center'\r\n\r\n\r\n  if( !json_array.columns.includes(`${props.coly}_avg`) ){\r\n    json_array = json_array.rolling_average(\r\n      props.coly,\r\n      props.window,\r\n      avgType\r\n    )\r\n  }\r\n\r\n  const data = json_array.map(r => r[`${props.coly}_avg`])\r\n\r\n  var Series = []\r\n  switch( avgType ){\r\n    case 'center':\r\n      Series = CenterWindow(data, props.window)\r\n      break\r\n\r\n    case 'tailing':\r\n      Series = TailingWindow(data, props.window)\r\n      break\r\n\r\n    default:\r\n      Series = CenterWindow(data, props.window)\r\n\r\n  }\r\n\r\n\r\n  for( let i=0; i < Series.length; i++ ){\r\n    Series[i] = propsToSeries(props, Series[i])\r\n  }\r\n\r\n  return Series\r\n\r\n}\r\n","// returns the rolling average line plot where the average\r\n// is computed across the previous n samples\r\nexport default function TailingWindow(data, window){\r\n\r\n  return [\r\n    {\r\n      type: 'line',\r\n      data: data.slice(0,window),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(window-1).concat(data.slice(window-1, data.length)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#000000',\r\n          width: 2,\r\n          type: 'dashed'\r\n      },\r\n    },\r\n  ]\r\n\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\nimport Line from '../../series/line/rollingAvg'\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function rollingAvg( json_array, props={} ){\r\n\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = Line( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a boxplot plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function boxplot( json_array, props={} ){\r\n\r\n  const boxplot = require('../../series/boxplot').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'boxplot required att : colx and coly' )\r\n  }\r\n\r\n  const keys = json_array.unique( props.colx, true )\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({ values: keys })\r\n  xAxis.axisLabel = { formatter: '{value}' }\r\n  // xAxis.boundaryGap = true\r\n  // xAxis.nameGap = 30\r\n  // xAxis.splitLine = {show: false }\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_value()\r\n  yAxis.dynamic_range(json_array)\r\n  // yAxis.splitArea = {show: true}\r\n\r\n\r\n  var series = boxplot( {...props, ...{json_array: json_array}} )\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // series = echart_series.boxplot(props.colx, props.coly, props )\r\n\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function heatmap( json_array, props={} ){\r\n\r\n  // returns an object for generating a heatmap, similar to\r\n  // the calendar example but with data from a jsonArray\r\n  // example: https://echarts.apache.org/examples/en/editor.html?c=calendar-heatmap\r\n\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n  // force the datatypes of the columns to strings due to the categorical nature of the heatmap\r\n  json_array = json_array.astype({\r\n    [props.colx]: 'string',\r\n    [props.coly]: 'string',\r\n  })\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({values: json_array.unique(props.colx, true) })\r\n  xAxis.label( props.colx )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_category({ values: json_array.unique(props.coly, true) })\r\n  xAxis.label( props.coly )\r\n\r\n\r\n  var grid = {backgroundColor: 'rgb(0, 128, 0)'}\r\n\r\n  // set the percentage flag based on the datatype or parameter\r\n  var percentage = false\r\n  if( (json_array.dtypes[props.value] === 'percentage') | (props.percentage === true)){\r\n    percentage = true\r\n  }\r\n\r\n  var min = Math.min(...json_array.unique(props.value))\r\n  var max = Math.max(...json_array.unique(props.value))\r\n\r\n  var visualMap = {\r\n      min: (percentage === true) ? min * 100 : min,\r\n      max: (percentage === true) ? max * 100 : max,\r\n      calculable: true,\r\n      orient: 'vertical',\r\n      left: 'left',\r\n      bottom: '10%',\r\n      inRange: {\r\n        color: ['green', 'yellow','orange', 'red']\r\n      }\r\n  }\r\n\r\n  var series = [{\r\n      type: 'heatmap',\r\n      data: json_array.map(function (item) {\r\n\r\n        var value = Number(item[props.value])\r\n        if( percentage === true ) value = (Number(item[props.value])*100).toFixed(2)\r\n\r\n          return [\r\n            item[props.colx],\r\n            item[props.coly],\r\n            value\r\n          ]\r\n        }),\r\n      label: {\r\n          show: true\r\n      },\r\n  }]\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n    grid: grid,\r\n    visualMap: visualMap\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function scatter( json_array, props={} ){\r\n\r\n  const scatter = require('../../series/scatter').default\r\n  const scatter_by = require('../../series/scatter/scatterBy').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : colx and coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx, json_array )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n\r\n\r\n  var series\r\n\r\n  if( (props.colorBy !== undefined)&(json_array.columns.includes(props.colorBy)) ){\r\n\r\n    series = scatter_by({\r\n      ...props,\r\n      ...{\r\n          json_array: json_array,\r\n          colorBy: props.colorBy\r\n        }\r\n    })\r\n\r\n  }else{\r\n    series = scatter({\r\n      ...props,\r\n      ...{json_array: json_array}\r\n    })\r\n\r\n  }\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function bar( json_array, props={} ){\r\n\r\n  const bar = require('../../series/bar').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'bar plot required att : colx and coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.label(props.colx)\r\n  xAxis.tick_values(json_array.values(props.colx))\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // var series = echart_series.bar( props.coly, props)\r\n\r\n  var series = bar( {\r\n    ...props,\r\n    ...{\r\n      json_array: json_array,\r\n      col: props.coly\r\n    }} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n  }\r\n\r\n}\r\n","\r\nimport bar from './bar'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function Pareto( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined) ){\r\n    alert( 'pareto plot required att : col ')\r\n  }\r\n\r\n  var data = json_array.filter(r => r[props.col] !== '')\r\n  var pareto = data.groupby([props.col])\r\n\r\n\r\n\r\n  var att = 'count'\r\n  if( props.ratio === true ) att = 'ratio'\r\n\r\n  pareto = pareto.sort_values('count', false)\r\n\r\n  const total = pareto.sum('count')\r\n  var cumsum = 0\r\n\r\n  // creat the cumsum and hold ratio\r\n  pareto = pareto.row_apply(r => {\r\n      cumsum = cumsum + r.count\r\n      r['cumsum'] = cumsum/total\r\n      r['ratio'] = r.count/total\r\n\r\n      return r\r\n  })\r\n\r\n  // generate the bar chart for the pareto \r\n  var option = bar(pareto, {colx: props.col, coly: att})\r\n\r\n  // add a lineplot for the cusum when specified\r\n  if( props.cumsum === true ){\r\n    option.series = option.series.concat(\r\n      pareto.echartsSeries.line({\r\n        colx: props.col,\r\n        coly: 'cumsum',\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  // return the bar plot options using the pareto data\r\n  return option\r\n\r\n\r\n}\r\n","/**\r\n * echarts grid\r\n * =================\r\n *\r\n * Converts json arrays into echart grid series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: March 5, 2021\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\nimport get_color from '../../../colors/Colors'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function grid( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n    return []\r\n  }\r\n\r\n  var color_col = props.color\r\n  if( props.color === undefined ){\r\n    color_col = 'color'\r\n    json_array = json_array.create_column( 'color', r => get_color(r[props.value]) )\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'custom',\r\n    // coordinateSystem: 'cartesian2d',\r\n    renderItem: renderRectangle,\r\n    animation: false,\r\n    legendHoverLink : false,\r\n    silent: true,\r\n\r\n    encode: {\r\n        x: 0,\r\n        y: 1\r\n    },\r\n    data: json_array.map(r => [\r\n      r[props.colx],\r\n      r[props.coly],\r\n      r[props.value],\r\n      r[color_col],\r\n    ])\r\n  }\r\n\r\n  if( props.label === true ){\r\n    Series['label'] = {\r\n        show: true,\r\n        color: \"black\",\r\n        fontSize:12,\r\n        z: 10,\r\n        zlevel: 10,\r\n        formatter: (element) => {\r\n          return element.value[2]; // Use sum variable here\r\n        },\r\n    }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction renderRectangle(params, api) {\r\n\r\n    var xCoor = api.value(0);\r\n    var yCoor = api.value(1);\r\n    var color = api.value(3);\r\n\r\n    const [x,y] = api.coord([xCoor, yCoor])\r\n    const [w,h] = api.size([1, 1])\r\n\r\n    return {\r\n        type: 'rect',\r\n        shape: {\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        },\r\n        style: api.style({\r\n            stroke: '#B0B0B0',\r\n            fill: color,\r\n        }),\r\n    };\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport grid from '../../series/grid'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function rectGrid( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.label( props.colx )\r\n  xAxis.minValue()\r\n  xAxis.maxValue()\r\n  xAxis.hide()\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.label( props.coly )\r\n  yAxis.minValue()\r\n  yAxis.maxValue()\r\n  yAxis.hide()\r\n\r\n\r\n  var series = grid( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a pie char\r\n * @param  {string} value  values for pie chart\r\n * @param  {string} label  name of each section\r\n */\r\nexport default function pie( props ){\r\n\r\n  // format the data with and without a label (w/o is the default)\r\n  var data = props.json_array.map(r => { return {value: r[props.value]}})\r\n  if( props.label !== undefined ){\r\n    data = props.json_array.map(r => {\r\n      return {\r\n        value: r[props.value],\r\n        name: r[props.label]\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'pie',\r\n    avoidLabelOverlap: false,\r\n    radius: ['40%', '70%'],\r\n    labelLine: {\r\n                show: false\r\n            },\r\n    data: data\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    Series['label'] = {\r\n        show: false,\r\n        position: 'center'\r\n    }\r\n\r\n    Series['emphasis'] = {\r\n        label: {\r\n            show: true,\r\n            fontSize: '40',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie'\r\n\r\n\r\nexport default function pieChart( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.value === undefined)){\r\n    alert( 'pie plot required att : value ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\nimport pie from './index'\r\n/**\r\n * @param  {string} col  column name\r\n */\r\nexport default function fromSeries( props ){\r\n\r\n  const group = props.json_array.groupby([props.col])\r\n\r\n  return pie({\r\n      ...props,\r\n      ...{\r\n        json_array: group,\r\n        value: 'count',\r\n        label: props.col\r\n        }\r\n  })\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie/fromSeries'\r\n\r\n\r\nexport default function pieFromSeries( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined)){\r\n    alert( 'pie plot required att : col ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function waterfall( json_array, props={} ){\r\n\r\n  const waterfall = require('../../series/waterfall').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = waterfall( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","/**\r\n * echarts Options\r\n * =================\r\n *\r\n * Converts json arrays into echart option objects. This is\r\n * intended for customize plots\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 7, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport echartsTooltip from '../tooltips'\r\nimport echartsAxis from '../axis'\r\n\r\nimport * as features from './features'\r\nimport Line from './charts/line'\r\nimport RollingAvg from './charts/rollingAvg'\r\nimport Boxplot from './charts/boxplot'\r\nimport Heatmap from './charts/heatmap'\r\nimport Scatter from './charts/scatter'\r\nimport Bar from './charts/bar'\r\nimport Pareto from './charts/pareto'\r\nimport Grid from './charts/grid'\r\nimport Pie from './charts/pie'\r\nimport PieFromSeries from './charts/pie/fromSeries'\r\nimport Waterfall from './charts/waterfall'\r\n\r\nimport Toolbox from './format/Toolbox'\r\nimport legend from './format/legend'\r\n\r\n\r\nexport default class echartsOptions extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    this.json_array = data\r\n\r\n    // cast the variable to a jsonArray type when it is a standard array\r\n    if( (this.json_array instanceof jsonArray) === false ){\r\n      this.json_array  = new jsonArray( this.json_array  )\r\n    }\r\n\r\n    // set the default plot parameters\r\n    this.default()\r\n  }\r\n\r\n\r\n  // set the default plot parameters\r\n  default(){\r\n\r\n    // default animations to off for performance\r\n    this.animation = false\r\n\r\n    this.tooltip = new echartsTooltip()\r\n\r\n    this.grid = {\r\n        left: '10%',\r\n        right: '10%',\r\n        bottom: '15%'\r\n    }\r\n\r\n    this.series = []\r\n  }\r\n\r\n\r\n  heatmap( props ){ return this.generate_options( Heatmap, props ) }\r\n  boxplot( props ){ return this.generate_options( Boxplot, props ) }\r\n  scatter( props ){ return this.generate_options( Scatter, props ) }\r\n  bar( props ){ return this.generate_options( Bar, props ) }\r\n  pareto( props ){ return this.generate_options( Pareto, props ) }\r\n  line( props ){ return this.generate_options( Line, props ) }\r\n  rollingAvg( props ){ return this.generate_options( RollingAvg, props ) }\r\n  rectGrid( props ){ return this.generate_options( Grid, props ) }\r\n  pie( props ){ return this.generate_options( Pie, props ) }\r\n  pieFromSeries( props ){ return this.generate_options( PieFromSeries, props ) }\r\n  waterfall( props ){ return this.generate_options( Waterfall, props ) }\r\n\r\n\r\n  toolbox( props ){ return Toolbox( this, props ) }\r\n  selection( props ){ return features.Selection( this, props ) }\r\n  zoom( props ){ return features.DataZoom( this, props ) }\r\n  highlight( props ){\r\n    const options = features.Highlight( this, props )\r\n    this.local_variables( options )\r\n    delete this.json_array\r\n    return this\r\n  }\r\n\r\n  // wrapper used to generate the options based on the provided function\r\n  generate_options( func, props ){\r\n    const options = func( this.json_array, props )\r\n\r\n    this.local_variables( options )\r\n\r\n    // add the tooltip when provided as a parameter\r\n    if( props.tooltip !== undefined ){\r\n      this.tooltip.from_DataFrame(this.json_array, props.tooltip)\r\n    }\r\n\r\n    if( props.delete !== false ) delete this.json_array\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  // create a local copy of each option variable\r\n  local_variables( options ){\r\n    const keys = Object.keys( options )\r\n    for( var i=0; i < keys.length; i++ ){\r\n      const key = keys[i]\r\n      this[key] = options[key]\r\n    }\r\n  }\r\n\r\n  // appends the series\r\n  append_series( series ){\r\n    this.series = this.series.concat(series)\r\n    return this\r\n  }\r\n\r\n  xtick_padding(padding){\r\n    this.grid = {\r\n      ...this.grid,\r\n      ...{bottom: padding}\r\n    }\r\n  }\r\n\r\n  legend(position){\r\n    this.legend = legend(position)\r\n  }\r\n\r\n  // add a secondary y axis\r\n  secondary_axis( col ){\r\n    this.yAxis.push(  new echartsAxis(col) )\r\n    return this\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axhline( value, props={} ){\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'yAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axvline( value, props={} ){\r\n\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'xAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n  }\r\n\r\n\r\n}\r\n","\r\n// import { toolbox as features } from 'echarts/lib/langEN'\r\n\r\n// adds a toolbox to the chart to enable user interaction\r\nexport default function Toolbox( option, props ){\r\n\r\n  option['toolbox'] = {\r\n    show: true,\r\n    feature: {\r\n        dataZoom: {\r\n          title: 'Zoom',\r\n          show: true\r\n        },\r\n        saveAsImage: { title: 'Save', show: true},\r\n        restore: {title: 'Restore', show: true},\r\n    }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n// adds the ability to select data from the plot\r\nexport default function Selection( option, sliders=false ){\r\n\r\n  option['brush'] = {\r\n      toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n      xAxisIndex: 0,\r\n      outOfBrush: {\r\n          colorAlpha: 0.8\r\n      }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\n// adds the ability to zoom into plots\r\nexport default function DataZoom( option, props ){\r\n\r\n  if( option.dataZoom === undefined ) option['dataZoom'] = []\r\n\r\n\r\n  var params = props\r\n  if( params === undefined ){\r\n    params = {\r\n      scroll: true,\r\n      xAxis: false,\r\n      yAxis: false,\r\n      sliders: {\r\n        xAxis: true,\r\n        yAxis: true,\r\n      }\r\n    }\r\n  }\r\n\r\n  if( params.scroll ){\r\n    var scrollZoom = {\r\n        type: 'inside',\r\n        start: 0,\r\n        end: 100,\r\n        filterMode: 'none',\r\n    }\r\n\r\n    if( params.xAxis ) scrollZoom['orient'] = 'horizontal'\r\n    if( params.yAxis ) scrollZoom['orient'] = 'vertical'\r\n\r\n    option['dataZoom'] = option['dataZoom'].concat(scrollZoom)\r\n  }\r\n\r\n  if( params.sliders !== undefined ){\r\n    const icon = 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z'\r\n\r\n    if( params.sliders.xAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          xAxisIndex: 0,\r\n          start: 0,\r\n          end: 100,\r\n          height: 7,\r\n          bottom: 8,\r\n          showDataShadow: false,\r\n          handleSize: 15,\r\n          handleIcon: icon,\r\n          filterMode: 'none',\r\n        }\r\n      )\r\n    }\r\n\r\n    if( params.sliders.yAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n            type: 'slider',\r\n            show: true,\r\n            yAxisIndex: 0,\r\n            start: 0,\r\n            end: 100,\r\n            width: 7,\r\n            showDataShadow: false,\r\n            handleSize: 15,\r\n            handleIcon: icon,\r\n            filterMode: 'none',\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  // console.log( 'what is this', sliders)\r\n  // console.log( 'soom', option)\r\n\r\n    return option\r\n}\r\n","\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Highlight( options, props ){\r\n\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'minimum attributes: colx, coly and value')\r\n    return\r\n  }\r\n\r\n  // identify the index of the samples to highlight\r\n  var index = props.value\r\n  if( typeof props.value === 'string'){\r\n    index = options.xAxis[0]['data'].indexOf( props.value )\r\n  }\r\n\r\n  // extend the first item in the series with the marked area\r\n  options.series[0]['markArea'] = {\r\n      data: [\r\n        [{\r\n          name: props.value,\r\n          xAxis: index - 1\r\n      }, {\r\n          xAxis: index + 1\r\n      }]\r\n    ]\r\n  }\r\n\r\n  return options\r\n\r\n}\r\n","\r\nexport default function legend( position ){\r\n\r\n  switch( position ){\r\n\r\n    case 'top-center':\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n\r\n    case 'left':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        left: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    case 'right':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        right: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    default:\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n  }\r\n\r\n}\r\n","/**\r\n * Echarts Components\r\n * ===================\r\n *\r\n * returns a class containing all available eCharts components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n import echartsOptions from './options'\r\n\r\n\r\n\r\n\r\nexport default class eChartsComponents extends Object{\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.data = data\r\n  }\r\n\r\n  get options(){\r\n    return new echartsOptions( this.data )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Vline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'vLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: 0,\r\n            y: [1, 2]\r\n        },\r\n        data: data\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var xValue = api.value(0);\r\n    var highPoint = api.coord([xValue, api.value(1)]);\r\n    var lowPoint = api.coord([xValue, api.value(2)]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: null\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\nexport default function Circle( props ){\r\n  \r\n  var Series = {\r\n      type: 'custom',\r\n      renderItem: (params, api) => renderItem(params, api, props),\r\n      animation: false,\r\n      legendHoverLink : false,\r\n      silent: true,\r\n      data: props.data,\r\n      z: 0,\r\n      zlevel: 0,\r\n      encode: {\r\n          x: 0,\r\n          y: 1\r\n      },\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n\r\n}\r\n\r\nfunction renderItem(params, api, props) {\r\n\r\n    const [x,y] = api.coord([\r\n      api.value(0),\r\n      api.value(1)\r\n    ])\r\n\r\n    const radius = Math.max(...api.size([props.radius, props.radius]))\r\n\r\n    var Series = {\r\n        type: 'circle',\r\n        shape: {\r\n          cx: x,\r\n          cy: y,\r\n          r: radius,\r\n        },\r\n        z: 0,\r\n        zlevel: 0,\r\n        style: api.style({\r\n            fill: 'red',\r\n            stroke: 'red'\r\n        })\r\n    }\r\n\r\n    if( props.color !== undefined ) Series.style.fill = props.color\r\n    if( props.border !== undefined ) Series.style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Hline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'hLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: [1, 2],\r\n            y: 0,\r\n        },\r\n        data: data,\r\n        z: 100\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var yValue = api.value(0);\r\n    var highPoint = api.coord([api.value(1), yValue]);\r\n    var lowPoint = api.coord([api.value(2), yValue]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: 'green'\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","/**\r\n * echarts Formatter\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\nimport scatter from './scatter'\r\nimport scatter_by from './scatter/scatterBy'\r\nimport boxplot from './boxplot'\r\nimport line from './line'\r\nimport bar from './bar'\r\nimport grid from './grid'\r\nimport pie from './pie'\r\nimport pieFromSeries from './pie/fromSeries'\r\nimport waterfall from './waterfall'\r\nimport rollingAvg from './line/rollingAvg'\r\n\r\nimport ErrorBars from './features/ErrorBars'\r\nimport Circle from './features/Circle'\r\nimport Vline from './features/Vline'\r\nimport Hline from './features/Hline'\r\n\r\n\r\n\r\nexport {default as scatter} from './scatter'\r\nexport {default as scatter_by} from './scatter/scatterBy'\r\n\r\n\r\nexport default class echartsSeries extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.json_array = data;\r\n\r\n    // convert to a jsonArray type and groupby week attribute\r\n    if( !this.json_array instanceof jsonArray ){\r\n      this.json_array = new jsonArray( this.json_array )\r\n    }\r\n\r\n  }\r\n\r\n  scatter( props ){ return scatter({...props, ...{json_array:this.json_array}}) }\r\n  scatter_by( props ){ return scatter_by({...props, ...{json_array:this.json_array}}) }\r\n  boxplot( props ){ return boxplot({...props, ...{json_array:this.json_array}}) }\r\n  line( props ){ return line({...props, ...{json_array:this.json_array}}) }\r\n  bar( props ){ return bar({...props, ...{json_array:this.json_array}}) }\r\n  pie( props ){ return pie({...props, ...{json_array:this.json_array}}) }\r\n  pieFromSeries( props ){ return pieFromSeries({...props, ...{json_array:this.json_array}}) }\r\n  rectGrid( props ){ return grid({...props, ...{json_array:this.json_array}}) }\r\n  waterfall( props ){ return waterfall({...props, ...{json_array:this.json_array}}) }\r\n  rollingAvg( props ){ return rollingAvg({...props, ...{json_array:this.json_array}}) }\r\n\r\n\r\n  errorbars( props ){ return ErrorBars({...props, ...{json_array:this.json_array}}) }\r\n  circle( props ){ return Circle({...props, ...{json_array:this.json_array}}) }\r\n  vline( props ){ return Vline({...props, ...{json_array:this.json_array}}) }\r\n  hline( props ){ return Hline({...props, ...{json_array:this.json_array}}) }\r\n}\r\n","\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Vline from './Vline'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function ErrorBars( props ){\r\n\r\n  if( (props.min === undefined)|(props.max === undefined) ){\r\n    alert( 'minimum attributes: min and max')\r\n    return\r\n  }\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = Vline({\r\n    ...props,\r\n    ...{\r\n      colx: '__index__',\r\n      coly: props.min,\r\n      colz: props.max,\r\n      zIndex: -1\r\n    }\r\n  })\r\n\r\n  // scatter point for the minimum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.min,\r\n      symbol: 'triangle',\r\n      color: 'green'\r\n    })[0]\r\n  )\r\n\r\n  // scatter point for the maximum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.max,\r\n      symbol: 'diamond',\r\n      color: 'blue'\r\n    })[0],\r\n  )\r\n\r\n\r\n  // scatter point for the average value when available\r\n  if( props.avg !== undefined ){\r\n    Series.push(\r\n      json_array.echartsSeries.scatter({\r\n        colx:'__index__',\r\n        coly:props.avg,\r\n        symbol: 'square',\r\n        color: 'red'\r\n      })[0]\r\n    )\r\n  }\r\n\r\n  return Series\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\n\r\nexport function max(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.max(...array)\r\n}\r\n\r\nexport function min(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.min(...array)\r\n}\r\n\r\nexport function sum(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return array.reduce((a,b) => a + b, 0)\r\n}\r\n\r\nexport function mean(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return sum(array) / array.length\r\n}\r\n\r\nexport function dropna(array){\r\n  return array.filter(r => (r !== undefined)&(r !== null)&(!Number.isNaN(r)) )\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\nimport * as arrayStats from './array'\r\n\r\nexport function max(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.max(data.map(row => row[col]))\r\n}\r\n\r\nexport function min(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.min(data.map(row => row[col]))\r\n}\r\n\r\nexport function sum(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.sum(data.map(row => row[col]))\r\n}\r\n\r\nexport function mean(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.mean(data.map(row => row[col]))\r\n}\r\n\r\n\r\nexport function forward_diff(data, col, newCol, step=1){\r\n  if( newCol === undefined) newCol = col\r\n\r\n  for( let i=step; i < data.length; i++ ){\r\n    data[i][newCol] = data[i][col] - data[i-step][col]\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n\r\n// computes the rolling average for the provided column\r\nexport function rolling_average(data, col, window=7, type='center' ){\r\n\r\n\r\n\r\n  const yValues = data.map(r => r[col])\r\n\r\n  // coompute the rolloing average where the sample of interest is\r\n  // in the middle of the window\r\n  if( type === 'center' ){\r\n\r\n    var pStep, nStep\r\n    if( window % 2  === 0){\r\n      pStep = window/2\r\n      nStep = window/2\r\n\r\n    }else{\r\n      pStep = Math.floor(window/2)\r\n      nStep = Math.floor(window/2) + 1\r\n    }\r\n\r\n    for( let i=0; i < data.length; i++ ){\r\n\r\n      var start = i - nStep + 1\r\n      var end = i + pStep + 1\r\n\r\n      // ensure that the statistics do not count out of bounds values\r\n      if (start < 0 ) start = 0\r\n      if (end > data.length ) end = data.length\r\n      // console.log( i, start, end, yValues.slice(start,end))\r\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,end))\r\n    }\r\n  }\r\n\r\n  if( type === 'tailing' ){\r\n\r\n    // // add nulls for the first n samples\r\n    // for( let i=0; i < window-1; i++ ){\r\n    //   data[i][`${col}_avg`] = null\r\n    //\r\n    // }\r\n    //\r\n    // for( let i=window-1; i < data.length; i++ ){\r\n    //   data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(i-window+1,i+1))\r\n    // }\r\n\r\n    // average is not accurate for the first n samples in the rolling average\r\n    for( let i=0; i < data.length; i++ ){\r\n      var start = (i-window+1 < 0) ? 0 : i-window+1\r\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,i+1))\r\n    }\r\n\r\n  }\r\n\r\n  return data\r\n}\r\n","/**\r\n * JSON Array\r\n * ===============\r\n *\r\n * Extend the Array components to include various functions useful\r\n * for processing an array of JSON objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Feb 11, 2020\r\n */\r\n\r\n\r\n\r\n // import _ from 'lodash'\r\nimport jsonObject from './jsonObject'\r\n\r\nimport Series from './Series'\r\nimport DataTypes from './data_types/dtypes'\r\nimport strFormat from './data_types/format/strFormat'\r\n\r\nimport eChartsComponents from './frameworks/echarts/components'\r\nimport echartsOptions from './frameworks/echarts/options'\r\nimport echartsSeries from './frameworks/echarts/series'\r\n\r\nimport toCsv from './frameworks/fileIO/extract'\r\n\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\n\r\nimport * as stats from './statistics/matrix'\r\n\r\n\r\n\r\nexport default class jsonArray extends Array{\r\n\r\n  constructor(array=[], inplace, dtypes) {\r\n\r\n    // var dtypes = dtypes\r\n    if( dtypes === undefined ) dtypes = new DataTypes( array )\r\n    // console.log( dtypes )\r\n\r\n    // add an index column when the array is not empty\r\n    if( (array.length > 0)&(inplace!==true) ){\r\n\r\n      array = JSON.parse(JSON.stringify(array))\r\n\r\n      // when the Array is passed in as an array of arrays, covert\r\n      // it to an array of objects\r\n      if( array[0].hasOwnProperty('length') ){\r\n        for( var i=0; i < array.length; i++ ){\r\n          array[i] = {...array[i]}\r\n        }\r\n      }\r\n\r\n      const columns = Object.keys(array[0])\r\n\r\n      // create an internal index attribute when one doesn't exist\r\n      if( !columns.includes('__index__') ){\r\n        for( i=0; i < array.length; i++ ){\r\n          array[i]['__index__'] = i\r\n        }\r\n      }\r\n\r\n\r\n      // initialize the array based on the data type of the uncloned DataFrame\r\n      array = dtypes.init(array)\r\n    }\r\n\r\n    super()\r\n\r\n    // to avoid max recursion depth, we push each row separately\r\n    array.map( row => this.push(row))\r\n\r\n    // console.log( dtypes )\r\n    // dictionary containing column data types\r\n    this.dtypes = dtypes\r\n\r\n  }\r\n\r\n\r\n  // returns all columns in the jsonArray\r\n  get columns(){\r\n    var columns = []\r\n\r\n    var max_length = this.length\r\n    if( max_length > 50 ) max_length = 50\r\n\r\n    for( var i=0; i < max_length; i++ ){\r\n      columns = columns.concat(Object.keys(this[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\r\n  }\r\n\r\n  /**\r\n   * Replace the column names with those provided by the column array\r\n   * @param  {Array} columns array of column names\r\n   * @return {Array}         jsonArray with new column names\r\n   */\r\n  set columns( columns ){\r\n      const keys = this.columns\r\n\r\n      // define a mapping between the current and new column names\r\n      var mapping = {}\r\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\r\n        mapping[keys[i]] =columns[i]\r\n      }\r\n\r\n      // return a json array with the new mapping applied\r\n      return this.rename( mapping, {inplace: true} )\r\n  }\r\n\r\n  // resets the index value\r\n  reset_index(props={}){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(props['inplace'])\r\n\r\n    for( var i=0; i < array.length; i++ ){\r\n      array[i]['__index__'] = i\r\n    }\r\n    return array\r\n  }\r\n\r\n  // return all values for the specified column\r\n  values( col ){\r\n    return [...this].map(row => row[col])\r\n  }\r\n\r\n  /**\r\n   * Returns an array of index values\r\n   * @return {Array} Array of index values\r\n   */\r\n  get index(){\r\n    return [...this].map(row => row.__index__)\r\n  }\r\n\r\n  /**\r\n   * Returns a Series containing the data for the specified column\r\n   * @param  {string} col column name\r\n   * @return {Series}     Series containing the column data\r\n   */\r\n  col( col ){\r\n    const index = this.index\r\n    const value = [...this].map(row => row[col])\r\n    return new Series({\r\n      index: index,\r\n      value: value,\r\n      dtype: this.dtypes[col],\r\n      name: col\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Combines the column series with the local DataFrame\r\n   * @param {Series} series Series containing data for a single column\r\n   */\r\n  set_col( series, params={} ){\r\n    // duplicate the jsonArray\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // retrieve index and convert to string type to match the\r\n    // index from the Series\r\n    var index = this.index.map( row => row.toString() )\r\n\r\n    for (var [key, value] of Object.entries(series.data)) {\r\n      var id = index.indexOf(key)\r\n\r\n      // extend the DataFrame with a new row containing the\r\n      // sample with an unmatched id\r\n      if( id === -1 ){\r\n        array.push({\r\n          [series.name]: value,\r\n          __index__: key\r\n        })\r\n        continue\r\n      }\r\n\r\n      // overwrite existing or create new entries for the value\r\n      array[id][series.name] = value\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /// returns a jsonArray with the specified columns\r\n  selectColumns( columns ){\r\n    var subset = []\r\n    this.forEach( r => {\r\n      var row = {}\r\n      columns.forEach(s => row[s] = r[s])\r\n      subset.push(row)\r\n    })\r\n    return new jsonArray(subset)\r\n  }\r\n\r\n\r\n  append( df ){\r\n    return new jsonArray([...this].concat(df))\r\n  }\r\n\r\n  /**\r\n   * Applies a given function to a column and returns a DataFrame\r\n   * with the results. The results can be written inplace or a nedw\r\n   * column created when specified as a parameter\r\n   * @param  {string} col     column name\r\n   * @param  {function} func  function to apply to the column\r\n   * @param  {string} newCol  when provided a new column is produced\r\n   * @return {[type]}      [description]\r\n   */\r\n  apply( col, func, newCol ){\r\n\r\n    if( newCol === undefined ) newCol = col\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][newCol] = func(this[i][col])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * cretes a new column by applying the provided function to each row\r\n   * @param  {string} col     name of the column to create\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   create_column( col, func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][col] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * applies the provided function to each row\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   row_apply( func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n\r\n  // returns the values of the data at the specified index\r\n  loc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( typeof idx == \"object\" ){\r\n      return  new jsonArray([...this].filter(row => idx.includes(row.__index__) ))\r\n    }\r\n\r\n    // return the row after it has been converted to a series\r\n    if( props.Series === true ){\r\n      const index = this.columns\r\n      const value = Object.values([...this].filter(row => row.__index__ === idx))\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n\r\n      return [...this].filter(row => row.__index__ === idx )\r\n  }\r\n\r\n  // return the values of the data at the relative row number\r\n  iloc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( Array.isArray(idx) ){\r\n      var array = []\r\n      for( var i=0; i < idx.length; i++ ){\r\n        array.push( this[idx[i]] )\r\n      }\r\n      return new jsonArray(array)\r\n    }\r\n\r\n    if( props.Series === true ){\r\n      const index = Object.keys(this[idx])\r\n      const value = Object.values(this[idx])\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n    return this[idx]\r\n  }\r\n\r\n  /**\r\n   * overwrites the local index column with the provided column\r\n   * @param {String} col Column name\r\n   */\r\n  set_index( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < array.length; i ++ ){\r\n      array[i].__index__ = array[i][col]\r\n      delete array[i][col]\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Converts the contents of the jsonArray into a formatted string\r\n   * where the columns are equally spaced apart and the values are\r\n   * formatted based on the internal data type\r\n   * @return {String} jsonArray contents formatted as a string\r\n   */\r\n  to_string(){\r\n    const format = new strFormat(this)\r\n    return format.table\r\n  }\r\n\r\n  /**\r\n   * returns the strFormat class used to format matrix components into\r\n   * strings such as single columns, rows, values, etc.\r\n   * @return {class} strFormat class with the current jsonArray contents\r\n   */\r\n  get strFormat(){\r\n    return new strFormat(this)\r\n  }\r\n\r\n  // sorts the json array by the provided column\r\n  sort_values( col, ascending=true){\r\n\r\n    var array\r\n\r\n    //sort the table based on the ascending flag\r\n    if( ascending === true ){\r\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\r\n\r\n    }else{\r\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Merge two DataFrames together\r\n   * @param  {Array} json_array           DataFrame to be merged\r\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\r\n   * @param  {string} on                   index (col) to use for merging\r\n   * @return {Array}                      DataFrame containing the merged columns\r\n   */\r\n  merge( json_array, params={how:'left', on:'__index__'}  ){\r\n\r\n    var array = []\r\n    var df1, df2, index, a, b\r\n    // var primary_col, secondary_col, value\r\n\r\n    var col_left, col_right\r\n\r\n    // determine the columns to use for merging the left/right\r\n    // DataFrames based on the specified parameters\r\n    if( params.on !== undefined ){\r\n      col_left = params.on\r\n      col_right = params.on\r\n    }\r\n    if( params.on_right !== undefined ) col_right = params.on_right\r\n    if( params.on_left !== undefined ) col_left = params.on_left\r\n\r\n\r\n    // determine the merging criteria\r\n    switch( params.how ){\r\n      case 'left':\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n\r\n      case 'right':\r\n        df1 = [...json_array]\r\n        df2 = [...this]\r\n        // primary_col = col_right\r\n        // secondary_col = col_left\r\n        index = json_array.unique(col_right)\r\n        break;\r\n\r\n      // default to merge on left\r\n      default:\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n    }\r\n\r\n    // var lookup = {}\r\n    // for( a = 0; a < df2.length; a++ ){\r\n    //   value = df2[a][secondary_col]\r\n    //\r\n    //   const keys = Object.keys(lookup)\r\n    //   if( keys.includes(value) ){\r\n    //     lookup[value].push( df2[a] )\r\n    //   }else{\r\n    //     lookup[value] = [df2[a]]\r\n    //   }\r\n    // }\r\n    //\r\n    // // pull the rows corresponding to the provided index value\r\n    // for( var a=0; a < df1.length; a++ ){\r\n    //   value = df1[a][secondary_col]\r\n    //\r\n    //   const lookupVal = lookup[value ]\r\n    //\r\n    //   // merge rows with similar index values (intersection). Create\r\n    //   // multiple rows when duplicate index values are present\r\n    //   if( lookupVal.length > 0 ){\r\n    //     for( b=0; b < lookupVal.length; b++ ){\r\n    //       array.push({...lookupVal[b], ...df1[a]})\r\n    //     }\r\n    //   }\r\n    //\r\n    //   // add the rows that have no overlap\r\n    //   if( lookupVal.length === 0  ){\r\n    //     array.push(df1[a])\r\n    //   }\r\n    //\r\n    // }\r\n\r\n    // pull the rows corresponding to the provided index value\r\n    for( var i=0; i < index.length; i++ ){\r\n      const value = index[i]\r\n      const df1_rows = df1.filter(r => r[col_left] === value)\r\n      const df2_rows = df2.filter(r => r[col_right] === value)\r\n\r\n      // merge rows with similar index values (intersection). Create\r\n      // multiple rows when duplicate index values are present\r\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n          for( b=0; b < df2_rows.length; b++ ){\r\n            array.push({...df2_rows[b], ...df1_rows[a]})\r\n          }\r\n        }\r\n      }\r\n\r\n      // add the rows that have no overlap\r\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n            array.push(df1_rows[a])\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    return new jsonArray( array, true )\r\n\r\n  }\r\n\r\n  /**\r\n   * Replaces undefined data with a given value. The values\r\n   * can be assigned globally or by column\r\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\r\n   *                              Values can be assigne by column, by providing a value\r\n   *                              per colum in the parameter dictionary\r\n   * @return {Array}             DataFrame with missing values replaed\r\n   */\r\n  fillna( params={} ){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    var i, j, columns, col, val\r\n\r\n    // fill missing values with unique values per column\r\n    // This assumes that the input is an object with a\r\n    // value for each column name\r\n    if( typeof params === 'object'){\r\n      columns = Object.keys(params)\r\n\r\n      // nothing to do when no inputs are provided\r\n      if( columns.length === 0) return array\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          val = params[col]\r\n          if( array[i][col] === undefined ) array[i][col] = val\r\n          if( array[i][col] === null ) array[i][col] = val\r\n          if( array[i][col] === '' ) array[i][col] = val\r\n          // if( isNaN(array[i][col]) ) array[i][col] = val\r\n        }\r\n      }\r\n\r\n    }else{\r\n\r\n      // fill all missing values with the same value\r\n      columns = array.columns\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          if( array[i][col] === undefined ) array[i][col] = params\r\n          if( array[i][col] === null ) array[i][col] = params\r\n          // if( isNaN(array[i][col]) ) array[i][col] = params\r\n        }\r\n      }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n\r\n\r\n\r\n  // filters the json array based on the column and the provided value.\r\n  // The value can be either a single variable or an array\r\n  filter_column( col, value ){\r\n\r\n    if( Array.isArray(value) ){\r\n      return new jsonArray(\r\n        [...this].filter(row => value.includes(row[col])),\r\n        false,\r\n        this.dtypes\r\n       )\r\n    }else{\r\n      return new jsonArray(\r\n        [...this].filter(row => row[col] === value ),\r\n        false,\r\n        this.dtypes\r\n      )\r\n    }\r\n  }\r\n\r\n  concat( array ){ return new jsonArray( [...this].concat(array)) }\r\n\r\n  filter( func ){\r\n    return new jsonArray( [...this].filter(func), false, this.dtypes )\r\n  }\r\n\r\n  map( func ){\r\n    return [...this].map(func)\r\n  }\r\n\r\n  groupby( col ){\r\n    var dtypes = this.dtypes\r\n    dtypes['json_obj'] = 'jsonArray'\r\n\r\n    return new jsonArray( this.__groupby__( this, col ), true, dtypes )\r\n  }\r\n\r\n\r\n  __groupby__( json_obj, atts, keys ){\r\n\r\n    // append the keys with the json object\r\n    if( atts.length === 0 ){\r\n      keys['json_obj'] = new jsonArray(json_obj)\r\n      keys['count'] = json_obj.length\r\n      return keys\r\n    }\r\n\r\n    // initial conditions for keys\r\n    if( keys === undefined ){ keys = {} }\r\n\r\n    var results = []\r\n\r\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\r\n    const values = json_obj.unique(atts[0], true)\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      const group = json_obj.filter( row => row[atts[0]] === val )\r\n\r\n      // deep copy the keys and append with the current key\r\n      var temp_keys = Object.assign({}, keys)\r\n      temp_keys[atts[0]] = values[i]\r\n\r\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  count_values( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var counts = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      if( !unique.includes(val) ){\r\n        unique.push(val)\r\n        counts[val] = 0\r\n      }\r\n      counts[val]++\r\n    }\r\n\r\n    // map the unique object count back to a flat object\r\n    var buffer = []\r\n    for( i=0; i < unique.length; i++ ){\r\n      const split_val = unique[i].split(',')\r\n\r\n      //\r\n      const obj = {count: counts[unique[i]]}\r\n      for( var j=0; j < split_val.length; j++ ){\r\n        obj[columns[j]] = split_val[j]\r\n      }\r\n\r\n      buffer.push( obj )\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  drop_duplicates( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var buffer = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      if( !unique.includes(values[i]) ){\r\n          unique.push( values[i] )\r\n          buffer.push( this[i] )\r\n      }\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n\r\n  pivot( columns ){\r\n\r\n    var pivot_table = []\r\n\r\n    if( columns === undefined ) columns = this.columns\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {column: columns[i]}\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < this.length; j++ ){\r\n        temp[j] = this[j][columns[i]]\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n\r\n  // converts a matrix into a flatten table (opposite of pivot table)\r\n  flatten( id_att = '__index__' ){\r\n\r\n    // extract a list of column names\r\n    const columns = this.columns\r\n\r\n    var table = []\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      const row = this[i]\r\n\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n\r\n        // avoid a duplicate entry as the id attribute\r\n        if( col === id_att ) continue\r\n\r\n        table.push({\r\n          column: col,\r\n          row: row[id_att],\r\n          value:  row[col]\r\n        })\r\n      }\r\n    }\r\n\r\n    return new jsonArray( table, true )\r\n\r\n  }\r\n\r\n  // creates a pivot table based on the specified row and column.\r\n  // The summary type is used to compute the value of the pivot.\r\n  pivot_table( row, column, summaryType='count', value=undefined ){\r\n\r\n    var pivot_table = []\r\n\r\n    const row_val = this.unique( row )\r\n    const column_val = this.unique( column )\r\n\r\n\r\n    for( var i=0; i < row_val.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {row: row_val[i]}\r\n\r\n      const rval = row_val[i]\r\n      // const by_row = this.filter( r => r[row] === rval )\r\n      const by_row = [...this].filter( r => r[row] === rval )\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < column_val.length; j++ ){\r\n\r\n        const cval = column_val[j]\r\n        // const by_col = by_row.filter( r => r[column] === cval )\r\n        const by_col = [...by_row].filter( r => r[column] === cval )\r\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\r\n        // console.log( by_col )\r\n\r\n        var temp_json\r\n        switch( summaryType ){\r\n          // returns the number of rows for the current split\r\n          case 'count':\r\n            temp[column_val[j]] = by_col.length\r\n            break;\r\n\r\n          // returns the number of unique values for the current split\r\n          case 'unique':\r\n            // set defaults for missing parameter values\r\n            if( value === undefined ) value = '__index__'\r\n\r\n            temp_json = new jsonArray( by_col )\r\n            temp[column_val[j]] = temp_json.unique( value ).length\r\n            break;\r\n\r\n          case 'sum':\r\n            temp[column_val[j]] = stats.sum( by_col, value)\r\n            break;\r\n\r\n          case 'mean':\r\n            temp[column_val[j]] = stats.mean( by_col, value)\r\n            break;\r\n\r\n          default:\r\n            temp[column_val[j]] = by_col.length\r\n            break\r\n        }\r\n\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n  /**\r\n   * convert the column data type based on the mapping\r\n   * @param  {Object} [columns={}] object containing the mapping between columns and data type\r\n   * @param  {Object} [params={}]  parameter object\r\n   * @return {Array}              jsonArray containing the mapped columns\r\n   */\r\n  astype( columns={}, params={} ){\r\n\r\n    var inplace = true\r\n    if( params.inplace !== undefined ) inplace = params.inplace\r\n\r\n    var array = this.__inplace__(inplace)\r\n\r\n    // convert all columns based on the specified data types\r\n    const col_names = Object.keys(columns)\r\n    for( var i=0; i < col_names.length; i++ ){\r\n      const col = col_names[i]\r\n      array = array.dtypes.convert(array, col, columns[col], params)\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  // converts the specified column into a date string\r\n  strftime( col, format='YYYY-MM-DD', params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'strftime', params)\r\n  }\r\n\r\n  // converts the specified column into a\r\n  strptime( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'datetime', params)\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a new column by merging the content from the columns\r\n   * specified in the columns attribute\r\n   * @param  {array} columns  array of column names\r\n   * @param  {String} col_name Name of the resulting column\r\n   * @param  {String} [sep='   ']            string delimiter\r\n   * @return {OBJECT}          jsonArray with the new column\r\n   */\r\n  combine( columns, col_name, sep=' ', params={} ){\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      // seed the value with the value from the first column\r\n      var temp = this[i][columns[0]]\r\n\r\n      for( var j=1; j < columns.length; j++ ){\r\n        temp = temp + sep + this[i][columns[j]]\r\n      }\r\n\r\n      array[i][col_name] = temp\r\n    }\r\n\r\n    array.dtypes[col_name] = 'string'\r\n    return array\r\n  }\r\n\r\n  combine_columns( col1, col2, col_name, sep=' ' ){\r\n    // creates a new column by merging the content of col 1 and 2 to\r\n    // form a new column\r\n    console.log( 'this function is deprecated: see combine')\r\n    return this.combine([col1, col2], col_name, sep )\r\n  }\r\n\r\n  to_jsonObject( key, value ){\r\n    // Converts the jsonArray into a jsonObject with following\r\n    // columns for the key and values\r\n\r\n    var object = {}\r\n    for( var i=0; i < this.length; i++ ){\r\n      object[this[i][key]] = this[i][value]\r\n    }\r\n\r\n    return new jsonObject( object )\r\n  }\r\n\r\n  /**\r\n   * creates a single column with the hex color string based\r\n   * on the RGB color values taken from separate columns\r\n   * @param  {string} rcol red color column\r\n   * @param  {string} gcol green color column\r\n   * @param  {string} bcol blue color column\r\n   * @return {[type]}      [description]\r\n   */\r\n  to_rgb( rcol, gcol, bcol, colorCol='rgb'){\r\n    const toHex = require('./frameworks/colors/Colors').rgbToHex\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][colorCol] = toHex( this[i][rcol], this[i][gcol], this[i][bcol])\r\n    }\r\n\r\n    this.dtypes[colorCol] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * converts the column value into a color\r\n   * @param  {string} col color column\r\n   * @param  {string} colorType color label\r\n   */\r\n  to_color( col, colorType='entropy_8bit'){\r\n    const get_color = require('./frameworks/colors/Colors').get_color\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i]['color'] = get_color( this[i][col], colorType)\r\n    }\r\n\r\n    this.dtypes['color'] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  unique( col, ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    // filter the undefined values from unique\r\n    var values = [...this]\r\n      .map(row => row[col])\r\n      .filter(row => row !== undefined)\r\n\r\n    // remove duplicates by forcing to a set\r\n    var unique_values = [...new Set(values)]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtypes[col] === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        switch( typeof unique_values[0] ){\r\n          case \"string\":\r\n            return unique_values.sort()\r\n\r\n          case \"boolean\":\r\n            return unique_values.sort()\r\n\r\n          default :\r\n            try{\r\n              unique_values = unique_values.map( x => +x)\r\n              unique_values = unique_values.sort(function(a,b){return a - b})\r\n            }catch{\r\n              // default to the standard sort\r\n              unique_values.sort()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Applies a threshold to the specified column\r\n   * @param  {function} func     function used to partition dataset\r\n   * @param  {string} res_col   column name containing the results\r\n   * @return {Array}            jsonArray containing res_col\r\n   */\r\n  label( func, params={} ){\r\n\r\n    const param_keys = Object.keys(params)\r\n\r\n    // set defaults for missing parameter values\r\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\r\n    if( !param_keys.includes('value') ) params['value'] = true\r\n    if( !param_keys.includes('default') ) params['default'] = false\r\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n\r\n    // identify all samples identified by the rule\r\n    const sample_index = array.filter( func ).map( row => row.__index__ )\r\n\r\n    // create a boolean label, where parts in the sample set are true\r\n    for( var i=0; i < array.length; i ++ ){\r\n\r\n      // extract a list of columns name for the given row\r\n      const columns = Object.keys( array[i] )\r\n\r\n      // the value is true when it is included in the sample set\r\n      if( sample_index.includes( array[i].__index__ ) ){\r\n        array[i][params['output_col']] = params['value']\r\n        continue\r\n      }\r\n\r\n      // set the default value when no value exists\r\n      if( !columns.includes(params['output_col']) ){\r\n        array[i][params['output_col']] = params['default']\r\n        continue\r\n      }\r\n\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Copies the content from one column to a new column. This is\r\n   * non destructive, so if the column already exists, only the\r\n   * missing data will be copied over\r\n   * @param  {String} col     original column name\r\n   * @param  {String} new_col new column name\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  copy_column( col, new_col, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n      const columns = Object.keys(array[i] )\r\n\r\n      if(!columns.includes( new_col) ){\r\n        array[i][new_col] = array[i][col]\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns a DataFrame containing only the specified column\r\n   * and the index\r\n   * @param  {array} columns array of column names\r\n   * @return {array}         json array containing the specified columns\r\n   */\r\n  select_columns( columns ){\r\n\r\n    var array = []\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < this.length; i++ ){\r\n\r\n      var row = {__index__: this[i].__index__}\r\n      // copy the specified columns for each row\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n        row[col] = this[i][col]\r\n      }\r\n\r\n      array.push( row )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Drops columns from the DataFrame\r\n   * @param  {String or Array} columns String or Array of column names\r\n   * @return {OBJECT}         JsonArray without the specified columns\r\n   */\r\n  drop_columns( columns, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      // delete the specified column when of string type\r\n      if( typeof columns === 'string' ){\r\n        delete array[columns]\r\n\r\n      // when a list is provided, delete all columns in the string\r\n      }else{\r\n\r\n        for( var j=0; j < columns.length; j++ ){\r\n          delete array[i][columns[j]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * renames columns\r\n   * @param  {object} mapping object containing the existing column name and new column name\r\n   * @return {object}         json array with the new column naming\r\n   */\r\n  rename( mapping, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const columns = Object.keys( mapping )\r\n\r\n    // rename the specified columns\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      const ex_columns = Object.keys( array[i] )\r\n\r\n      // create a new column based on the mapping and delete\r\n      // the existing one (taht was replaced)\r\n      for( var j=0; j < columns.length; j++ ){\r\n        // only replace the column when data exists for that column\r\n        if( ex_columns.includes(columns[j]) ){\r\n          const new_col = mapping[columns[j]]\r\n          array[i][new_col] = array[i][columns[j]]\r\n\r\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\r\n          delete array[i][columns[j]]\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * replaces the values in the specified column with the given value\r\n   * based on the mapping\r\n   * @param  {String} col     original column name\r\n   * @param  {Object} mapping Object containing the value mapping\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  replace( col, mapping={}, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const values = Object.keys( mapping )\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n      const columns = Object.keys(array[i] )\r\n\r\n      // do not perform mapping when no data nor the mapping exists\r\n      if(!columns.includes(col) ) continue\r\n      if(!values.includes(array[i][col])) continue\r\n\r\n      array[i][col] = mapping[array[i][col]]\r\n\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the data object. When enable is true, the original\r\n   * jsonArray is returned so the values are modified directly. Otherwise\r\n   * the jsonArray is cloned to avoid mutation of the original object\r\n   *\r\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\r\n   * @return {Object}             current jsonArray content\r\n   */\r\n  __inplace__( enable=false ){\r\n\r\n    // clone the local copy to avoid mutation when inplace is disabled\r\n    if( enable ) return this\r\n\r\n    return new jsonArray( this )\r\n  }\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  max(col){ return stats.max(this, col)  }\r\n  min(col){ return stats.min(this, col)  }\r\n  sum(col){ return stats.sum(this, col)  }\r\n  mean(col){ return stats.mean(this, col)  }\r\n  forward_diff(col, newCol, step=1){ return stats.forward_diff(this, col, newCol, step)  }\r\n  rolling_average(col, window=1, avgType){ return stats.rolling_average(this, col, window, avgType)  }\r\n  stats(){ return stats  }\r\n\r\n\r\n\r\n  toCsv(filename){ toCsv(this, filename ) }\r\n  // max(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.max(...this.map(row => row[col])) }\r\n  // min(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.min(...this.map(row => row[col])) }\r\n  // sum(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.map(row => row[col]).reduce((a,b) => a + b, 0) }\r\n  // mean(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.sum(col) / this.length }\r\n\r\n  /********************************************************************************\r\n  *  ECharts json array interface\r\n  *  ===============================\r\n  *  Interface that returns echarts series objects for plotting\r\n  ********************************************************************************/\r\n\r\n  // /**\r\n  //  * echarts line plot data formatter\r\n  //  * @param  {stringi} col  column name\r\n  //  * @return {object}      echarts data series object\r\n  //  */\r\n  get echartsOptions( ){ return new echartsOptions( this ) }\r\n  get echartsSeries( ){ return new echartsSeries( this ) }\r\n\r\n  get echarts( ){ return new eChartsComponents( this ) }\r\n\r\n  get react(){ return new ReactComponents(this) }\r\n\r\n  get fileIO(){\r\n    const fromFileLibrary = require('./frameworks/fileIO/fromFile').default\r\n    return new fromFileLibrary(this)\r\n  }\r\n}\r\n","/**\n * @title Controls\n * @description Example Header and controls\n * @author Nik sumikawa\n * @date Nov 21, 2020\n *\n * note taken from react-hot-docs\n */\n\nimport React from \"react\"\n\nimport {\n  Grid,\n  Header,\n  Button\n} from \"semantic-ui-react\"\n\n\nexport default function Controls( props ){\n\n  // do not render the component when the visiblility flag\n  // is set to false\n  if( props.visible === false ) return null\n\n  var title\n  if( props.title !== undefined ) title = props.title\n\n  var description\n  if( props.description !== undefined ) description = props.description\n\n  return(\n    <Grid>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <Header as=\"h2\">{title}</Header>\n          <span>{description}</span>\n        </Grid.Column>\n\n\n        <Grid.Column textAlign='right'>\n          <Button\n            onClick={() => props.onClick()}>\n            Show code\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n\n    </Grid>\n  )\n\n}\n","/**\nCode Render\n==================\n\nUses React-ace to render the source code\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment, Button} from 'semantic-ui-react'\n\nimport AceEditor from \"react-ace\"\n\nrequire(\"brace/mode/html\")\nrequire(\"brace/mode/jsx\")\nrequire(\"brace/mode/sh\")\nrequire(\"brace/mode/python\")\n// require(\"brace/theme/github\")\nrequire(\"brace/theme/dracula\")\n\n\nexport default function CodeRender( props ){\n\n  const [source, setSource] = useState('')\n\n  if( props.visible === false ) return null\n\n  var rel_path\n\n  var dir = props.docDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  var ext = props.ext\n  if( ext === undefined ) ext = '.doc'\n\n  var syntax = 'jsx'\n  if( ext === '.py' ) syntax = 'python'\n\n  var filename = props.example.path.split('/')\n  filename = filename[filename.length-1] + ext\n\n\n  try{\n    rel_path = require(`Documentation/${dir}/${props.example.path}${ext}`)\n\n  }catch{\n    return(\n      <Segment>\n        Code not available. Please compile to see source\n      </Segment>\n    )\n  }\n\n  // console.log( rel_path.default )\n  if( (rel_path !== undefined)&(source === '') ){\n\n    fetch(rel_path.default)\n    .then((r) => r.text())\n    .then(text  => {\n      // console.log('this is the code', text);\n      setSource(text)\n    })\n\n  }\n\n  // return (<div> example </div>)\n  return(\n\n    <Segment>\n      <Button\n        style={{\n          position: 'absolute',\n          right: '20px',\n          top: '20px',\n          zIndex: 10\n        }}\n        icon = 'download'\n        color='red'\n        circular\n        onClick={() => downloadFile(source, filename)}\n        />\n\n      <AceEditor\n        editorProps={{ $blockScrolling: Infinity }}\n        maxLines={Infinity}\n        minLines={10}\n        mode={syntax}\n        name=\"jsx-editor\"\n        onChange={() => console.log('not implemented') }\n        tabSize={2}\n        theme=\"dracula\"\n        value={source}\n        width=\"100%\"\n        readOnly\n      />\n    </Segment>\n  )\n}\n\n\n\nfunction downloadFile( source, filename ){\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([source], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n","/**\nSidebar\n==================\n\nRenders a sidebar based on the configuration file\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React from 'react';\n\nimport {Menu, Dropdown} from 'semantic-ui-react'\n\nimport jsonArray from './jsonArray'\n\n\n\n\n// renders a sidebar given an array of category names\nexport default function Sidebar( props ){\n\n  var menuItems = flat_categories(props )\n  menuItems = menuItems.concat( sub_categories(props) )\n\n  return (\n    <Menu pointing secondary vertical>\n      {menuItems}\n    </Menu>\n  )\n\n}\n\n// renders categories without sub categories\nfunction flat_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory === undefined )\n  // console.log( 'jsonArray', props.config instanceof jsonArray)\n  const categories = config.unique(['category'])\n\n  var menuItems = []\n  for( var i=0; i < categories.length; i++ ){\n    const cat = categories[i]\n\n    menuItems.push(\n      <Menu.Item\n        key={`menu-${cat}`}\n        name={cat}\n        active={props.category === cat}\n        onClick={() => {\n          props.setCategory(cat)\n          props.setSubCategory(undefined)\n        }}\n      />\n    )\n  }\n\n  return menuItems\n}\n\n\n// renders categories without sub categories\nfunction sub_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory !== undefined )\n  const groups = config.groupby(['category'])\n\n  var menuItems = []\n  for( var i=0; i < groups.length; i++ ){\n\n    const cat = groups[i].category\n    const subcategories = new jsonArray(groups[i].json_obj).unique(['subcategory'])\n\n    var subMenuItems = []\n    for( var j=0; j < subcategories.length; j++ ){\n      const subcat = subcategories[j]\n\n      subMenuItems.push(\n        <Dropdown.Item\n          key={`dropdown-${cat}-${subcat}`}\n          onClick={() => {\n            props.setCategory(cat)\n            props.setSubCategory(subcat)\n          }}\n          >\n          {subcat}\n        </Dropdown.Item>\n      )\n    }\n\n    menuItems.push(\n      <Dropdown\n        key={`dropdown-${cat}`}\n        item\n        text={cat}>\n        <Dropdown.Menu>\n          {subMenuItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  return menuItems\n}\n","\r\nexport default function getConfig( docType ){\r\n\r\n  switch(docType){\r\n    case 'chart':\r\n      return importConfig(config, 'Echarts/config.js', true)\r\n\r\n    case 'table':\r\n      return importConfig(config, 'Table/config.js', true)\r\n\r\n    default:\r\n\r\n      var config = []\r\n      config = importConfig(config, 'Echarts/config.js', false)\r\n      return config\r\n  }\r\n\r\n}\r\n\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./examples/' + path).config\r\n  console.log()\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return localConfig\r\n}\r\n","/**\r\n * dtype\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to allow for data type\r\n * formatting. This includes extracting data types for specific\r\n * columns and also converting to known data types\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../jsonArray'\r\n\r\nimport datetime from './datetime'\r\n\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default class DataTypes extends Object{\r\n\r\n  constructor(array) {\r\n    super()\r\n\r\n    // global definition to prevent excessive processing\r\n    // when determining data type. This essentially limits\r\n    // the number of checks per column\r\n    this.max_length = 50\r\n\r\n    // set default dtypes. Ideally, extract them from the jsonArray when available\r\n    if( array instanceof jsonArray ){\r\n      this.set_dtypes( array.dtypes )\r\n    }\r\n  }\r\n\r\n  // returns all columns in the jsonArray\r\n  columns( array ){\r\n    var columns = []\r\n\r\n    // ensure that the max length is not greater than the\r\n    // array size, to avoid checking non-existing rows\r\n    if( this.max_length > array.length ) this.max_length  = array.length\r\n\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat(Object.keys(array[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\r\n  }\r\n\r\n  // converts all data types based on the global dtypes definition\r\n  // stored within the jsonArray variable\r\n  init( array ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const dtype_col = Object.keys(this)\r\n\r\n    for( var i=0; i < dtype_col.length; i++ ){\r\n      // convert the column to the specified type\r\n      array = this.convert(array, dtype_col[i], this[dtype_col[i]])\r\n    }\r\n\r\n    this.max_length = array.length\r\n    if( this.max_length > 50 ) this.max_length = 50\r\n\r\n    this.parse(array)\r\n\r\n\r\n    // converting all numeric Strings to their proper non-string type\r\n    const columns = this.columns(array)\r\n    for( i=0; i < columns.length; i++ ){\r\n\r\n\r\n      const col = columns[i]\r\n      if(this[col] === 'intString') array = this.convert( array, col, 'int' )\r\n      if(this[col] === 'floatString') array = this.convert( array, col, 'float' )\r\n      if(this[col] === 'booleanString') array = this.convert( array, col, 'boolean' )\r\n\r\n    }\r\n\r\n    delete this.max_length\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * sets the internal data type definition based on the provided objects\r\n   * @param {object} dtypes object containing the data type definition\r\n   */\r\n  set_dtypes( dtypes ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const columns = Object.keys(dtypes)\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      this[columns[i]] = dtypes[columns[i]]\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // returns the data type for the given value\r\n  data_type( value ){\r\n\r\n    if( value instanceof jsonArray ) return 'jsonArray'\r\n    if( value instanceof Array ) return 'array'\r\n    if( value instanceof Object ) return 'object'\r\n\r\n\r\n    if( (Number(value) === value)&(value % 1 === 0) ) return 'int'\r\n    if( (Number(value) === value)&(value % 1 !== 0) ) return 'float'\r\n\r\n    // attempt to convert the value to a number\r\n    const numeric = Number( value )\r\n\r\n    // determine the proper type when successfully converted to a number\r\n    if( numeric !== undefined & !isNaN(numeric) ){\r\n      if( value === true | value === false ) return 'boolean'\r\n      if( value % 1 === 0 ) return 'intString'\r\n      if( value % 1 !== 0 ) return 'floatString'\r\n    }\r\n\r\n    if(value === 'true' | value === 'false') return 'booleanString'\r\n    if(typeof value === 'string' || value instanceof String) return 'string'\r\n\r\n    return 'unknown'\r\n  }\r\n\r\n  /**\r\n   * returns True when the data type is numeric. Otherwise False\r\n   * @param  {String}  dtype Data type string\r\n   * @return {Boolean}       True when the data type is numeric, otherwise false\r\n   */\r\n  isNumeric( dtype ){\r\n    switch( dtype ){\r\n      case 'float' : return true\r\n      case 'int': return true\r\n      case 'percentage': return true\r\n      default : return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert the specified column based on the data type\r\n   * @param  {string} col       column name\r\n   * @param  {string} dtype     data type definition\r\n   * @return {array}            array containing with the column mapped correctly\r\n   */\r\n  convert( array, col, dtype, params={} ){\r\n\r\n    // convert the dtype for the specific column for all rows\r\n    for( var i=0; i < array.length; i++ ){\r\n\r\n      // do not process the row when data doesn't exist for the column\r\n      // const columns = Object.keys(array[i])\r\n      // if( !columns.includes( col) ) continue\r\n      if( array[i][col] === undefined ) continue\r\n\r\n      array[i][col] = this.apply(array[i][col], dtype, params )\r\n    }\r\n\r\n    // create an internal variable with the data type of the column\r\n    this.set_label( col, dtype )\r\n\r\n    return array\r\n  }\r\n\r\n  // logic to apply when converting a value to the correct data type\r\n  apply(value, dtype, params={}){\r\n\r\n    switch( dtype ){\r\n      case 'datetime':\r\n        return datetime(value)\r\n\r\n      case 'jsonArray':\r\n        return new jsonArray(value)\r\n\r\n      case 'date':\r\n        return moment(value)\r\n\r\n      case 'week':\r\n        if( value === null ) return null\r\n        if( value.toString().split('-').length != 2){\r\n          const date = moment(value)\r\n          return `${date.year()}-${date.format('ww')}`\r\n        }\r\n\r\n        return value\r\n\r\n      case 'strftime':\r\n        const param_keys = Object.keys(params)\r\n        if( !param_keys.includes('format') ) params['format'] = 'YYYY-MM-DD'\r\n\r\n        return datetime(value).format(params['format'])\r\n\r\n      case 'int' :\r\n        return Number( value )\r\n\r\n      case 'float' :\r\n        return Number( value )\r\n\r\n      case 'string' :\r\n        if (value === null) return ''\r\n        return value.toString()\r\n\r\n      case 'boolean' :\r\n\r\n        if( value === null ) return null\r\n        if( value === false | value === true ) return value\r\n\r\n        let number = Number(value)\r\n        if( isNaN(number) ){\r\n          if( value.toLowerCase() === 'true' ) return true\r\n          if( value.toLowerCase() === 'false' ) return false\r\n        }\r\n\r\n        return number\r\n\r\n      case 'array':\r\n        if( typeof value !== 'string' ) return value\r\n        return value\r\n          .replace(/\\[/gi, '')\r\n          .replace(/\\]/gi, '')\r\n          .replace(/'/gi, '')\r\n          .replace(/, /gi, ',')\r\n          .split(',');\r\n\r\n      default :\r\n        return value\r\n    }\r\n\r\n  }\r\n\r\n  // sets the internal data type label\r\n  set_label( col, data_type ){\r\n\r\n    // set the column data type\r\n    switch( data_type ){\r\n      case 'strftime':\r\n        this[col] = 'string';\r\n        break;\r\n\r\n      default:\r\n        this[col] = data_type\r\n        break\r\n    }\r\n\r\n    return this[col]\r\n  }\r\n\r\n\r\n\r\n  // compares two data types and returns the one with the\r\n  // highest priority to avoid type conflict\r\n  dtypePriority( dtype1, dtype2 ){\r\n     const priority = [\r\n       'object',\r\n       'array',\r\n       'string',\r\n       'float',\r\n       'int',\r\n       'boolean',\r\n     ]\r\n\r\n     for( var i=0; i < priority.length; i++ ){\r\n       if( dtype1 === priority[i] ) return priority[i]\r\n       if( dtype2 === priority[i] ) return priority[i]\r\n     }\r\n\r\n     return 'unknown'\r\n  }\r\n\r\n  // set a data type for the specified column\r\n  parse_column( array, col ){\r\n\r\n    var dtype\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      if( array[i][col] !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( array[i][col] )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n  // returns an object containing the dtypes for each column\r\n  parse( array ){\r\n\r\n    // parse a unique set of column names from the array of objects\r\n    var columns = []\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat( Object.keys(array[i]))\r\n    }\r\n    columns = [...new Set(columns)]\r\n\r\n    // parse the data types for each column\r\n    const existing = Object.keys(this)\r\n    for( i=0; i < columns.length; i++ ){\r\n      // do no overwrite existing datatypes\r\n      if( existing.includes(columns[i]) ) continue\r\n\r\n      //parse undefined datatypes\r\n      this[columns[i]] = this.parse_column(array, columns[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the data type for the provided series\r\n   * @param  {Object} series Series object\r\n   * @return {String}        Data type string\r\n   */\r\n  parse_series( series ){\r\n\r\n    var dtype\r\n    for( var i=0; i < series.values.length; i++ ){\r\n\r\n      const value = series.values[i]\r\n\r\n      if( value !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( value )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n}\r\n","/**\r\n * Pluggin Managements\r\n * ======================\r\n *\r\n * Attemps to import various functionality that is dependent on\r\n * various modules. When the module is not available, the enable\r\n * flag is not set, rendering the function not available\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 26, 2020\r\n *\r\n */\r\n\r\n // import * as echarts from 'echarts';\r\n // import 'echarts-gl';\r\n\r\nexport var enabledComponents = {\r\n  echarts: true,\r\n  semanticUI: false,\r\n  excel: false,\r\n}\r\n\r\n// attempt to import the react echarts component\r\nexport var components = {\r\n  echarts: undefined,\r\n  semanticUI: undefined,\r\n  excel: undefined,\r\n}\r\n\r\n\r\ntry{\r\n  // require(\"echarts/lib/lang\");\r\n  // require.cache[require.resolve('echarts/lib/lang')].exports = require(\"echarts/lib/langEN\");\r\n  // echarts = require('echarts')\r\n  components.echarts = require('./echarts').default\r\n  enabledComponents.echarts = true\r\n}catch{\r\n  // console.log('failed to load echarts. module not installed')\r\n}\r\n\r\ntry{\r\n  components.semanticUI = require('../framework/SemanticUI').default\r\n  enabledComponents.semanticUI = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n\r\ntry{\r\n  components.excel = require('./Excel').default\r\n  enabledComponents.excel = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n","/**\r\n * React Components\r\n * ===================\r\n *\r\n * returns a class containing all available React components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n\r\n\r\nimport {enabledComponents, components} from './plugins/Plugins'\r\n\r\nimport echartsLibrary from './plugins/echarts'\r\n\r\nexport default class ReactComponents extends Object{\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.data = data\r\n  }\r\n\r\n  get Table(){\r\n\r\n    const Table = require('./table/Table').default\r\n    return new Table(this.data).Table\r\n  }\r\n\r\n\r\n  get FileIO(){\r\n\r\n    const FileIO = require('./plugins/fileIO').default\r\n    return new FileIO(this.data)\r\n  }\r\n\r\n  get semanticUI(){\r\n    if( enabledComponents.semanticUI === false ){\r\n      alert( 'Semantic UI module not installed')\r\n      return {}\r\n    }\r\n\r\n    return new components.semanticUI( this.data )\r\n  }\r\n\r\n\r\n  get Excel(){\r\n    if( enabledComponents.excel === false ){\r\n      alert( 'react-excel-renderer module not installed')\r\n      return {}\r\n    }\r\n\r\n    return components.excel\r\n  }\r\n\r\n  // return a dictionary containing the various e-charts plotting routines\r\n  get echarts(){\r\n\r\n    if( enabledComponents.echarts === false ){\r\n      alert('echarts module not installed. Install echarts and echarts-for-react')\r\n      return {}\r\n    }\r\n\r\n    return new echartsLibrary( this.data )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function line( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  var Series = {\r\n    type: 'line',\r\n    data: json_array.map(r => r[props.coly])\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nexport default function Waterfall( props ){\r\n\r\n  var data = props.json_array\r\n\r\n  // perform the forward difference required to generate the waterfall\r\n  data = data.forward_diff(props.coly, 'waferfallDiff' )\r\n\r\n  const diff = data.map(r => r.waferfallDiff)\r\n\r\n  var pos = []\r\n  var neg = []\r\n  var stack = []\r\n\r\n  for( let i=0; i < data.length - 1; i++ ){\r\n    const temp = data[i+1]['waferfallDiff']\r\n\r\n\r\n    if(temp >= 0){\r\n      pos.push(temp)\r\n      neg.push('-')\r\n      stack.push( data[i][props.coly] )\r\n\r\n    }else{\r\n      pos.push('-')\r\n      neg.push(Math.abs(temp))\r\n      stack.push( data[i+1][props.coly] )\r\n    }\r\n\r\n  }\r\n\r\n  const series = [\r\n      {\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          itemStyle: {\r\n              barBorderColor: 'rgba(0,0,0,0)',\r\n              color: 'rgba(0,0,0,0)'\r\n          },\r\n          emphasis: {\r\n              itemStyle: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n              }\r\n          },\r\n          data: stack\r\n      },\r\n\r\n      {\r\n          name: 'Gains',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: pos,\r\n          color: 'green',\r\n      },\r\n\r\n      {\r\n          name: 'Losses',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: neg,\r\n          color: 'red',\r\n      }\r\n  ]\r\n\r\n  return series\r\n\r\n\r\n\r\n}\r\n","/**\r\n * eCharts Boxplot\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter_overlay from './scatter_overlay'\r\n\r\nvar prepareBoxplotData\r\ntry{\r\n  prepareBoxplotData =  require( 'echarts/extension/dataTool').prepareBoxplotData\r\n}catch{ console.log( 'echarts module not implemented')}\r\n\r\n\r\n/**\r\n * Convert the json_array to a format for generating a boxplot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function boxplot( props ){\r\n\r\n\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  json_array = json_array.sort_values(props.colx)\r\n\r\n  // group the data based on the boxplot groups\r\n  const groups = json_array.groupby([props.colx])\r\n\r\n  // group the data based on the unique column values\r\n  var group_values = []\r\n  for( var i=0; i < groups.length; i++ ){\r\n    group_values.push(\r\n      groups[i].json_obj.map(row => row[props.coly])\r\n    )\r\n  }\r\n\r\n  // // leverage the echarts function to generate the data\r\n  const echartsData = prepareBoxplotData(group_values)\r\n\r\n  // format the boxplot results as a series\r\n  var series = [\r\n    {\r\n      name: 'boxplot',\r\n      type: 'boxplot',\r\n      data: echartsData.boxData,\r\n    }\r\n  ]\r\n\r\n\r\n  // add the outlier samples. This is set by default and\r\n  // can only be turned off by expicitly providing false\r\n  if( (props.outliers !== false)&(props.allSample !== true) ){\r\n    series.push({\r\n      name: 'outlier',\r\n      type: 'scatter',\r\n      data: echartsData.outliers\r\n      }\r\n    )\r\n  }\r\n\r\n  if( (props.allSample === true)|(props.overlayFilter !== undefined) ){\r\n    series = series.concat(\r\n      scatter_overlay(props)\r\n    )\r\n  }\r\n\r\n\r\n  return series\r\n}\r\n","/**\r\n * Scatter Overlay\r\n * ===================\r\n *\r\n * Overlays a scatter plot containing all samples\r\n * on top of an existing boxplot\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 2, 2020\r\n *\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport scatter from '../scatter'\r\nimport scatter_by from '../scatter/scatterBy'\r\n\r\n // when specified, overlay a scatter plot that highlights\r\n // the location of all 'MARKED' samples in the specified\r\n // label column\r\nexport default function scatter_overlay( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  // group the data based on the boxplot groups\r\n  const keys = json_array.unique( props.colx )\r\n\r\n  // create a mapping between the x column values and the integer\r\n  // values used for the boxplot\r\n  var mapping = {}\r\n  // keys.forEach((element, i) => mapping[element] = echartsData.axisData[i])\r\n  keys.forEach((element, i) => mapping[element] = i)\r\n  json_array = json_array.copy_column( props.colx, 'boxplot_x' )\r\n  json_array = json_array.replace('boxplot_x', mapping)\r\n  json_array = json_array.astype({'boxplot_x': 'int'})\r\n\r\n\r\n  if( props.overlayFilter ) json_array = json_array.filter( props.overlayFilter )\r\n\r\n  // create multicolored scatter plot when colorBy attribute is provided\r\n  var scatterFunc = scatter\r\n  if( props.colorBy !== undefined ) scatterFunc = scatter_by\r\n\r\n\r\n  return scatterFunc({\r\n      ...props,\r\n      ...{\r\n        colx: 'boxplot_x',\r\n        json_array: json_array,\r\n      }}\r\n    )\r\n\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function Bar( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = {\r\n    name: 'bar',\r\n    type: 'bar',\r\n    data: json_array.map( row => row[props.col] )\r\n\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Bar from './bar'\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function BarPlot( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  // return a single boxplot when the column is a string\r\n  if( typeof props.col === 'string' ){\r\n    return [Bar({\r\n      ...props,\r\n      ...{\r\n        col: props.col,\r\n        json_array: json_array,\r\n      }\r\n    })]\r\n  }\r\n\r\n  var series = []\r\n  for( var i=0; i < props.col.length; i++ ){\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series.push( Bar({\r\n      ...props,\r\n      ...{\r\n        col: props.col[i],\r\n        name: props.col[i],\r\n        json_array: json_array,\r\n      }\r\n    }) )\r\n\r\n  }\r\n\r\n  return series\r\n\r\n\r\n\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function EchartsReact( props ) {\r\n\r\n  // extract the options from the props so it can be modified\r\n  var option = props.option\r\n\r\n  var onEvents = {}\r\n\r\n  // when selectionCallback is provided, add the brush functionality\r\n  // and callback function to the list of events\r\n  if( props.onSelect !== undefined ){\r\n    option['brush'] = {\r\n      xAxisIndex: 'all',\r\n      outOfBrush: {\r\n        colorAlpha: 0.1\r\n      }\r\n    }\r\n\r\n    const onSelect = (params) => {\r\n      if( params.batch === undefined ) return\r\n\r\n      const index = params.batch[0].selected[0].dataIndex;\r\n      if( params.batch[0].selected !== undefined ){\r\n        props.onSelect({\r\n            index: index,\r\n            data: props.data.iloc(index)\r\n        } )\r\n      }\r\n    }\r\n\r\n    onEvents['brushselected'] = onSelect\r\n  }\r\n\r\n  // when an onClick event is provided, add it to the Events\r\n  if( props.onClick !== undefined ){\r\n    onEvents['click'] = props.onClick\r\n  }\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option = {option}\r\n      onEvents={onEvents}\r\n      style={props.echartsStyle}\r\n    />\r\n  )\r\n}\r\n","/**\r\n * Echarts Wrapper\r\n * ==================\r\n *\r\n * React component used to wrap the echart's plotter. This includes\r\n * handles for onClick function and callback functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 20, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport moment from 'moment'\r\nimport ReactLibraryFramework from '../../ReactLibraryFramework'\r\n\r\nimport EchartsReact from './EchartsReact'\r\n// export {default as EchartsReact} from './EchartsReact'\r\n\r\n\r\nexport default class echartsLibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Echarts = this.Echarts.bind(this)\r\n    this.Heatmap = this.Heatmap.bind(this)\r\n    this.Boxplot = this.Boxplot.bind(this)\r\n    this.Scatter = this.Scatter.bind(this)\r\n    this.Line = this.Line.bind(this)\r\n    this.Bar = this.Bar.bind(this)\r\n    this.Histogram = this.Histogram.bind(this)\r\n    this.Pareto = this.Pareto.bind(this)\r\n    this.RectGrid = this.RectGrid.bind(this)\r\n\r\n  }\r\n\r\n  Echarts( props ){\r\n    return EchartsReact( this.props(props) )\r\n  }\r\n\r\n  Heatmap( props ){\r\n    return this.Component( 'heatmap', this.props(props) )\r\n  }\r\n\r\n  Boxplot( props ){\r\n    return this.Component( 'boxplot', this.props(props) )\r\n  }\r\n\r\n  RectGrid( props ){\r\n    return this.Component( 'rectGrid', this.props(props) )\r\n  }\r\n\r\n  Scatter( props ){\r\n    return this.Component( 'scatter', this.props(props) )\r\n  }\r\n\r\n  Line( props ){\r\n    return this.Component( 'line', this.props(props) )\r\n  }\r\n\r\n  Bar( props ){\r\n    return this.Component( 'bar', this.props(props) )\r\n  }\r\n\r\n  Histogram( props ){\r\n    return this.Component( 'histogram', this.props(props) )\r\n  }\r\n\r\n  Pareto( props ){\r\n    return Pareto( this.props(props) )\r\n  }\r\n\r\n  Component( type, props ){\r\n\r\n    const options = props.data.echartsOptions\r\n\r\n    var plot_options\r\n    switch( type ){\r\n      case 'boxplot':\r\n        plot_options = options.boxplot(props)\r\n        break\r\n\r\n      case 'scatter':\r\n        plot_options = options.scatter(props)\r\n        break\r\n\r\n      case 'heatmap':\r\n        plot_options = options.heatmap(props)\r\n        break\r\n\r\n      case 'line':\r\n        plot_options = options.line(props)\r\n        break\r\n\r\n      case 'bar':\r\n        plot_options = options.bar(props)\r\n        break\r\n\r\n      case 'rectGrid':\r\n        plot_options = options.rectGrid(props)\r\n        break\r\n\r\n\r\n      case 'histogram':\r\n        const series = props.data.col( props.colx )\r\n        const hist = series.binning({bins: 30})\r\n        const opt = hist.echartsOptions\r\n        plot_options = opt.bar({colx: 'value', coly: 'count'})\r\n        break\r\n\r\n      default:\r\n        alert(`unknown plot type: ${type}`)\r\n        break\r\n    }\r\n    return(\r\n      <EchartsReact\r\n        {...props}\r\n        option = {plot_options}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function react_echarts( options, params ){\r\n  return(\r\n    <EchartsReact\r\n      option = {options}\r\n      onClick = {params['onClick']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a Pareto plot component based on the contents of the\r\n * jsonArray DAtaFrame\r\n */\r\nexport function Pareto( props ){\r\n\r\n  // pivot the user data based the unique users per day\r\n  var pivot = props.data.pivot_table(\r\n    props.colx,\r\n    props.coly,\r\n    'unique',\r\n    props.label\r\n    )\r\n\r\n  const split_values = props.data.unique(props.coly)\r\n\r\n  // format the x axis as a date when specified\r\n  if( (props.dates === true) | (props.colx === 'date') ){\r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    pivot = pivot.apply('row', (value) => moment(value), 'datetime' )\r\n\r\n    // extract a list of unique day\r\n    const dates = pivot.unique('row')\r\n    const datetimes = pivot.unique('datetime')\r\n\r\n    // calculate the number of days between the minimum and maximum date\r\n    const t = new Date(Math.min.apply(null,datetimes))\r\n    const start_date = moment(formatDate(t))\r\n\r\n    // calculate the number of days within the window\r\n    const timeframe = (pivot.max('datetime') - pivot.min('datetime') )/(60*60*24*1000)\r\n\r\n    // add dates not in the pivot table\r\n    for( var i=0; i < timeframe; i++ ){\r\n      const date = moment(start_date).add(i, 'days').format('YYYY-MM-DD')\r\n      if( !dates.includes(date) ) pivot.push({row: date})\r\n    }\r\n  }\r\n\r\n  // sort the usage by date to ensure proper ordering\r\n  pivot = pivot.sort_values('row')\r\n\r\n  var _props = {\r\n    ...props,\r\n    ...{\r\n      data: pivot,\r\n      colx: 'row',\r\n      coly: split_values,\r\n      stacked: true,\r\n    }\r\n  }\r\n\r\n\r\n  const options = props.data.echartsOptions\r\n\r\n  return(\r\n    <EchartsReact\r\n      {..._props}\r\n      option = {options.bar(_props)}\r\n      />\r\n  )\r\n  // return(\r\n  //   <Bar\r\n  //     {...props}\r\n  //     data = {pivot}\r\n  //     colx = 'row'\r\n  //     coly = {split_values}\r\n  //     stacked = {true}\r\n  //     />\r\n  // )\r\n}\r\n","var map = {\n\t\"./\": 272,\n\t\"./components/CodeRender\": 350,\n\t\"./components/CodeRender.jsx\": 350,\n\t\"./components/Example\": 339,\n\t\"./components/Example.jsx\": 339,\n\t\"./components/Header\": 340,\n\t\"./components/Header.jsx\": 340,\n\t\"./components/Sidebar\": 351,\n\t\"./components/Sidebar.jsx\": 351,\n\t\"./components/jsonArray\": 232,\n\t\"./components/jsonArray.js\": 232,\n\t\"./config\": 355,\n\t\"./config.js\": 355,\n\t\"./doc/Demo/BasicExample.doc\": 1224,\n\t\"./doc/Echarts/Bar/Pareto.doc\": 1225,\n\t\"./doc/Echarts/Bar/Simple.doc\": 1226,\n\t\"./doc/Echarts/Bar/Stacked.doc\": 1227,\n\t\"./doc/Echarts/Boxplot/AllSamples.doc\": 1228,\n\t\"./doc/Echarts/Boxplot/AllSamplesGrouped.doc\": 1229,\n\t\"./doc/Echarts/Boxplot/FilteredOverlay.doc\": 1230,\n\t\"./doc/Echarts/Boxplot/Simple.doc\": 1231,\n\t\"./doc/Echarts/Custom/HorizontalLine.doc\": 1232,\n\t\"./doc/Echarts/Custom/Selection.doc\": 1233,\n\t\"./doc/Echarts/Custom/Simple.doc\": 1234,\n\t\"./doc/Echarts/Custom/Style.doc\": 1235,\n\t\"./doc/Echarts/Custom/Zoom.doc\": 1236,\n\t\"./doc/Echarts/Custom/ZoomSlider.doc\": 1237,\n\t\"./doc/Echarts/Custom/ZoomVertical.doc\": 1238,\n\t\"./doc/Echarts/Custom/onClick.doc\": 1239,\n\t\"./doc/Echarts/Format/Legend.doc\": 1240,\n\t\"./doc/Echarts/Format/ToolboxExample.doc\": 1241,\n\t\"./doc/Echarts/Heatmap/Simple.doc\": 1242,\n\t\"./doc/Echarts/Line/ErrorBars.doc\": 1243,\n\t\"./doc/Echarts/Line/Highlight.doc\": 1244,\n\t\"./doc/Echarts/Line/Simple.doc\": 1245,\n\t\"./doc/Echarts/Pie/FromSeries.doc\": 1246,\n\t\"./doc/Echarts/Pie/Simple.doc\": 1247,\n\t\"./doc/Echarts/RectGrid/Custom.doc\": 1248,\n\t\"./doc/Echarts/RectGrid/Simple.doc\": 1249,\n\t\"./doc/Echarts/Scatter/ColorBy.doc\": 1250,\n\t\"./doc/Echarts/Scatter/Labeled.doc\": 1251,\n\t\"./doc/Echarts/Scatter/Simple.doc\": 1252,\n\t\"./doc/Echarts/Selection/SelectionScatter.doc\": 1253,\n\t\"./doc/Echarts/Tooltips/tooltips.doc\": 1254,\n\t\"./doc/Table/AccordianTable.doc\": 1255,\n\t\"./doc/Table/AlternatingStyle.doc\": 1256,\n\t\"./doc/Table/Checkbox.doc\": 1257,\n\t\"./doc/Table/ColumnFilters.doc\": 1258,\n\t\"./doc/Table/LazyLoading.doc\": 1259,\n\t\"./doc/Table/MultiRowCol.doc\": 1260,\n\t\"./doc/Table/MultirowTable.doc\": 1261,\n\t\"./doc/Table/NoHeader.doc\": 1262,\n\t\"./doc/Table/ParentFilterCol.doc\": 1263,\n\t\"./doc/Table/ParentSortCol.doc\": 1264,\n\t\"./doc/Table/SimpleTable.doc\": 1265,\n\t\"./doc/Table/TableFormat.doc\": 1266,\n\t\"./examples/Demo/BasicExample\": 312,\n\t\"./examples/Demo/BasicExample.jsx\": 312,\n\t\"./examples/Echarts/Area/Simple\": 154,\n\t\"./examples/Echarts/Area/Simple.jsx\": 154,\n\t\"./examples/Echarts/Area/config\": 168,\n\t\"./examples/Echarts/Area/config.json\": 168,\n\t\"./examples/Echarts/Bar/Pareto\": 169,\n\t\"./examples/Echarts/Bar/Pareto.jsx\": 169,\n\t\"./examples/Echarts/Bar/Simple\": 170,\n\t\"./examples/Echarts/Bar/Simple.jsx\": 170,\n\t\"./examples/Echarts/Bar/Stacked\": 171,\n\t\"./examples/Echarts/Bar/Stacked.jsx\": 171,\n\t\"./examples/Echarts/Bar/config\": 172,\n\t\"./examples/Echarts/Bar/config.json\": 172,\n\t\"./examples/Echarts/Boxplot/AllSamples\": 173,\n\t\"./examples/Echarts/Boxplot/AllSamples.jsx\": 173,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped\": 174,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay\": 175,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./examples/Echarts/Boxplot/Simple\": 176,\n\t\"./examples/Echarts/Boxplot/Simple.jsx\": 176,\n\t\"./examples/Echarts/Boxplot/config\": 177,\n\t\"./examples/Echarts/Boxplot/config.json\": 177,\n\t\"./examples/Echarts/Custom/HorizontalLine\": 178,\n\t\"./examples/Echarts/Custom/HorizontalLine.jsx\": 178,\n\t\"./examples/Echarts/Custom/Selection\": 179,\n\t\"./examples/Echarts/Custom/Selection.jsx\": 179,\n\t\"./examples/Echarts/Custom/Simple\": 180,\n\t\"./examples/Echarts/Custom/Simple.jsx\": 180,\n\t\"./examples/Echarts/Custom/Style\": 181,\n\t\"./examples/Echarts/Custom/Style.jsx\": 181,\n\t\"./examples/Echarts/Custom/Zoom\": 182,\n\t\"./examples/Echarts/Custom/Zoom.jsx\": 182,\n\t\"./examples/Echarts/Custom/ZoomSlider\": 183,\n\t\"./examples/Echarts/Custom/ZoomSlider.jsx\": 183,\n\t\"./examples/Echarts/Custom/ZoomVertical\": 184,\n\t\"./examples/Echarts/Custom/ZoomVertical.jsx\": 184,\n\t\"./examples/Echarts/Custom/config\": 185,\n\t\"./examples/Echarts/Custom/config.json\": 185,\n\t\"./examples/Echarts/Custom/onClick\": 186,\n\t\"./examples/Echarts/Custom/onClick.jsx\": 186,\n\t\"./examples/Echarts/Format/Legend\": 187,\n\t\"./examples/Echarts/Format/Legend.jsx\": 187,\n\t\"./examples/Echarts/Format/ToolboxExample\": 188,\n\t\"./examples/Echarts/Format/ToolboxExample.jsx\": 188,\n\t\"./examples/Echarts/Format/config\": 189,\n\t\"./examples/Echarts/Format/config.json\": 189,\n\t\"./examples/Echarts/Heatmap/Simple\": 190,\n\t\"./examples/Echarts/Heatmap/Simple.jsx\": 190,\n\t\"./examples/Echarts/Heatmap/config\": 191,\n\t\"./examples/Echarts/Heatmap/config.json\": 191,\n\t\"./examples/Echarts/Line/ErrorBars\": 192,\n\t\"./examples/Echarts/Line/ErrorBars.jsx\": 192,\n\t\"./examples/Echarts/Line/Highlight\": 193,\n\t\"./examples/Echarts/Line/Highlight.jsx\": 193,\n\t\"./examples/Echarts/Line/Simple\": 194,\n\t\"./examples/Echarts/Line/Simple.jsx\": 194,\n\t\"./examples/Echarts/Line/config\": 195,\n\t\"./examples/Echarts/Line/config.json\": 195,\n\t\"./examples/Echarts/Pie/FromSeries\": 196,\n\t\"./examples/Echarts/Pie/FromSeries.jsx\": 196,\n\t\"./examples/Echarts/Pie/Simple\": 197,\n\t\"./examples/Echarts/Pie/Simple.jsx\": 197,\n\t\"./examples/Echarts/Pie/config\": 198,\n\t\"./examples/Echarts/Pie/config.json\": 198,\n\t\"./examples/Echarts/RectGrid/Custom\": 199,\n\t\"./examples/Echarts/RectGrid/Custom.jsx\": 199,\n\t\"./examples/Echarts/RectGrid/Simple\": 200,\n\t\"./examples/Echarts/RectGrid/Simple.jsx\": 200,\n\t\"./examples/Echarts/RectGrid/config\": 201,\n\t\"./examples/Echarts/RectGrid/config.json\": 201,\n\t\"./examples/Echarts/Scatter/ColorBy\": 202,\n\t\"./examples/Echarts/Scatter/ColorBy.jsx\": 202,\n\t\"./examples/Echarts/Scatter/Labeled\": 203,\n\t\"./examples/Echarts/Scatter/Labeled.jsx\": 203,\n\t\"./examples/Echarts/Scatter/Simple\": 204,\n\t\"./examples/Echarts/Scatter/Simple.jsx\": 204,\n\t\"./examples/Echarts/Scatter/config\": 205,\n\t\"./examples/Echarts/Scatter/config.json\": 205,\n\t\"./examples/Echarts/Selection/SelectionScatter\": 206,\n\t\"./examples/Echarts/Selection/SelectionScatter.jsx\": 206,\n\t\"./examples/Echarts/Selection/config\": 207,\n\t\"./examples/Echarts/Selection/config.json\": 207,\n\t\"./examples/Echarts/Tooltips/config\": 208,\n\t\"./examples/Echarts/Tooltips/config.json\": 208,\n\t\"./examples/Echarts/Tooltips/tooltips\": 209,\n\t\"./examples/Echarts/Tooltips/tooltips.jsx\": 209,\n\t\"./examples/Echarts/config\": 210,\n\t\"./examples/Echarts/config.js\": 210,\n\t\"./examples/Table/Accordian/AccordianTable\": 211,\n\t\"./examples/Table/Accordian/AccordianTable.jsx\": 211,\n\t\"./examples/Table/Accordian/config\": 212,\n\t\"./examples/Table/Accordian/config.json\": 212,\n\t\"./examples/Table/Filtering/ColumnFilters\": 213,\n\t\"./examples/Table/Filtering/ColumnFilters.jsx\": 213,\n\t\"./examples/Table/Filtering/config\": 214,\n\t\"./examples/Table/Filtering/config.json\": 214,\n\t\"./examples/Table/Header/MultiRow\": 215,\n\t\"./examples/Table/Header/MultiRow.jsx\": 215,\n\t\"./examples/Table/Header/NoHeader\": 216,\n\t\"./examples/Table/Header/NoHeader.jsx\": 216,\n\t\"./examples/Table/Header/config\": 217,\n\t\"./examples/Table/Header/config.json\": 217,\n\t\"./examples/Table/LazyLoading/LazyLoading\": 218,\n\t\"./examples/Table/LazyLoading/LazyLoading.jsx\": 218,\n\t\"./examples/Table/LazyLoading/config\": 219,\n\t\"./examples/Table/LazyLoading/config.json\": 219,\n\t\"./examples/Table/MultiRow/MultiRowCol\": 220,\n\t\"./examples/Table/MultiRow/MultiRowCol.jsx\": 220,\n\t\"./examples/Table/MultiRow/MultirowTable\": 221,\n\t\"./examples/Table/MultiRow/MultirowTable.jsx\": 221,\n\t\"./examples/Table/MultiRow/config\": 222,\n\t\"./examples/Table/MultiRow/config.json\": 222,\n\t\"./examples/Table/ParentFilterCol\": 223,\n\t\"./examples/Table/ParentFilterCol.jsx\": 223,\n\t\"./examples/Table/ParentSortCol\": 224,\n\t\"./examples/Table/ParentSortCol.jsx\": 224,\n\t\"./examples/Table/SpecialContent/Checkbox\": 225,\n\t\"./examples/Table/SpecialContent/Checkbox.jsx\": 225,\n\t\"./examples/Table/SpecialContent/config\": 226,\n\t\"./examples/Table/SpecialContent/config.json\": 226,\n\t\"./examples/Table/Style/AlternatingStyle\": 227,\n\t\"./examples/Table/Style/AlternatingStyle.jsx\": 227,\n\t\"./examples/Table/Style/SimpleTable\": 228,\n\t\"./examples/Table/Style/SimpleTable.jsx\": 228,\n\t\"./examples/Table/Style/TableFormat\": 229,\n\t\"./examples/Table/Style/TableFormat.jsx\": 229,\n\t\"./examples/Table/Style/config\": 230,\n\t\"./examples/Table/Style/config.json\": 230,\n\t\"./examples/Table/config\": 231,\n\t\"./examples/Table/config.js\": 231,\n\t\"./examples/data/jsonArray/data\": 166,\n\t\"./examples/data/jsonArray/data.json\": 166,\n\t\"./examples/data/jsonArray/yield_timeframe\": 167,\n\t\"./examples/data/jsonArray/yield_timeframe.json\": 167,\n\t\"./examples/getData\": 19,\n\t\"./examples/getData.js\": 19,\n\t\"./index\": 272,\n\t\"./index.jsx\": 272,\n\t\"./install.py\": 1267\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 490;","\r\n// Standardize method to map prop variables to series to\r\n// avoid multiple changes in multiple files\r\nexport default function propsToSeries(props, Series){\r\n\r\n    if( props.name !== undefined ) Series['name'] = props.name\r\n    if( props.stacked !== undefined ) Series['stack'] = props.stacked\r\n    if( props.color !== undefined ) Series['color'] = props.color\r\n    if( props.smooth !== undefined ) Series['smooth'] = props.smooth\r\n    if( props.symbol !== undefined ) Series['symbol'] = props.symbol\r\n    if( props.symbolSize !== undefined ) Series['symbolSize'] = props.symbolSize\r\n    if( props.lineStyle !== undefined ) Series['lineStyle'] = props.lineStyle\r\n    if( props.axis !== undefined ) Series['yAxisIndex'] = props.axis\r\n    if( props.z !== undefined ) Series['z'] = props.z\r\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\r\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\r\n\r\n    if( props.label !== undefined ){\r\n      Series['label'] = {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: props.label\r\n      }\r\n      Series['showSymbol'] = true\r\n    }\r\n    if( props.lw !== undefined ) Series['itemStyle'] = {normal: {borderWidth:props.lw}}\r\n\r\n    return Series\r\n}\r\n","/**\r\n * File Input/Output Interface\r\n * ==============================\r\n *\r\n * React component used to retrieve from and store to the user's\r\n * desktop\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Oct 7, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport {Button} from '../framework/Components'\r\n\r\nconst extract = require('../../fileIO/extract')\r\n\r\n\r\n\r\nexport default class FileIOLibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n\r\n  }\r\n\r\n  ToCsv( props ){\r\n    return ToCsv( this.props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a heatmap plotting component based on the contents of the\r\n * jsonArray DAtaFrame\r\n */\r\nexport function ToCsv( props ){\r\n\r\n  // set defaults for the button label and filename and\r\n  // overwrite the defaults when values are passed in\r\n  var value = 'Download'\r\n  if( props.value !== undefined ) value = props.value\r\n\r\n  var filename = 'file.csv'\r\n  if( props.filename !== undefined ) value = props.filename\r\n\r\n  return(\r\n    <Button\r\n      {...props}\r\n      style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n      component={props.button}\r\n      key={`toCSV Button`}\r\n      defaultValue={value}\r\n      onClick={() => extract.toCsv(props.data, filename )}\r\n      />\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport Documentation from './Documentation'\n\nReactDOM.render( <Documentation />,  document.getElementById('root') );\n","var map = {\n\t\"./Demo/BasicExample\": 312,\n\t\"./Demo/BasicExample.jsx\": 312,\n\t\"./Echarts/Area/Simple\": 154,\n\t\"./Echarts/Area/Simple.jsx\": 154,\n\t\"./Echarts/Area/config\": 168,\n\t\"./Echarts/Area/config.json\": 168,\n\t\"./Echarts/Bar/Pareto\": 169,\n\t\"./Echarts/Bar/Pareto.jsx\": 169,\n\t\"./Echarts/Bar/Simple\": 170,\n\t\"./Echarts/Bar/Simple.jsx\": 170,\n\t\"./Echarts/Bar/Stacked\": 171,\n\t\"./Echarts/Bar/Stacked.jsx\": 171,\n\t\"./Echarts/Bar/config\": 172,\n\t\"./Echarts/Bar/config.json\": 172,\n\t\"./Echarts/Boxplot/AllSamples\": 173,\n\t\"./Echarts/Boxplot/AllSamples.jsx\": 173,\n\t\"./Echarts/Boxplot/AllSamplesGrouped\": 174,\n\t\"./Echarts/Boxplot/AllSamplesGrouped.jsx\": 174,\n\t\"./Echarts/Boxplot/FilteredOverlay\": 175,\n\t\"./Echarts/Boxplot/FilteredOverlay.jsx\": 175,\n\t\"./Echarts/Boxplot/Simple\": 176,\n\t\"./Echarts/Boxplot/Simple.jsx\": 176,\n\t\"./Echarts/Boxplot/config\": 177,\n\t\"./Echarts/Boxplot/config.json\": 177,\n\t\"./Echarts/Custom/HorizontalLine\": 178,\n\t\"./Echarts/Custom/HorizontalLine.jsx\": 178,\n\t\"./Echarts/Custom/Selection\": 179,\n\t\"./Echarts/Custom/Selection.jsx\": 179,\n\t\"./Echarts/Custom/Simple\": 180,\n\t\"./Echarts/Custom/Simple.jsx\": 180,\n\t\"./Echarts/Custom/Style\": 181,\n\t\"./Echarts/Custom/Style.jsx\": 181,\n\t\"./Echarts/Custom/Zoom\": 182,\n\t\"./Echarts/Custom/Zoom.jsx\": 182,\n\t\"./Echarts/Custom/ZoomSlider\": 183,\n\t\"./Echarts/Custom/ZoomSlider.jsx\": 183,\n\t\"./Echarts/Custom/ZoomVertical\": 184,\n\t\"./Echarts/Custom/ZoomVertical.jsx\": 184,\n\t\"./Echarts/Custom/config\": 185,\n\t\"./Echarts/Custom/config.json\": 185,\n\t\"./Echarts/Custom/onClick\": 186,\n\t\"./Echarts/Custom/onClick.jsx\": 186,\n\t\"./Echarts/Format/Legend\": 187,\n\t\"./Echarts/Format/Legend.jsx\": 187,\n\t\"./Echarts/Format/ToolboxExample\": 188,\n\t\"./Echarts/Format/ToolboxExample.jsx\": 188,\n\t\"./Echarts/Format/config\": 189,\n\t\"./Echarts/Format/config.json\": 189,\n\t\"./Echarts/Heatmap/Simple\": 190,\n\t\"./Echarts/Heatmap/Simple.jsx\": 190,\n\t\"./Echarts/Heatmap/config\": 191,\n\t\"./Echarts/Heatmap/config.json\": 191,\n\t\"./Echarts/Line/ErrorBars\": 192,\n\t\"./Echarts/Line/ErrorBars.jsx\": 192,\n\t\"./Echarts/Line/Highlight\": 193,\n\t\"./Echarts/Line/Highlight.jsx\": 193,\n\t\"./Echarts/Line/Simple\": 194,\n\t\"./Echarts/Line/Simple.jsx\": 194,\n\t\"./Echarts/Line/config\": 195,\n\t\"./Echarts/Line/config.json\": 195,\n\t\"./Echarts/Pie/FromSeries\": 196,\n\t\"./Echarts/Pie/FromSeries.jsx\": 196,\n\t\"./Echarts/Pie/Simple\": 197,\n\t\"./Echarts/Pie/Simple.jsx\": 197,\n\t\"./Echarts/Pie/config\": 198,\n\t\"./Echarts/Pie/config.json\": 198,\n\t\"./Echarts/RectGrid/Custom\": 199,\n\t\"./Echarts/RectGrid/Custom.jsx\": 199,\n\t\"./Echarts/RectGrid/Simple\": 200,\n\t\"./Echarts/RectGrid/Simple.jsx\": 200,\n\t\"./Echarts/RectGrid/config\": 201,\n\t\"./Echarts/RectGrid/config.json\": 201,\n\t\"./Echarts/Scatter/ColorBy\": 202,\n\t\"./Echarts/Scatter/ColorBy.jsx\": 202,\n\t\"./Echarts/Scatter/Labeled\": 203,\n\t\"./Echarts/Scatter/Labeled.jsx\": 203,\n\t\"./Echarts/Scatter/Simple\": 204,\n\t\"./Echarts/Scatter/Simple.jsx\": 204,\n\t\"./Echarts/Scatter/config\": 205,\n\t\"./Echarts/Scatter/config.json\": 205,\n\t\"./Echarts/Selection/SelectionScatter\": 206,\n\t\"./Echarts/Selection/SelectionScatter.jsx\": 206,\n\t\"./Echarts/Selection/config\": 207,\n\t\"./Echarts/Selection/config.json\": 207,\n\t\"./Echarts/Tooltips/config\": 208,\n\t\"./Echarts/Tooltips/config.json\": 208,\n\t\"./Echarts/Tooltips/tooltips\": 209,\n\t\"./Echarts/Tooltips/tooltips.jsx\": 209,\n\t\"./Echarts/config\": 210,\n\t\"./Echarts/config.js\": 210,\n\t\"./Table/Accordian/AccordianTable\": 211,\n\t\"./Table/Accordian/AccordianTable.jsx\": 211,\n\t\"./Table/Accordian/config\": 212,\n\t\"./Table/Accordian/config.json\": 212,\n\t\"./Table/Filtering/ColumnFilters\": 213,\n\t\"./Table/Filtering/ColumnFilters.jsx\": 213,\n\t\"./Table/Filtering/config\": 214,\n\t\"./Table/Filtering/config.json\": 214,\n\t\"./Table/Header/MultiRow\": 215,\n\t\"./Table/Header/MultiRow.jsx\": 215,\n\t\"./Table/Header/NoHeader\": 216,\n\t\"./Table/Header/NoHeader.jsx\": 216,\n\t\"./Table/Header/config\": 217,\n\t\"./Table/Header/config.json\": 217,\n\t\"./Table/LazyLoading/LazyLoading\": 218,\n\t\"./Table/LazyLoading/LazyLoading.jsx\": 218,\n\t\"./Table/LazyLoading/config\": 219,\n\t\"./Table/LazyLoading/config.json\": 219,\n\t\"./Table/MultiRow/MultiRowCol\": 220,\n\t\"./Table/MultiRow/MultiRowCol.jsx\": 220,\n\t\"./Table/MultiRow/MultirowTable\": 221,\n\t\"./Table/MultiRow/MultirowTable.jsx\": 221,\n\t\"./Table/MultiRow/config\": 222,\n\t\"./Table/MultiRow/config.json\": 222,\n\t\"./Table/ParentFilterCol\": 223,\n\t\"./Table/ParentFilterCol.jsx\": 223,\n\t\"./Table/ParentSortCol\": 224,\n\t\"./Table/ParentSortCol.jsx\": 224,\n\t\"./Table/SpecialContent/Checkbox\": 225,\n\t\"./Table/SpecialContent/Checkbox.jsx\": 225,\n\t\"./Table/SpecialContent/config\": 226,\n\t\"./Table/SpecialContent/config.json\": 226,\n\t\"./Table/Style/AlternatingStyle\": 227,\n\t\"./Table/Style/AlternatingStyle.jsx\": 227,\n\t\"./Table/Style/SimpleTable\": 228,\n\t\"./Table/Style/SimpleTable.jsx\": 228,\n\t\"./Table/Style/TableFormat\": 229,\n\t\"./Table/Style/TableFormat.jsx\": 229,\n\t\"./Table/Style/config\": 230,\n\t\"./Table/Style/config.json\": 230,\n\t\"./Table/config\": 231,\n\t\"./Table/config.js\": 231,\n\t\"./data/jsonArray/data\": 166,\n\t\"./data/jsonArray/data.json\": 166,\n\t\"./data/jsonArray/yield_timeframe\": 167,\n\t\"./data/jsonArray/yield_timeframe.json\": 167,\n\t\"./getData\": 19,\n\t\"./getData.js\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 797;","\r\nexport const ENTROPY = [\r\n  \"#363388\",\r\n  \"#87ea00\",\r\n  \"#011fc3\",\r\n  \"#4cdf21\",\r\n  \"#3e0eba\",\r\n  \"#00d226\",\r\n  \"#692dda\",\r\n  \"#9bf94f\",\r\n  \"#3445ee\",\r\n  \"#a6db00\",\r\n  \"#714ffc\",\r\n  \"#82fc5f\",\r\n  \"#a227dd\",\r\n  \"#66ff72\",\r\n  \"#9335e6\",\r\n  \"#76c900\",\r\n  \"#023cda\",\r\n  \"#cef036\",\r\n  \"#da37ec\",\r\n  \"#2bff88\",\r\n  \"#c400c4\",\r\n  \"#00aa0a\",\r\n  \"#c454ff\",\r\n  \"#02c744\",\r\n  \"#dd55ff\",\r\n  \"#c0f346\",\r\n  \"#7d5dff\",\r\n  \"#f0d600\",\r\n  \"#0146ce\",\r\n  \"#a3c700\",\r\n  \"#50199f\",\r\n  \"#b0f55d\",\r\n  \"#c800b5\",\r\n  \"#02df7f\",\r\n  \"#ff5ff8\",\r\n  \"#00a52e\",\r\n  \"#da00b1\",\r\n  \"#95f980\",\r\n  \"#9e00a3\",\r\n  \"#5ba400\",\r\n  \"#566dff\",\r\n  \"#bdc400\",\r\n  \"#0032a9\",\r\n  \"#eabf00\",\r\n  \"#7371ff\",\r\n  \"#eee652\",\r\n  \"#0161e1\",\r\n  \"#deeb5b\",\r\n  \"#69028a\",\r\n  \"#9cf78f\",\r\n  \"#ea00b0\",\r\n  \"#01dd93\",\r\n  \"#fc00ab\",\r\n  \"#02f3b9\",\r\n  \"#c600a0\",\r\n  \"#6ffba9\",\r\n  \"#e90096\",\r\n  \"#01ae56\",\r\n  \"#ec70ff\",\r\n  \"#348900\",\r\n  \"#c47cff\",\r\n  \"#7ca500\",\r\n  \"#3682ff\",\r\n  \"#ffc530\",\r\n  \"#0261d6\",\r\n  \"#d5b200\",\r\n  \"#0144ab\",\r\n  \"#bab100\",\r\n  \"#258bff\",\r\n  \"#ea9f00\",\r\n  \"#0287ed\",\r\n  \"#f17f00\",\r\n  \"#01459b\",\r\n  \"#ceee6f\",\r\n  \"#7b007a\",\r\n  \"#5cfbc9\",\r\n  \"#fa0085\",\r\n  \"#019136\",\r\n  \"#ff57cd\",\r\n  \"#217500\",\r\n  \"#ff72e7\",\r\n  \"#00781d\",\r\n  \"#f38aff\",\r\n  \"#5b8700\",\r\n  \"#a68dff\",\r\n  \"#849600\",\r\n  \"#592282\",\r\n  \"#ffd760\",\r\n  \"#8b007a\",\r\n  \"#00e8c3\",\r\n  \"#ff2236\",\r\n  \"#02eadc\",\r\n  \"#ff312a\",\r\n  \"#00ebfd\",\r\n  \"#ff3f20\",\r\n  \"#00e9ec\",\r\n  \"#dd0018\",\r\n  \"#2be2ff\",\r\n  \"#ff3d3f\",\r\n  \"#5ff7f6\",\r\n  \"#f4005e\",\r\n  \"#01ad68\",\r\n  \"#e60072\",\r\n  \"#6bf8de\",\r\n  \"#cc002f\",\r\n  \"#00d1d3\",\r\n  \"#c32c00\",\r\n  \"#02ccf4\",\r\n  \"#d94a00\",\r\n  \"#4ab0ff\",\r\n  \"#ec6500\",\r\n  \"#6ea0ff\",\r\n  \"#d59f00\",\r\n  \"#005fad\",\r\n  \"#ffa72c\",\r\n  \"#007bc3\",\r\n  \"#ff772d\",\r\n  \"#00a4d7\",\r\n  \"#ce7600\",\r\n  \"#8aa8ff\",\r\n  \"#c19900\",\r\n  \"#dd91ff\",\r\n  \"#356b00\",\r\n  \"#ff4fa7\",\r\n  \"#016e30\",\r\n  \"#ff4f92\",\r\n  \"#005312\",\r\n  \"#ff95e9\",\r\n  \"#245200\",\r\n  \"#b69aff\",\r\n  \"#838600\",\r\n  \"#6f156a\",\r\n  \"#b5f19c\",\r\n  \"#af006a\",\r\n  \"#9af4c1\",\r\n  \"#da005a\",\r\n  \"#00a484\",\r\n  \"#ff4369\",\r\n  \"#00b1a4\",\r\n  \"#ae002c\",\r\n  \"#5cceff\",\r\n  \"#9d2300\",\r\n  \"#73c2ff\",\r\n  \"#c66800\",\r\n  \"#0185bf\",\r\n  \"#ffc24b\",\r\n  \"#293a79\",\r\n  \"#f4e379\",\r\n  \"#572a73\",\r\n  \"#f5e285\",\r\n  \"#79035b\",\r\n  \"#d0eb9c\",\r\n  \"#91005b\",\r\n  \"#019069\",\r\n  \"#ae004f\",\r\n  \"#a0f1e0\",\r\n  \"#9d0012\",\r\n  \"#02b0b8\",\r\n  \"#ff6c4c\",\r\n  \"#00abc4\",\r\n  \"#ff8e3d\",\r\n  \"#016398\",\r\n  \"#ffa548\",\r\n  \"#005174\",\r\n  \"#b48200\",\r\n  \"#8fbbff\",\r\n  \"#ad5000\",\r\n  \"#028aab\",\r\n  \"#ff6362\",\r\n  \"#007548\",\r\n  \"#ff658c\",\r\n  \"#005629\",\r\n  \"#e8a9ff\",\r\n  \"#948500\",\r\n  \"#c8adff\",\r\n  \"#6f7300\",\r\n  \"#ffb7fc\",\r\n  \"#184817\",\r\n  \"#ff8ecd\",\r\n  \"#344700\",\r\n  \"#f8c4ff\",\r\n  \"#575900\",\r\n  \"#b8b9ff\",\r\n  \"#9d3500\",\r\n  \"#aeebfe\",\r\n  \"#aa003b\",\r\n  \"#aeedea\",\r\n  \"#92002d\",\r\n  \"#baecd9\",\r\n  \"#980050\",\r\n  \"#018d81\",\r\n  \"#ff6c74\",\r\n  \"#029195\",\r\n  \"#ff7e5c\",\r\n  \"#00667f\",\r\n  \"#ff9158\",\r\n  \"#00535b\",\r\n  \"#ffa466\",\r\n  \"#204259\",\r\n  \"#fede92\",\r\n  \"#572e65\",\r\n  \"#ffd08b\",\r\n  \"#323e5c\",\r\n  \"#ffa173\",\r\n  \"#074648\",\r\n  \"#ff808c\",\r\n  \"#00523c\",\r\n  \"#ff8cb3\",\r\n  \"#2f4513\",\r\n  \"#fbd6fb\",\r\n  \"#822f00\",\r\n  \"#c1e6ff\",\r\n  \"#86003d\",\r\n  \"#e6e4ad\",\r\n  \"#701f49\",\r\n  \"#dbe6c4\",\r\n  \"#7c112f\",\r\n  \"#c9e7ec\",\r\n  \"#791a1f\",\r\n  \"#e0dffc\",\r\n  \"#682e03\",\r\n  \"#d5cfff\",\r\n  \"#975d00\",\r\n  \"#016b72\",\r\n  \"#ff9493\",\r\n  \"#016252\",\r\n  \"#ffaed5\",\r\n  \"#7b6a00\",\r\n  \"#4c3752\",\r\n  \"#ffba84\",\r\n  \"#164738\",\r\n  \"#ff9e8a\",\r\n  \"#294529\",\r\n  \"#ffbec1\",\r\n  \"#4c3d02\",\r\n  \"#f7dbdd\",\r\n  \"#55390b\",\r\n  \"#e0e2de\",\r\n  \"#6d291d\",\r\n  \"#f4dec0\",\r\n  \"#6a2937\",\r\n  \"#ffd8b0\",\r\n  \"#3b3e4d\",\r\n  \"#ffc999\",\r\n  \"#563548\",\r\n  \"#ffd1c3\",\r\n  \"#43401e\",\r\n  \"#ffb3a3\",\r\n  \"#413f30\",\r\n  \"#854c00\",\r\n  \"#443d3b\",\r\n  \"#755000\",\r\n  \"#59343c\",\r\n  \"#695800\",\r\n  \"#543830\",\r\n  \"#60331a\"\r\n]\r\n","\r\nexport const ENTROPY_8BIT = [\r\n    '#0082c8',\t//\tBlue\t1\r\n    '#FF0000',\t//\tRed\t    2\r\n    '#3cb44b',\t//\tGreen\t3\r\n    '#f58231',\t//\tOrange\t4\r\n    '#911eb4',\t//\tPurple\t5\r\n    '#ffe119',\t//\tYellow\t6\r\n    '#46f0f0',\t//\tCyan\t7\r\n    '#f032e6',\t//\tMagenta\t8\r\n    '#d2f53c',\t//\tLime\t9\r\n    '#fabebe',\t//\tPink\t10\r\n    '#008080',\t//\tTeal\t11\r\n    '#e6beff',\t//\tLavender\t12\r\n    '#aa6e28',\t//\tBrown\t13\r\n    '#fffac8',\t//\tBeige\t14\r\n    '#800000',\t//\tMaroon\t15\r\n    '#aaffc3',\t//\tMint\t16\r\n    '#808000',\t//\tOlive\t17\r\n    '#ffd8b1',\t//\tCoral\t18\r\n    '#000080',\t//\tNavy\t19\r\n    '#808080',\t//\tGrey\t20\r\n    '#FFFFFF',\t//\tWhite\t21\r\n    '#000000',\t//\tBlack\t22\r\n    ]\r\n","\r\nexport const  REDS = [\r\n  '#ff0000', '#ff1900', '#ff2700', '#ff3100', '#ff3900',\r\n  '#ff4000', '#ff4700', '#ff4d00', '#ff5200', '#ff5800',\r\n  '#ff5d00', '#ff6101', '#ff6602', '#ff6a04', '#ff6e05',\r\n  '#ff7207', '#ff7609', '#ff7a0c', '#ff7e0e', '#ff8110',\r\n  '#ff8513', '#ff8815', '#ff8c17', '#ff8f19', '#ff921c',\r\n  '#ff951e', '#ff9820', '#ff9b23', '#ff9e25', '#ffa127',\r\n  '#ffa42a', '#ffa62c', '#ffa92f', '#ffac31', '#ffae34',\r\n  '#ffb136', '#ffb338', '#ffb63b', '#ffb83d', '#ffba40',\r\n  '#ffbd43', '#ffbf45', '#ffc148', '#ffc34a', '#ffc54d',\r\n  '#ffc850', '#ffca52', '#ffcc55', '#ffce58', '#ffcf5a',\r\n  '#ffd15d', '#ffd360', '#ffd563', '#ffd765', '#ffd868',\r\n  '#ffda6b', '#ffdc6e', '#ffdd71', '#ffdf74', '#ffe077',\r\n  '#ffe27a', '#ffe37d', '#ffe580', '#ffe683', '#ffe786',\r\n  '#ffe989', '#ffea8c', '#ffeb8f', '#ffec92', '#ffee95',\r\n  '#ffef99', '#fff09c', '#fff19f', '#fff2a2', '#fff3a6',\r\n  '#fff4a9', '#fff5ac', '#fff5b0', '#fff6b3', '#fff7b6',\r\n  '#fff8ba', '#fff8bd', '#fff9c1', '#fffac4', '#fffac8',\r\n  '#fffbcb', '#fffbcf', '#fffcd2', '#fffcd6', '#fffdd9',\r\n  '#fffddd', '#fffee1', '#fffee4', '#fffee8', '#fffeec',\r\n  '#fffff0', '#fffff3', '#fffff7', '#fffffb', '#ffffff',]\r\n","/**\r\n * Colors\r\n * ======\r\n *\r\n * Description\r\n * -----------\r\n * Routiens for generating colors based on a given index\r\n *\r\n */\r\n\r\nimport {ENTROPY} from './pallet/entropy_pallet'\r\nimport {ENTROPY_8BIT} from './pallet/entropy_8bit'\r\nimport {REDS} from './pallet/reds'\r\n\r\n\r\n\r\n\r\nexport function color( index, opacity, color_type='entropy', min=null, max=null, invert=true){\r\n  const color_hex = get_color( index, color_type, min, max, invert )\r\n\r\n  return convertHex(color_hex, opacity)\r\n}\r\n\r\n//\r\n /**\r\n  * returns the color at the specified index. Round robbin selection implemented\r\n  * @param  {Int} index                  color index\r\n  * @param  {String} [color_type='entropy'] color type definition\r\n  * @return {String}                        hex color string\r\n  */\r\n function get_color( index, color_type='entropy', min=null, max=null, invert=true ){\r\n\r\n   //select the color type. Default to entropy\r\n   var colors = ENTROPY\r\n   if( color_type === 'entropy' ){colors = ENTROPY}\r\n   if( color_type === 'entropy_8bit' ){colors = ENTROPY_8BIT}\r\n   if( color_type === 'reds' ){colors = REDS}\r\n\r\n   const max_colors = colors.length - 1\r\n\r\n   var step_size\r\n   var val = index\r\n\r\n   if( max !== null) {\r\n\r\n     //default the color range assuming there is no minum value\r\n     // var step_size = max_colors/max\r\n     // var val = max_colors - Math.floor((index*step_size))\r\n     // if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     //\r\n     //change the scale and color range when a minimum value exists\r\n    if( min !== null ){\r\n       step_size = max_colors/(max - min + 1)\r\n\r\n       //determine the color value\r\n       val = max_colors - Math.floor((index*step_size)-min)\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)-min) }\r\n\r\n     //scale the colors when there is no minimum value\r\n     }else{\r\n       step_size = max_colors/max\r\n       val = max_colors - Math.floor((index*step_size))\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     }\r\n\r\n     //set an upper and lower bound to avoid accessing outside of the array\r\n     if( val > max_colors ){ val = max_colors }\r\n     if( val < 0 ){ val = 0}\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   // for continuous color schemes, cap the positive and negative sizes of th\r\n   // array\r\n   if( color_type === 'reds' ){\r\n\r\n     val = max_colors-index\r\n\r\n     // Invert the color scheme and check to ensure the highside\r\n     // doesn't run off the negative side of the array\r\n     if( invert === true ){\r\n       if( val < 0 ){ val = 0}\r\n       return colors[val]\r\n     }\r\n\r\n     if( val > max_colors ){ val = max_colors }\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   return colors[val%colors.length]\r\n }\r\n\r\n\r\nexport function convertHex(hex,opacity){\r\n    hex = hex.replace('#','');\r\n    const r = parseInt(hex.substring(0,2), 16);\r\n    const g = parseInt(hex.substring(2,4), 16);\r\n    const b = parseInt(hex.substring(4,6), 16);\r\n\r\n    return 'rgba('+r+','+g+','+b+','+opacity/100+')';\r\n\r\n}\r\n\r\n\r\n function int_to_color(v, min=0, max=100) {\r\n   v = 100*((v-min) / (max - min)) - 1\r\n   v = Math.max(0, v)\r\n   return REDS[Math.round(v)]\r\n }\r\n\r\n function shadeHexColor(color, percent) {\r\n   // changes the color by a percent. positive percentage are lighter and negative are darker\r\n   var f = parseInt(color.slice(1),16)\r\n   var t = percent<0?0:255\r\n   var p = percent<0?percent*-1:percent\r\n   var R = f>>16\r\n   var G = (f>>8) & 0x00FF\r\n   var B = f&0x0000FF\r\n\r\n   return \"#\"+( 0x1000000+(Math.round((t-R)*p)+R) *\r\n                0x10000+(Math.round((t-G)*p)+G) *\r\n                0x100+(Math.round((t-B)*p)+B))\r\n                .toString(16)\r\n                .slice(1);\r\n }\r\n\r\n\r\n/**\r\n * returns and object containing the fill and edge color based on a boolean value\r\n */\r\nexport function booleanColor( value ){\r\n\r\n  var fill, edge\r\n\r\n  switch( value ){\r\n    case true :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case false :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 0 :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 1 :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -1 :\r\n      fill = '#B0B0B0'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -2 :\r\n      fill = '#000000'\r\n      edge = shadeHexColor( fill, 0.5)\r\n      break\r\n\r\n    default :\r\n      fill = 'white'\r\n      edge = 'black'\r\n      break\r\n  }\r\n\r\n  return {\r\n    fill: fill,\r\n    edge: edge\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * lightens the fill color and darkens the edge color to\r\n * create a nice contrast between edge and fill\r\n * @param  {hex color} colorHex hex color value\r\n * @return {object}          object containing the edge and fill colors\r\n */\r\nexport function fillAndEdge( colorHex ){\r\n  return {\r\n    fill: shadeHexColor( colorHex, 0.2),\r\n    edge: shadeHexColor( colorHex, -0.5)\r\n  }\r\n}\r\n\r\n/**\r\n * Converts a single RGB component to hex string\r\n * @param  {8bit integer} c 8 bit color integer\r\n * @return {string}   hex string for the specified component\r\n */\r\nfunction componentToHex(c) {\r\n  if ( c === undefined ) return 'FF'\r\n\r\n  var hex = c.toString(16);\r\n  return hex.length === 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n/**\r\n * returns the hex string based on the provided components\r\n * @param  {string} r red color component integer value\r\n * @param  {string} g green color component integer value\r\n * @param  {string} b blue color component integer value\r\n * @return {string}   hex color string\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\nexport {get_color, int_to_color, shadeHexColor};\r\nexport default get_color;\r\n","/**\r\n * echarts Scatter\r\n * =================\r\n *\r\n * Converts json arrays into echart scatter series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a list of x/y cooridnates\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function scatter( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // set default color scheme for specific label types\r\n  var color = props.color\r\n  switch( props.groupId ){\r\n    case true:\r\n      color = 'red'\r\n      break\r\n\r\n    case false:\r\n      color = 'blue'\r\n      break\r\n\r\n    case 'MARKED':\r\n      color = 'green'\r\n      break\r\n\r\n    default:\r\n      if( color === undefined ) color = 'blue'\r\n      break\r\n  }\r\n\r\n\r\n  // convert the json array to a list of lists containing data\r\n  var coordinates = []\r\n  for( var i=0; i < json_array.length; i++ ){\r\n    var temp\r\n\r\n    // the dataframe index was pushed into the plot data in addition to the\r\n    // data used for plotting. This was used to locate the part by index\r\n    // number after splitting it for visualization purposes\r\n    temp = [\r\n      json_array[i][props.colx],\r\n      json_array[i][props.coly],\r\n      json_array[i]['__index__']]\r\n\r\n    if( props.colorBy !== undefined) temp.push(props.colorBy)\r\n\r\n    coordinates.push(temp)\r\n  }\r\n\r\n  var Series = {\r\n    name: 'scatter',\r\n    type: 'scatter',\r\n    color: color,\r\n    data: coordinates\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  // add tooltips when the label is provided\r\n  if( props.colorBy !== undefined ){\r\n    Series['emphasis'] = {\r\n      label: {\r\n        formatter: function( params){\r\n          return `${coordinates[params.dataIndex][2]}`\r\n        },\r\n        show: true,\r\n        position: 'top',\r\n        color: color ,\r\n        fontSize: 16\r\n      }\r\n    }\r\n  }\r\n\r\n  return [Series]\r\n\r\n}\r\n"],"sourceRoot":""}