{"version":3,"sources":["jsonArray/data_types/datetime.js","jsonArray/frameworks/react/framework/SemanticUI.js","jsonArray/frameworks/react/plugins/Excel.jsx","jsonArray/frameworks/react/ReactLibraryFramework.js","jsonArray/frameworks/fileIO/fromFile.js","jsonArray/Series.js","Documentation/examples/data sync /^/.*$","Documentation/install.py","jsonArray/frameworks/react/table/header/ColumnFilter.jsx","jsonArray/frameworks/react/table/header/index.jsx","jsonArray/frameworks/react/table/cell/coloredSquare.jsx","jsonArray/frameworks/react/table/cell/onClickFunc.jsx","jsonArray/frameworks/react/table/cell/cellType.jsx","jsonArray/frameworks/react/table/cell/booleanCircle.jsx","jsonArray/frameworks/react/table/cell/index.jsx","jsonArray/frameworks/react/table/body/Row.jsx","jsonArray/frameworks/react/table/body/SeriesRow.jsx","jsonArray/frameworks/react/table/body/AccordianRow.jsx","jsonArray/frameworks/react/table/body/MultiRow.jsx","jsonArray/frameworks/react/table/body/index.jsx","jsonArray/frameworks/react/table/Table.js","jsonArray/frameworks/echarts/series/scatter/scatterBy.js","jsonArray/data_types/format/valueToString.js","Documentation/components/jsonArray.js","jsonArray/index.jsx","Documentation/examples/getData.js","Documentation/index.jsx","Documentation/components/Example.jsx","Documentation/components/Header.jsx","Documentation/components/CodeRender.jsx","Documentation/components/Sidebar.jsx","jsonArray/data_types/dtypes.js","jsonArray/frameworks/react/plugins/Plugins.js","jsonArray/frameworks/react/ReactComponents.js","jsonArray/jsonObject.js","jsonArray/data_types/format/arrayToString.js","jsonArray/data_types/format/strFormat.js","jsonArray/frameworks/echarts/tooltips.js","jsonArray/frameworks/echarts/axis.js","jsonArray/frameworks/echarts/options/features/axline.js","jsonArray/frameworks/echarts/options/charts/line.js","jsonArray/frameworks/echarts/options/charts/boxplot.js","jsonArray/frameworks/echarts/options/charts/heatmap.js","jsonArray/frameworks/echarts/options/charts/scatter.js","jsonArray/frameworks/echarts/options/charts/bar.js","jsonArray/frameworks/echarts/series/grid/index.js","jsonArray/frameworks/echarts/options/charts/grid.js","jsonArray/frameworks/echarts/series/pie/index.js","jsonArray/frameworks/echarts/options/charts/pie/index.js","jsonArray/frameworks/echarts/series/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/waterfall.js","jsonArray/frameworks/echarts/options/index.js","jsonArray/frameworks/echarts/options/format/Toolbox.js","jsonArray/frameworks/echarts/options/features/Selection.js","jsonArray/frameworks/echarts/options/features/DataZoom.js","jsonArray/frameworks/echarts/options/features/Highlight.js","jsonArray/frameworks/echarts/options/format/legend.js","jsonArray/frameworks/echarts/components.js","jsonArray/frameworks/echarts/series/features/Vline.js","jsonArray/frameworks/echarts/series/features/Circle.jsx","jsonArray/frameworks/echarts/series/features/Hline.js","jsonArray/frameworks/echarts/series/index.js","jsonArray/frameworks/echarts/series/line/rollingAvg.js","jsonArray/frameworks/echarts/series/features/ErrorBars.js","jsonArray/statistics/array.js","jsonArray/statistics/matrix.js","jsonArray/jsonArray.js","jsonArray/frameworks/react/framework/Components.jsx","jsonArray/frameworks/fileIO/extract.js","jsonArray/frameworks/echarts/series/line/index.js","jsonArray/frameworks/echarts/series/waterfall/index.js","jsonArray/frameworks/echarts/series/bar/bar.js","jsonArray/frameworks/echarts/series/bar/index.js","jsonArray/frameworks/react/plugins/echarts/EchartsReact.jsx","jsonArray/frameworks/react/plugins/echarts/index.jsx","jsonArray/frameworks/echarts/series/boxplot/index.js","jsonArray/frameworks/echarts/series/boxplot/scatter_overlay.js","Documentation sync /^/.*$","Documentation/examples/Demo/BasicExample.jsx","Documentation/examples/Echarts/Bar/Simple.jsx","jsonArray/frameworks/react/plugins/fileIO.jsx","Documentation/examples/Echarts/Bar/Stacked.jsx","Documentation/examples/Echarts/Boxplot/AllSamples.jsx","Documentation/examples/Echarts/Boxplot/AllSamplesGrouped.jsx","jsonArray/frameworks/echarts/series/propsToSeries.js","Documentation/examples/Echarts/Boxplot/FilteredOverlay.jsx","Documentation/examples/Echarts/Boxplot/Simple.jsx","Documentation/examples/Echarts/Custom/HorizontalLine.jsx","Documentation/examples/Echarts/Custom/Selection.jsx","Documentation/examples/Echarts/Custom/Simple.jsx","Documentation/examples/Echarts/Custom/Style.jsx","Documentation/examples/Echarts/Custom/Zoom.jsx","Documentation/examples/Echarts/Custom/ZoomSlider.jsx","Documentation/examples/Echarts/Custom/ZoomVertical.jsx","Documentation/examples/Echarts/Format/Legend.jsx","Documentation/examples/Echarts/Format/ToolboxExample.jsx","Documentation/examples/Echarts/Heatmap/Simple.jsx","Documentation/examples/Echarts/Line/ErrorBars.jsx","Documentation/examples/Echarts/Line/Highlight.jsx","Documentation/examples/Echarts/Line/Simple.jsx","Documentation/examples/Echarts/Pie/FromSeries.jsx","Documentation/examples/Echarts/Pie/Simple.jsx","Documentation/examples/Echarts/RectGrid/Custom.jsx","Documentation/examples/Echarts/RectGrid/Simple.jsx","Documentation/examples/Echarts/Scatter/ColorBy.jsx","Documentation/examples/Echarts/Scatter/Labeled.jsx","Documentation/examples/Echarts/Scatter/Simple.jsx","Documentation/examples/Echarts/Selection/SelectionScatter.jsx","Documentation/examples/Echarts/Tooltips/tooltips.jsx","Documentation/examples/Table/AccordianTable.jsx","Documentation/examples/Table/AlternatingStyle.jsx","Documentation/examples/Table/Checkbox.jsx","Documentation/examples/Table/ColumnFilters.jsx","Documentation/examples/Table/LazyLoading.jsx","Documentation/examples/Table/MultiRowCol.jsx","Documentation/examples/Table/MultirowTable.jsx","Documentation/examples/Table/NoHeader.jsx","Documentation/examples/Table/ParentFilterCol.jsx","Documentation/examples/Table/ParentSortCol.jsx","Documentation/examples/Table/SimpleTable.jsx","Documentation/examples/Table/TableFormat.jsx","index.js","Documentation/doc/Demo/BasicExample.doc","Documentation/doc/Echarts/Bar/Simple.doc","Documentation/doc/Echarts/Bar/Stacked.doc","Documentation/doc/Echarts/Boxplot/AllSamples.doc","Documentation/doc/Echarts/Boxplot/AllSamplesGrouped.doc","Documentation/doc/Echarts/Boxplot/FilteredOverlay.doc","Documentation/doc/Echarts/Boxplot/Simple.doc","Documentation/doc/Echarts/Custom/HorizontalLine.doc","Documentation/doc/Echarts/Custom/Selection.doc","Documentation/doc/Echarts/Custom/Simple.doc","Documentation/doc/Echarts/Custom/Style.doc","Documentation/doc/Echarts/Custom/Zoom.doc","Documentation/doc/Echarts/Custom/ZoomSlider.doc","Documentation/doc/Echarts/Custom/ZoomVertical.doc","Documentation/doc/Echarts/Format/Legend.doc","Documentation/doc/Echarts/Format/ToolboxExample.doc","Documentation/doc/Echarts/Heatmap/Simple.doc","Documentation/doc/Echarts/Line/ErrorBars.doc","Documentation/doc/Echarts/Line/Highlight.doc","Documentation/doc/Echarts/Line/Simple.doc","Documentation/doc/Echarts/Pie/FromSeries.doc","Documentation/doc/Echarts/Pie/Simple.doc","Documentation/doc/Echarts/RectGrid/Custom.doc","Documentation/doc/Echarts/RectGrid/Simple.doc","Documentation/doc/Echarts/Scatter/ColorBy.doc","Documentation/doc/Echarts/Scatter/Labeled.doc","Documentation/doc/Echarts/Scatter/Simple.doc","Documentation/doc/Echarts/Selection/SelectionScatter.doc","Documentation/doc/Echarts/Tooltips/tooltips.doc","Documentation/doc/Table/AccordianTable.doc","Documentation/doc/Table/AlternatingStyle.doc","Documentation/doc/Table/Checkbox.doc","Documentation/doc/Table/ColumnFilters.doc","Documentation/doc/Table/LazyLoading.doc","Documentation/doc/Table/MultiRowCol.doc","Documentation/doc/Table/MultirowTable.doc","Documentation/doc/Table/NoHeader.doc","Documentation/doc/Table/ParentFilterCol.doc","Documentation/doc/Table/ParentSortCol.doc","Documentation/doc/Table/SimpleTable.doc","Documentation/doc/Table/TableFormat.doc","jsonArray/frameworks/colors/pallet/entropy_pallet.js","jsonArray/frameworks/colors/pallet/entropy_8bit.js","jsonArray/frameworks/colors/pallet/reds.js","jsonArray/frameworks/colors/Colors.js","jsonArray/frameworks/echarts/series/scatter/index.js"],"names":["datetime","value","self","moment","__proto__","prototype","toString","format","this","strftime","week","year","isoWeek","timedelta","params","inplace","date","param_keys","Object","keys","i","length","pkey","add","SemanticUI","require","SemanticUILibrary","data","Excel","bind","Table","Dropdown","ToCsv","props","button","Button","ReactLibraryFramework","react","undefined","buttonStyle","margin","buttonProps","color","input","Input","inputStyle","inputProps","icon","placeholder","table","th","HeaderCell","thead","Header","td","Cell","tr","Row","body","Body","image","Image","Icon","checkbox","Checkbox","values","ascending","plottype","columns","filter","r","column","unique","options","forEach","element","push","key","text","child_props","Form","Field","control","Select","label","search","clearable","multiple","onChange","e","d","callback","state","name","filename","fileInputRef","React","createRef","console","log","component","style","onClick","current","click","defaultValue","type","hidden","ref","event","fileHandler","target","className","readOnly","files","fileObj","setState","ExcelRenderer","err","response","alert","rows","header","splice","json_array","jsonArray","Component","parser","http","zlib","fromFileLibrary","fromUrl","toCsv","url","from_url","from_file","file","parse","a","download","complete","results","row","from_gz_url","buffer","get","res","gunzip","createGunzip","pipe","on","join","VALUE","Series","includes","index","object","dtypes","dtype","DataTypes","parse_series","bins","min","max","binNum","count","item","j","bin","logic","ordered","unique_values","Set","temp","concat","sort","map","x","b","variable","func","obj","Number","isNaN","entries","val","compute","y","Math","reduce","sum","ReactComponents","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","ColumnFilter","col","_","uniqueId","fontSize","padding","headerCellOnClick","columnOnClick","col_name","col_number","filterValues","columnFilterOnChange","filters","Segment","Group","raised","compact","width","boxShadow","border","backgroundColor","basic","textAlign","maxWidth","minHeight","selection","fluid","DataFrameHeader","table_data","showHeader","col_offset","accordian","thProps","thStyle","tableName","columnNames","ColComponent","headerrow","trProps","trStyle","theadProps","theadStyle","SeriesHeader","coloredSquare","colorHex","colors","fillAndEdge","preserveAspectRatio","viewBox","transform","display","height","overflow","stroke","edge","strokeWidth","fill","onClickFunc","row_idx","row_data","cellOnClick","cellType","cellContent","valueToString","componentOnClick","imageProps","imageStyle","IconProps","iconStyle","CheckboxProps","checkboxStyle","checked","booleanColor","radius","cx","cy","booleanCircle","whiteSpace","overflowWrap","cell","cellBackgroundColor","cellStyle","tdProps","tdStyle","col_span","row_span","rowOnClick","setSelectedRow","rowStyle","alternateStyle","rowColor","idx","__index__","rowBackgroundColor","selectedRow","cellContentOnly","multirow_idx","SeriesRow","__value__","AccordianRow","useState","visible","setVisible","AccordianTable","json_obj","accordianFunc","accordianColumns","AccordianComponent","iconOnClick","iconColor","accordianComponent","semanticUI","tableStyle","accordianHeader","accordianProps","rowSpan","colSpan","MultiRow","modProps","multirowSpan","multirow","multirowStyle","span_len","span","ceil","TableBody","onHover","setOnHover","lazyLoading","renderedRows","step","lazyLoadingStep","setRenderedRows","onMouseOver","onMouseOut","bodyProps","bodyStyle","SeriesTable","Render","sortBy","setSortBy","sortAscending","setSortAscending","setFilters","lazyLoadingStart","sortable","content","filterable","sortedColumn","sort_values","filt","scatter_by","group","groupby","colorBy","series","color_value","scatter","groupId","numeric","percentage","float","string","format_float","format_int","format_array","format_object","format_boolean","format_scientific","format_percentage","format_datetime","format_string","pow","toFixed","toExponential","formatted","parseFloat","slice","array","__inplace__","df","newCol","df1","df2","col_left","col_right","how","on_right","on_left","df1_rows","df2_rows","Array","isArray","__groupby__","atts","temp_keys","assign","s","counts","split_val","split","pivot_table","id_att","summaryType","row_val","column_val","rval","by_row","cval","by_col","temp_json","sep","col1","col2","combine","sample_index","new_col","mapping","ex_columns","enable","max_length","rename","getData","path","Examples","category","setCategory","subcategory","setSubCategory","config","indev","fillna","Column","stretched","PageContent","examples","exampleComponents","title","vertical","jsxDir","docDir","example","Example","showCode","setShowCode","dir","default","NullComponent","description","Controls","as","CodeRender","rel_path","source","setSource","ext","syntax","fetch","then","position","right","top","zIndex","circular","document","createElement","Blob","href","URL","createObjectURL","appendChild","downloadFile","editorProps","$blockScrolling","Infinity","maxLines","minLines","mode","tabSize","theme","Sidebar","menuItems","categories","cat","Item","active","flat_categories","groups","subcategories","subMenuItems","subcat","Menu","sub_categories","pointing","secondary","set_dtypes","dtype_col","convert","String","apply","set_label","toLowerCase","replace","data_type","dtype1","dtype2","priority","temp_dtype","dtypePriority","existing","parse_column","enabledComponents","echarts","excel","components","FileIO","echartsLibrary","jsonObject","key_name","value_name","json_object","arrayToString","tab_count","tab_space","max_width","value_to_string","col_width","spacing","row_array","whitespace","col_spacing","format_columns","format_row","jsonArray_str","strFormat","echartsTooltip","show","trigger","formatter","sample","echartsAxis","axis","initialize","scale","axisLabel","rotate","units","Axline","line","markLine","symbol","tooltip","coly","xAxis","colx","to_category","yAxis","to_date","boxplot","to_value","dynamic_range","heatmap","grid","visualMap","calculable","orient","left","bottom","inRange","bar","tick_values","color_col","create_column","get_color","renderItem","renderRectangle","animation","legendHoverLink","silent","encode","z","zlevel","propsToSeries","api","xCoor","yCoor","coord","size","shape","rectGrid","minValue","maxValue","hide","pie","avoidLabelOverlap","labelLine","fontWeight","pieChart","option","fromSeries","pieFromSeries","waterfall","echartsOptions","generate_options","Heatmap","Boxplot","Scatter","Bar","Line","Grid","Pie","PieFromSeries","Waterfall","feature","dataZoom","saveAsImage","restore","toolbox","xAxisIndex","outOfBrush","colorAlpha","scroll","sliders","scrollZoom","start","end","filterMode","showDataShadow","handleSize","handleIcon","yAxisIndex","features","indexOf","local_variables","from_DataFrame","delete","legend","append_series","eChartsComponents","Vline","colz","itemStyle","normal","borderWidth","xValue","highPoint","lowPoint","children","transition","x1","y1","x2","y2","visual","render","Circle","Hline","yValue","echartsSeries","rolling_average","window","smooth","showSymbol","lineStyle","rollingAvg","avg","ErrorBars","dropna","mean","arrayStats","forward_diff","pStep","nStep","floor","yValues","JSON","stringify","hasOwnProperty","init","subset","stats","col_names","rcol","gcol","bcol","colorCol","toHex","rgbToHex","colorType","wrapper","src","alt","Papa","browserInterface","link","setAttribute","parentNode","removeChild","csv","unparse","csvData","pos","waferfallDiff","neg","stack","abs","barBorderColor","emphasis","BarPlot","EchartsReact","onEvents","onSelect","batch","selected","dataIndex","iloc","echartsStyle","Echarts","Histogram","Pareto","RectGrid","plot_options","binning","react_echarts","pivot","split_values","dates","datetimes","t","Date","start_date","month","getMonth","day","getDate","getFullYear","formatDate","timeframe","_props","stacked","prepareBoxplotData","group_values","echartsData","boxData","outliers","allSample","overlayFilter","copy_column","astype","scatterFunc","scatter_overlay","SimpleTable","SimpleScatter","extract","FileIOLibrary","StackedScatter","stack_col","stacked_id","AllSamples","lw","CATEGORY2","SimpleLine","axhline","zoom","DevelopmentExample","errorbars","xtick_padding","highlight","SimplePie","QRB","FORCE_INK","DEV","SBL","circle","ColorByScatter","horizontal","CheckboxTable","checkboxField","ColumnFilters","JsonArray","ParentSortColumn","ReactDOM","getElementById","ENTROPY","ENTROPY_8BIT","REDS","opacity","color_type","invert","color_hex","convertHex","step_size","max_colors","hex","parseInt","substring","int_to_color","v","round","shadeHexColor","percent","f","p","R","G","B","componentToHex","c","g","coordinates"],"mappings":"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CA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UA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","file":"static/js/main.0ea339c4.chunk.js","sourcesContent":["/**\r\n * Datetime\r\n * ===============\r\n *\r\n * extend the moments class to provide python datetime functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 29, 2020\r\n */\r\n\r\n\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function datetime( value ) {\r\n  var self = moment( value );\r\n\r\n  self.__proto__ = datetime.prototype;\r\n\r\n  return self;\r\n}\r\n\r\ndatetime.prototype.__proto__ = moment.prototype;\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.toString = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.strftime = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.week = function(){\r\n  return `${this.year()}-${this.isoWeek()}`\r\n}\r\n\r\n\r\n/**\r\n *  adds to the date based on the params object\r\n * @param  {objects}  params         'add' parameters with keys of days, months, years, etc.\r\n * @param  {Boolean} [inplace=false] When True, the local copy of the date will be changed.\r\n * @return {datetime}                updated datetime object\r\n */\r\ndatetime.prototype.timedelta = function(params, inplace=false){\r\n\r\n  // avoid mutating the original copy via cloning unless specified otherwise\r\n  var date = this\r\n  if( inplace === false ){\r\n    date = datetime(this)\r\n  }\r\n\r\n  /// retrieve the offset parameters\r\n  const param_keys = Object.keys( params )\r\n\r\n  // add the offset to the date\r\n  for( var i=0; i < param_keys.length; i++ ){\r\n    const pkey = param_keys[i]\r\n    date.add(params[pkey], pkey)\r\n  }\r\n\r\n  return date\r\n}\r\n","/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nvar SemanticUI\r\ntry{ SemanticUI = require('semantic-ui-react') }catch{}\r\n\r\n\r\nexport default class SemanticUILibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Excel = this.Excel.bind(this)\r\n    this.Table = this.Table.bind(this)\r\n    this.Dropdown = this.Dropdown.bind(this)\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n  }\r\n\r\n  Excel( props ){\r\n    return Excel( this.props(props) )\r\n  }\r\n\r\n  Table( props ){\r\n    return Table( this.props(props) )\r\n  }\r\n\r\n  Dropdown( props ){\r\n    return Dropdown( this.props(props) )\r\n  }\r\n\r\n  ToCsv( props ){\r\n    const fileIO = require('../plugins/fileIO')\r\n    return fileIO.ToCsv( {...this.props(props), ...{button: SemanticUI.Button}})\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n// returns the excel reader using teh Semantic UI Framework for input controls\r\nexport function Excel( props ){\r\n\r\n  var Excel = props.data.react.Excel\r\n\r\n  if( SemanticUI === undefined ){\r\n    return <Excel />\r\n  }\r\n\r\n  return(\r\n    <Excel\r\n      {...props}\r\n      button = {SemanticUI.Button}\r\n      buttonStyle = {{margin:0}}\r\n      buttonProps = {{...{color: 'blue'}, ...props.buttonProps}}\r\n\r\n      input = {SemanticUI.Input}\r\n      inputStyle = {{margin:0}}\r\n      inputProps = {{icon: 'file', placeholder: 'xlsx, csv, ...' }}\r\n      />\r\n    )\r\n}\r\n\r\n\r\n\r\n// returns a table formatted using the Semantic UI table Framework\r\nexport function Table(props){\r\n\r\n  var Table = props.data.react.Table\r\n\r\n  if( SemanticUI === undefined ) return Table\r\n\r\n  return(\r\n    <Table\r\n      {...props}\r\n      table = {SemanticUI.Table}\r\n      th = {SemanticUI.Table.HeaderCell}\r\n      thead = {SemanticUI.Table.Header}\r\n      td = {SemanticUI.Table.Cell}\r\n      tr = {SemanticUI.Table.Row}\r\n      body = {SemanticUI.Table.Body}\r\n\r\n      button = {SemanticUI.Table.Button}\r\n      image = {SemanticUI.Table.Image}\r\n      icon = {SemanticUI.Icon}\r\n      checkbox = {SemanticUI.Checkbox}\r\n      />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function Dropdown( props ){\r\n\r\n  // set ascending order as a default for dropdown content\r\n  var ascending = true\r\n  if( props.ascending !== undefined ) ascending = props.ascending\r\n\r\n\r\n  // retrieve the unique calues from the specified column\r\n  var values\r\n  switch( props.plottype ){\r\n    case 'column':\r\n      values = props.data.columns\r\n      break\r\n\r\n    case 'value' :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n\r\n    default :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n  }\r\n\r\n  var options = []\r\n\r\n  // push the values into the array formatted for the dropdown menu\r\n  values.forEach( element => options.push({\r\n     key:  element, text: element, value: element\r\n  }) )\r\n\r\n  const child_props = props\r\n  delete child_props.data\r\n\r\n  return(\r\n    <SemanticUI.Form.Field\r\n      {...child_props}\r\n      key={`dropdown-${props.column}`}\r\n      control={SemanticUI.Select}\r\n      label={props.column}\r\n      options={options}\r\n      search={true}\r\n      clearable={true}\r\n      multiple={(props.multiple === undefined) ? false : props.multiple}\r\n      placeholder={props.column}\r\n      onChange={(e, d) => (props.callback !== undefined) ? props.callback({[props.column]: d.value}) : null}\r\n    />\r\n  )\r\n}\r\n\r\n// <SemanticUI.Dropdown\r\n//   {...child_props}\r\n//   options={options}\r\n//   key={`dropdown-${props.column}`}\r\n//   />\r\n","/*!\r\n\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport {ExcelRenderer} from 'react-excel-renderer';\r\n\r\nimport {Button, Input} from '../framework/Components'\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\n// export default function DefaultFunction(){ console.log('not implemented')}\r\n\r\nexport default class Excel extends React.Component{\r\n\r\n\r\n  constructor( props ) {\r\n    super(props)\r\n\r\n    this.state = { name: 'excel', filename: '' }\r\n  }\r\n\r\n  // returns the React components used to select the csv file for parsing\r\n  // and to display the name of the file in an input component\r\n  render(){\r\n\r\n    var fileInputRef = React.createRef();\r\n\r\n    console.log( 'button props', this.props)\r\n    return (\r\n      <>\r\n        <Button\r\n          {...this.props.buttonProps}\r\n          component= {this.props.button}\r\n          key={`${this.state.name}-Button`}\r\n          style={this.props.buttonStyle}\r\n          onClick={() => fileInputRef.current.click()}\r\n          defaultValue={this.props.defaultValue === undefined ? 'Upload' : this.props.defaultValue}\r\n          />\r\n\r\n        <input\r\n          key={`${this.state.name}-hidden-input`}\r\n          type=\"file\"\r\n          hidden\r\n          ref={fileInputRef}\r\n          onChange={(event) => this.fileHandler(event) }\r\n          onClick={(event)=> { event.target.value = null }}\r\n          style={{\"padding\":\"10px\"}} />\r\n\r\n\r\n        <Input\r\n          {...this.props.inputProps}\r\n          component= {this.props.input}\r\n          style={{...this.props.inputStyle, ...{\"paddingTop\":\"0px\"}}}\r\n          key={`${this.state.name}-input`}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={this.state.filename}\r\n          readOnly\r\n          />\r\n      </>\r\n    )\r\n\r\n  }\r\n\r\n  // parses the selected file. An error is thrown when this\r\n  // routine fails. Otherwise a jsonArray object is returned\r\n  // via the callback function\r\n  fileHandler( event ){\r\n\r\n    if(event.target.files.length){\r\n\r\n      const fileObj = event.target.files[0];\r\n      this.setState( {filename: fileObj.name} )\r\n\r\n      ExcelRenderer(fileObj, (err, response) => {\r\n\r\n        if(err){\r\n          alert('csv parsing error: ' + err);\r\n        }\r\n        else{\r\n\r\n          var data = response.rows\r\n          var columns\r\n\r\n          // assume that the first row contains a header\r\n          if( this.props.header !== false ){\r\n              columns = data[0]\r\n              data = data.splice(1)\r\n          }\r\n\r\n          // convert the data to a json array\r\n          const json_array = new jsonArray(data)\r\n\r\n          // set the column names when defined\r\n          if( columns !== undefined ) json_array.columns = columns\r\n\r\n\r\n          if( this.props.callback !== undefined ){\r\n            this.props.callback( json_array )\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * React Library Framework\r\n * =========================\r\n *\r\n * Class used to store a global copy of the json array so it\r\n * can be automatically included as a prop into the desired\r\n * react component. This Framework is intended to be extended\r\n * upon for each component library\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 28, 2020\r\n *\r\n */\r\n\r\n\r\nexport default class ReactLibraryFramework{\r\n\r\n  constructor(data){\r\n    // cast the data to a json_array data type\r\n    this.data = data\r\n  }\r\n\r\n  props( props ){\r\n    return {\r\n      ...props,\r\n      ...{\r\n        data: this.data\r\n      }}\r\n  }\r\n\r\n}\r\n","/**\r\n * cSV to jsonArray\r\n * ==================\r\n *\r\n * pluggin that supports the json to csv module. This converts the a\r\n * csv file stored remotely into a json Array\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 20, 2020\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport toCsv from './extract'\r\n\r\n// import papaparser when available\r\nvar parser\r\ntry{ parser = require(\"papaparse\"); }catch{}\r\n\r\nvar http = require(\"http\"), zlib = require(\"zlib\");\r\n\r\n\r\nexport default class fromFileLibrary{\r\n  constructor(data){\r\n\r\n    this.json_array = data\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.fromUrl = this.fromUrl.bind(this)\r\n    this.toCsv = this.toCsv.bind(this)\r\n  }\r\n\r\n  async fromUrl( url, callback, params={} ){\r\n\r\n    // // retrieve the data from the url and parse out the text\r\n    // const res = await fetch( url )\r\n    // var text = await res.text();\r\n    //\r\n    // // parse the csv and return a json array containing the data\r\n    // return from_file(text, {header: true})\r\n\r\n    return from_url( url, callback, params )\r\n  }\r\n\r\n  toCsv( filename='file.csv' ){\r\n    toCsv(this.json_array, filename)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Returns a json array with the contents of the csv file\r\n * provided at the url address\r\n * @param  {string} url url address where the data is stored\r\n * @return {Array}     jsonArray containing the csv data\r\n */\r\nexport function from_file( file, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  const data = parser.parse(\r\n    file,\r\n    { ...{params},\r\n      ...{\r\n        header: true\r\n      }\r\n  })\r\n\r\n  // console.log( data )\r\n  return new jsonArray( data.data )\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  // var data\r\n\r\n  return await parser.parse(\r\n    url,\r\n    { ...{params},\r\n      ...{\r\n        download: true,\r\n        header: true,\r\n        complete: function(results) {\r\n          if( callback !== undefined ){\r\n\r\n            // convert to a json Array and remove all missing rows\r\n            var json_array = new jsonArray( results.data )\r\n            json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n            // perform callback to update parent state\r\n            callback( json_array )\r\n          }\r\n        }\r\n\r\n      }\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_gz_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n  // buffer to store the streamed decompression\r\n  var buffer = [];\r\n\r\n  http.get(url, function(res) {\r\n      // pipe the response into the gunzip to decompress\r\n      var gunzip = zlib.createGunzip();\r\n      res.pipe(gunzip);\r\n\r\n      gunzip.on('data', function(data) {\r\n          // decompression chunk ready, add it to the buffer\r\n          buffer.push(data.toString())\r\n\r\n      }).on(\"end\", function() {\r\n        parser.parse(\r\n          buffer.join(\"\"),\r\n          { ...{params},\r\n            ...{\r\n              header: true,\r\n              complete: function(results) {\r\n                // console.log( results )\r\n\r\n                var data = results.data\r\n                data = data.filter( row => row.VALUE !== '1')\r\n\r\n\r\n                if( callback !== undefined ){\r\n                  // convert to a json Array and remove all missing rows\r\n                  var json_array = new jsonArray( data )\r\n                  // json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n                  // perform callback to update parent state\r\n                  callback( json_array )\r\n                }\r\n              }\r\n\r\n            }\r\n        })\r\n\r\n      }).on(\"error\", function(e) {\r\n        console.log( 'failed' )\r\n          callback(e);\r\n      })\r\n  }).on('error', function(e) {\r\n    console.log( 'failed' )\r\n      callback(e)\r\n  });\r\n\r\n}\r\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport DataTypes from './data_types/dtypes';\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\n\r\nexport default class Series extends Object {\r\n\r\n  constructor(props={}) {\r\n    super()\r\n\r\n    const keys = Object.keys(props)\r\n\r\n    if( keys.includes('index') & keys.includes('value') ){\r\n      for( var i=0; i < props.value.length; i++ ){\r\n        this[props.index[i]] = props.value[i]\r\n      }\r\n    }\r\n\r\n    if( keys.includes('object') ){\r\n      const keys = Object.keys(props.object)\r\n      for( i=0; i < keys.length; i++ ){\r\n        this[keys[i]] = props.object[keys[i]]\r\n      }\r\n    }\r\n\r\n    // allow for mixed datatype, referenced by the keys.\r\n    // This is only applicable when the data types are provided.\r\n    // Otherwise, it is assumed that the data is from a single\r\n    // data type which will be parsed out\r\n    if( props.dtypes !== undefined ){\r\n      this.dtypes = props.dtypes\r\n      this.dtype = 'mixed'\r\n\r\n    }else{\r\n      this.dtype = props.dtype\r\n\r\n      // parse the data type from the data when one is not provided\r\n      if( this.dtype === undefined ){\r\n        this.dtype = new DataTypes().parse_series( this )\r\n      }\r\n\r\n    }\r\n\r\n    this.name = props.name\r\n    // this.dtype.parse_series( this )\r\n  }\r\n\r\n  get index(){\r\n    return Object.keys(this.data)\r\n  }\r\n\r\n  get values(){\r\n    return Object.values(this.data)\r\n  }\r\n\r\n  // copies the local data removes all metadata elements\r\n  get data(){\r\n    var data = {...this}\r\n    delete data.dtype\r\n    delete data.dtypes\r\n    delete data.name\r\n\r\n    return data\r\n  }\r\n\r\n\r\n  /**\r\n   * Discretizes (bins) the values for a specific column\r\n   * based on the users specifications\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] parameters to define the binning\r\n   * @return {Object}             jsonArray containing the binning results\r\n   */\r\n  binning( params={} ){\r\n\r\n    // placeholder for the bins\r\n    var bins = [];\r\n\r\n    // extract the parameters\r\n    const param_keys = Object.keys(params)\r\n\r\n    const min = this.min\r\n\r\n    // set defaults when none are provided\r\n    if( !param_keys.includes('bins') ) params['bins'] = 10\r\n    if( !param_keys.includes('interval') ){\r\n      const max = this.max\r\n      params['interval'] = (max-min)/params['bins']\r\n    }\r\n\r\n\r\n    //Setup Bins\r\n    for(var i = 0; i < params['bins']; i++ ){\r\n      bins.push({\r\n        binNum: i,\r\n        value: min + i*params['interval'],\r\n        max: min + (i+1)*params['interval'],\r\n        count: 0\r\n      })\r\n    }\r\n\r\n    //Loop through data and add to bin's count\r\n    for (i = 0; i < this.values.length; i++){\r\n      var item = this.values[i];\r\n\r\n      for (var j = 0; j < bins.length; j++){\r\n        var bin = bins[j];\r\n\r\n        // condition logic to account for the first step\r\n        // to include the minimum value\r\n        var logic = item > bin.value && item <= bin.max\r\n        if( j === 0) logic = item >= bin.value && item <= bin.max\r\n\r\n        if(logic){\r\n          bin.count++;\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( bins )\r\n  }\r\n\r\n\r\n  /**\r\n   * Counts the number of occurences for each unique value in the\r\n   * specified column and returns a jsonArray of the statistics\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] parameters to define the binning\r\n   * @return {Object}             jsonArray containing the binning results\r\n   */\r\n  get count(){\r\n\r\n    // placeholder for the results\r\n    var results = {};\r\n\r\n    const unique_values = this.unique()\r\n\r\n    // setup the results\r\n    for(var i = 0; i < unique_values.length; i++ ){\r\n      const value = unique_values[i]\r\n      results[value] = this.values.filter(item => item === value).length\r\n    }\r\n\r\n    return new Series({object: results})\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the number of occurences for each unique value\r\n   * @param  {Boolean} [ordered=false] When True, the unique values are returned in sorted order\r\n   * @return {Array}                   Array of unique values\r\n   */\r\n  unique( ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    var unique_values = [...new Set([...this.values])]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtype === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        // order string type\r\n        if( this.dtype === 'string' ){\r\n          return unique_values.sort()\r\n        }\r\n\r\n        try{\r\n          unique_values = unique_values.map( x => +x)\r\n          unique_values = unique_values.sort(function(a,b){return a - b})\r\n        }catch{\r\n          // default to the standard sort\r\n          unique_values.sort()\r\n        }\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  get max(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.max(...this.values)\r\n  }\r\n\r\n  get min(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.min(...this.values)\r\n  }\r\n\r\n  get sum(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return this.values.reduce((a,b) => a + b, 0)\r\n  }\r\n\r\n  get mean(){\r\n    if( this.values.length === 1 ) return this[0]\r\n    return this.sum / this.values.length\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Applies the function using the variable and the local series\r\n   * as inputs. this is intended for arithmetic Functions\r\n   * @param  {mixed} variable variable or series\r\n   * @param  {function} func     function to apply on the local and variable data\r\n   * @return {Series}            Series containing the resuting data\r\n   */\r\n  compute(variable, func){\r\n\r\n    var data = {...this}\r\n\r\n    var obj = Number(variable)\r\n\r\n    var key, value\r\n    \r\n    // apply the function on the objects sharing the same key\r\n    if( isNaN(obj) ){\r\n\r\n      for ([key, value] of Object.entries(variable)) {\r\n        var val = data[key]\r\n        if( val === undefined ) val = 0\r\n        data[key] = func( val, value)\r\n      }\r\n\r\n    // perform the function using the object value directly\r\n    }else{\r\n      for ([key, value] of Object.entries(data)) {\r\n        data[key] = func( value, obj)\r\n      }\r\n    }\r\n\r\n    // return the data as a series\r\n    return new Series({\r\n      object: data,\r\n      dtype: this.dtype,\r\n      dtypes: this.dtypes,\r\n      name: this.name,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Performs addition on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  add( variable ){\r\n    return this.compute( variable, (x, y) => {return x + y} )\r\n  }\r\n\r\n  /**\r\n   * Performs subtraction on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  sub( variable ){\r\n    return this.compute( variable, (x, y) => {return x - y} )\r\n  }\r\n\r\n  /**\r\n   * Performs multiplication on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  multiply( variable ){\r\n    return this.compute( variable, (x, y) => {return x * y} )\r\n  }\r\n\r\n  /**\r\n   * Performs division on the local Series with the variable\r\n   * data. The variable can be an integer, string, or another\r\n   * series object. When a Series is given, the data is added\r\n   * based on the index\r\n   * @param  {mixed} variable input data (supports mixed type)\r\n   * @return {Series}         Series containing the results\r\n   */\r\n  divide( variable ){\r\n    return this.compute( variable, (x, y) => {return x/y} )\r\n  }\r\n\r\n  get react(){ return new ReactComponents(this) }\r\n\r\n}\r\n","var map = {\n\t\"./jsonArray/data\": 263,\n\t\"./jsonArray/data.json\": 263,\n\t\"./jsonArray/yield_timeframe\": 264,\n\t\"./jsonArray/yield_timeframe.json\": 264\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1231;","export default __webpack_public_path__ + \"static/media/install.727080ea.py\";","/**\r\n * Column Filter\r\n * ==============\r\n *\r\n * adds a dropdown menu to the column header, that can\r\n * be used to filter the column contents\r\n *\r\n * @author Nik Sumikawa\r\n * @Date Dec 1, 2020\r\n *\r\n */\r\n\r\nimport React from 'react';\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { Dropdown, Segment } from 'semantic-ui-react'\r\n\r\nexport default function ColumnFilter( props ){\r\n\r\n  const unique_values = props.data.unique(props.col, true)\r\n  const options = unique_values.map(r => {\r\n    return {\r\n      key:`${r}-${_.uniqueId()}`,\r\n      text:`${r}`,\r\n      value:`${r}`,\r\n      style: {fontSize:'12px', padding: '0px', margin:0}\r\n    }})\r\n\r\n  var headerCellOnClick = null\r\n  if( props.columnOnClick !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    headerCellOnClick = () => props.columnOnClick({\r\n      col_name: props.col,\r\n      col_number: props.col_number\r\n    })\r\n  }\r\n\r\n\r\n  var columnFilterOnChange = null\r\n  if( props.columnFilterOnChange !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    columnFilterOnChange = (e, val) => props.columnFilterOnChange({\r\n      col_name: props.col,\r\n      col_number: props.col_number,\r\n      value: val.value\r\n    })\r\n  }\r\n\r\n  var filterValues\r\n  if( props.filters !== undefined ){\r\n    filterValues = (props.filters\r\n      .filter(r => r.col_name === props.col)\r\n      .map(r => r.value)\r\n    )\r\n\r\n    if( filterValues.length === 0 ){\r\n      filterValues = undefined\r\n    }else{\r\n      filterValues = filterValues[0]\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <Segment.Group\r\n      key={`Header-SeggyGroup-${props.col}`}\r\n      raised={false}\r\n      compact\r\n\r\n      style={{\r\n        width:'100%',\r\n        padding:0,\r\n        margin:0,\r\n        boxShadow: 'none',\r\n        border: '0',\r\n        backgroundColor:'transparent'}}>\r\n\r\n      <Segment\r\n        key={`Header-Title-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        onClick={headerCellOnClick}\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}} >\r\n        {props.col}\r\n      </Segment>\r\n\r\n      <Segment\r\n        key={`Header-Filter-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}}\r\n        >\r\n\r\n        <Dropdown\r\n          key={`Header-Dropdown-${props.col}}`}\r\n          style={{\r\n            margin:0,\r\n            padding:'0',\r\n            maxWidth: '100px',\r\n            minHeight: '10px',\r\n            fontSize: '10px',\r\n            color: '#212121'\r\n          }}\r\n          placeholder={'filter...'}\r\n          multiple\r\n          selection\r\n          fluid\r\n          value={filterValues}\r\n          onChange={columnFilterOnChange}\r\n          options={options}\r\n          icon= {null}\r\n\r\n\r\n          />\r\n      </Segment>\r\n    </Segment.Group>\r\n\r\n\r\n  )\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Header, Row} from '../../framework/Components'\r\n\r\nimport ColumnFilter from './ColumnFilter'\r\n\r\nexport function DataFrameHeader( props ) {\r\n\r\n  var json_array = props.table_data\r\n\r\n  // when no columns are provided as props, pull them from the data source\r\n  var columns = props.columns\r\n  if( columns === undefined ) columns = json_array.columns\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n  var row = []\r\n  var col_offset = 0\r\n\r\n  // add a leading column when specific parameters are provided\r\n  // in the table object\r\n  if( props.accordian === true ){\r\n    row.push(\r\n      <HeaderCell\r\n        {...props.thProps}\r\n        style={{...{textAlign:'center'}, ...props.thStyle}}\r\n        component={props.th}\r\n        defaultValue = {''}\r\n        key = {`${props.tableName}-th-0`}\r\n        />\r\n    )\r\n    col_offset = col_offset + 1\r\n  }\r\n\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n      const col_number = i + col_offset\r\n\r\n      //map the column name when the mapping exists\r\n      if( props.columnNames !== undefined ){\r\n        if( Object.keys(props.columnNames).includes(col) ){\r\n          col = props.columnNames[col]\r\n        }\r\n      }\r\n\r\n      var headerCellOnClick = null\r\n      if( props.columnOnClick !== undefined ){\r\n        // persist the onClick inputs to avoid mutation\r\n        const col_name = col\r\n        headerCellOnClick = () => props.columnOnClick({\r\n          col_name: col_name,\r\n          col_number: col_number\r\n        })\r\n      }\r\n\r\n      var ColComponent = col\r\n      if( props.columnFilterOnChange !== undefined ){\r\n        headerCellOnClick = null\r\n\r\n        ColComponent = (\r\n          <ColumnFilter\r\n            {...props}\r\n            key = {`Header-ColFilter-${col}`}\r\n            col = {col}\r\n            col_number = {col_number}\r\n            />\r\n        )\r\n      }\r\n\r\n      // sorted={value === props.sortBy ? direction : null}\r\n\r\n      //populate the header cell\r\n      row.push(\r\n        <HeaderCell\r\n          {...props.thProps}\r\n          style={{...{textAlign:'center'}, ...props.thStyle}}\r\n          component={props.th}\r\n          defaultValue = {ColComponent}\r\n          key = {`${props.tableName}-th-${col_number}`}\r\n          onClick={headerCellOnClick}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n  // define the header row\r\n  const headerrow = (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={row}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Returns the Table Header for data in Series Format\r\n * @param       {Object} props Parameter object\r\n * @constructor\r\n */\r\nexport function SeriesHeader( props ) {\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n  var data = props.table_data\r\n\r\n  // attempt to pull the name out of the series. Default to\r\n  // value when it's not available\r\n  var name = data.name\r\n  if( name === undefined ) name = 'value'\r\n\r\n  var row = []\r\n  const columns = ['', name]\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n\r\n\r\n      var headerCellOnClick = null\r\n      if( props.columnOnClick !== undefined ){\r\n        // persist the onClick inputs to avoid mutation\r\n        const col_name = col\r\n        const col_number = i\r\n        headerCellOnClick = () => props.columnOnClick({\r\n          col_name: col_name,\r\n          col_number: col_number\r\n        })\r\n      }\r\n\r\n      //populate the header cell\r\n      row.push(\r\n        <HeaderCell\r\n          {...props.thProps}\r\n          style={{...{textAlign:'center'}, ...props.thStyle}}\r\n          component={props.th}\r\n          defaultValue = {col}\r\n          key = {`${props.tableName}-th-${i}`}\r\n          onClick={headerCellOnClick}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n  // define the header row\r\n  const headerrow = (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={row}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {fillAndEdge} from '../../../colors/Colors'\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a svg object containing a colored square\r\n * @param       {string} colorHex string containing the hex color value\r\n * @constructor\r\n */\r\nexport default function coloredSquare( colorHex, props ){\r\n\r\n  if( colorHex === undefined ) colorHex = '#B0B0B0'\r\n\r\n  const colors = fillAndEdge(colorHex)\r\n\r\n  return(\r\n    <svg preserveAspectRatio=\"xMinYMin meet\"\r\n      viewBox=\"0, 0, 40, 20\"\r\n      transform=\"scale(1, -1)\"\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"40px\",\r\n        height: '100%',\r\n        overflow: \"visible\",\r\n      }}>\r\n\r\n      <rect\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"40\"\r\n        height=\"100%\"\r\n        stroke={colors.edge}\r\n        strokeWidth=\"1\"\r\n        fill={colors.fill}\r\n        />\r\n\r\n    </svg>\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n/**\r\n * returns the onClick function when specified. Defaults to undefined\r\n * @param  {object} json_table  jsonTable object\r\n * @param  {string} col         column name\r\n * @param  {integer} row        row number\r\n * @return {function}           onClick function\r\n */\r\nexport default function onClickFunc( props ){\r\n\r\n  var onClick\r\n\r\n  // select the onClick function when provided globally\r\n  if( props.onClick !== undefined ){\r\n    onClick = () => props.onClick({\r\n      row: props.row_idx,\r\n      col: props.col,\r\n      value: props.value,\r\n      row_data: props.row\r\n      })\r\n  }\r\n\r\n  // extract the onClick function for the specific cell\r\n  if( props.cellOnClick !== undefined ){\r\n\r\n    // add the onClick function when one exists for the column\r\n    const onClickColumns = Object.keys(props.cellOnClick)\r\n    if( onClickColumns.includes(props.col) ){\r\n      onClick = () => props.cellOnClick[props.col]({\r\n        row: props.row_idx,\r\n        col: props.col,\r\n        value: props.value,\r\n        row_data: props.row\r\n        })\r\n    }\r\n  }\r\n\r\n  return onClick\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {Button, Image, Icon, Checkbox} from '../../framework/Components'\r\n\r\nimport valueToString from '../../../../data_types/format/valueToString'\r\n\r\nimport booleanCircle from './booleanCircle'\r\nimport coloredSquare from './coloredSquare'\r\nimport onClickFunc from './onClickFunc'\r\n\r\n\r\nexport default function cellType( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n\r\n  const format = new valueToString()\r\n\r\n  //add the onclick fundtion. Default to do nothing when the function does not exist\r\n  var cellOnClick = onClickFunc( props )\r\n  var componentOnClick = onClickFunc( props )\r\n\r\n  var value = props.value\r\n  var cellContent\r\n\r\n  switch( props.dtype ){\r\n\r\n    case 'button':\r\n      cellOnClick = null\r\n\r\n      cellContent = (\r\n        <Button\r\n          {...props.buttonProps}\r\n          style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n          component={props.button}\r\n          key={`${props.tableName}-button-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'image':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Image\r\n          {...props.imageProps}\r\n          style={{...{textAlign:'center'}, ...props.imageStyle}}\r\n          component={props.image}\r\n          key={`${props.tableName}-image-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'icon':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Icon\r\n          {...props.IconProps}\r\n          key={`${props.tableName}-icon-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.iconStyle}}\r\n          component={props.icon}\r\n          name={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'checkbox':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Checkbox\r\n          {...props.CheckboxProps}\r\n          key={`${props.tableName}-checkbox-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.checkboxStyle}}\r\n          component={props.checkbox}\r\n          checked={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    // case 'function':\r\n    //   return props.table.function[col_name](props)\r\n\r\n    case 'boolean':\r\n      cellOnClick = null\r\n      cellContent = booleanCircle(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'square':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'hexcolor':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'text':\r\n      cellContent = <p style={{whiteSpace:'pre'}}>{value}</p>\r\n      break\r\n\r\n    case 'float':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'percent':\r\n    case 'percentage':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'scientific':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'datetime':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'table':\r\n      cellContent = value\r\n      break\r\n\r\n    default:\r\n      cellContent = <p style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}}>{value}</p>\r\n  }\r\n\r\n\r\n  return {\r\n    cellContent: cellContent,\r\n    cellOnClick: cellOnClick\r\n  }\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {booleanColor} from '../../../colors/Colors'\r\n\r\n\r\n/**\r\n * Creates a green or red circle based on the value of the cell\r\n * @constructor\r\n */\r\nexport default function booleanCircle(value, onClick, props){\r\n\r\n  var colors = booleanColor( value )\r\n\r\n  var radius = 20\r\n  if( props.radius !== undefined ) radius = props.radius\r\n\r\n  return (\r\n\r\n      <svg preserveAspectRatio=\"xMinYMin meet\"\r\n           viewBox={`0, 0, ${radius}, ${radius}`}\r\n           transform=\"scale(1, -1)\"\r\n           style={{display: \"inline-block\",\r\n                   width: `${radius+4}px`,\r\n                   overflow: \"visible\",\r\n           }}>\r\n\r\n        <circle\r\n          cx={`${radius/2 - 2}`}\r\n          cy={`${radius/2 - 2}`}\r\n          r={`${radius/2}`}\r\n          stroke={colors.edge}\r\n          strokeWidth=\"1\"\r\n          fill={colors.fill}\r\n          onClick={onClick}\r\n          />\r\n\r\n       </svg>\r\n )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {Cell as TableCell} from '../../framework/Components'\r\n\r\nimport cellType from './cellType'\r\n\r\n\r\nexport default function Cell( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n  const cell = cellType(props)\r\n\r\n  var style = {textAlign:'center'}\r\n\r\n  // the background color can be provided as a field of table object.\r\n  // The background color parameter requires a json array with the\r\n  // same fields as the data table. What would normally contain the\r\n  // data now contains colors\r\n  if( props.cellBackgroundColor !== undefined ){\r\n    try{\r\n      const color = props.cellBackgroundColor[props.row_idx][props.col]\r\n      if( color !== undefined ) style['backgroundColor'] = color\r\n    }catch{}\r\n  }\r\n\r\n  if( props.cellStyle !== undefined ){\r\n    try{\r\n      style = {\r\n        ...style,\r\n        ...props.cellStyle[props.row_idx][props.col]\r\n\r\n      }\r\n    }catch{}\r\n  }\r\n\r\n  return (\r\n    <TableCell\r\n      {...props.tdProps}\r\n      style={{...props.tdStyle, ...style}}\r\n      component={props.td}\r\n      key = {`${props.tableName}-cell-${props.col}-${props.row_idx}`}\r\n      onClick={cell.cellOnClick}\r\n      defaultValue= {cell.cellContent}\r\n      />\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n\r\n\r\nexport default function Row( props ) {\r\n\r\n    const row_data = props.table_data[props.row_idx]\r\n    const row = []\r\n    for (var i=0; i < props.columns.length; i++ ){\r\n      const col = props.columns[i]\r\n\r\n      var tdProps = {...props.tdProps, ...{}}\r\n      if( props.col_span !== undefined ) tdProps['colSpan'] = props.col_span[col]\r\n      if( props.row_span !== undefined){\r\n        if (Object.keys(props.row_span).includes(col)) tdProps['rowSpan'] = props.row_span[col]\r\n      }\r\n\r\n\r\n      row.push(\r\n        <Cell\r\n          {...props}\r\n          row={row_data}\r\n          value={row_data[col]}\r\n          dtype={props.table_data.dtypes[col]}\r\n          key={`${props.tableName}-cell-${props.row_idx}-${i}`}\r\n          col = {col}\r\n          tdProps={tdProps}\r\n          />\r\n      )\r\n    }\r\n\r\n\r\n    // define the rowOnClick function to standardize the returned data\r\n    var rowOnClick = null\r\n    if( props.rowOnClick !== undefined ){\r\n      rowOnClick = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // set the background color when the row is selected\r\n    var rowStyle = {textAlign:'center'}\r\n\r\n    if((props.alternateStyle === true)&(props.row_idx % 2 === 0) ){\r\n      rowStyle['backgroundColor'] = '#f6fcfe'\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowColor !== undefined ){\r\n      const rows = Object.keys(props.rowColor)\r\n      const idx = row_data.__index__.toString()\r\n      if( rows.includes(idx) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: props.rowColor[idx]}\r\n      }\r\n    }\r\n\r\n    // Add custom row style\r\n    if( props.rowStyle !== undefined ){\r\n      if( props.rowStyle.length > props.row_idx ){\r\n        rowStyle = {...rowStyle, ...props.rowStyle[props.row_idx]}\r\n      }\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowBackgroundColor !== undefined ){\r\n      if( props.rowBackgroundColor.includes(row_data.__index__) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n      }\r\n    }\r\n\r\n    if( props.row_idx === props.selectedRow ){\r\n      rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n    }\r\n\r\n    // return the cell content not wrapped in a row element. This\r\n    // is needed for row extensions such as the accordian rows.\r\n    if( props.cellContentOnly === true ){\r\n      return row\r\n    }\r\n\r\n\r\n    return (\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}--${props.multirow_idx}`}\r\n        onClick={rowOnClick}\r\n        defaultValue={row}\r\n        />\r\n    )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n/**\r\n * Returns a Row of Cell components based on data Formatted\r\n * as a Series\r\n * @param       {Object} props data and style parameters\r\n */\r\nexport default function SeriesRow( props ) {\r\n\r\n  const index = props.table_data.index\r\n  const values = props.table_data.values\r\n\r\n  // format the row data to return in onClick functions\r\n  const row_data = {\r\n    __index__: index[props.row_idx],\r\n    __value__: values[props.row_idx],\r\n  }\r\n\r\n  // default the data type unless the table contains a datatype array\r\n  // which is provided manually for table customization\r\n  var dtype = props.table_data.dtype\r\n  if( props.table_data.dtypes !== undefined ) dtype = props.table_data.dtypes[row_data['__index__']]\r\n\r\n  const row = [\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__index__']}\r\n      dtype={'string'}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${0}`}\r\n      col = {'__index__'}\r\n      />,\r\n\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__value__']}\r\n      dtype={dtype}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${1}`}\r\n      col = {'__value__'}\r\n      />\r\n\r\n  ]\r\n\r\n\r\n\r\n  // define the rowOnClick function to standardize the returned data\r\n  var rowOnClick = null\r\n  if( props.rowOnClick !== undefined ){\r\n    rowOnClick = () => props.rowOnClick({\r\n      row: props.row_idx,\r\n      row_data: row_data\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      key={`${props.tableName}-row--${props.row_idx}`}\r\n      onClick={rowOnClick}\r\n      defaultValue={row}\r\n      />\r\n  )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\n\r\n/**\r\n * Accordian Tables are available after performing the groupby\r\n * function, where both metadata and the json object are available\r\n * based on the split.\r\n *\r\n * The accordian table shows the data based on the split described\r\n * by the parent table\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport default function AccordianRow( props ){\r\n\r\n  // state variable to track the visibility state of the accordian\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const row_data = props.table_data[props.row_idx]\r\n\r\n  // map the rowOnClick function to cellonClick to\r\n  // disable the onClick function of the icon row\r\n  var cellOnClick = {}\r\n  if( props.rowOnClick !== undefined ){\r\n    for( var i=0; i < props.columns.length; i++ ){\r\n      cellOnClick[props.columns[i]] = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // console.log( props.selectedRow, props)\r\n  // set the background color when the row is selected\r\n  var rowStyle = {textAlign:'center'}\r\n  if( props.row_idx === props.selectedRow ){\r\n    rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n  }\r\n\r\n\r\n\r\n  var AccordianTable = row_data.json_obj\r\n\r\n  // when provided, apply the the function to transform the subgroup\r\n  if( props.accordianFunc !== undefined) AccordianTable = props.accordianFunc(AccordianTable)\r\n\r\n  var columns = AccordianTable.columns\r\n  if( props.accordianColumns !== undefined ) columns = props.accordianColumns\r\n\r\n  // select an icon based on the visible flag\r\n  var iconOnClick = () => {setVisible(!visible)}\r\n  var icon = 'caret right'\r\n  var iconColor = 'black'\r\n  if( visible === true ) icon = 'caret down'\r\n  if( AccordianTable.length === 0 ){\r\n    icon = 'ellipsis horizontal'\r\n    iconColor = '#D0D0D0'\r\n    iconOnClick = () => {console.log('no data to unfold')}\r\n  }\r\n\r\n  var AccordianComponent\r\n  if( props.accordianComponent !== undefined ){\r\n\r\n    AccordianComponent = (\r\n      <props.accordianComponent\r\n        {...props}\r\n        row={props.row_idx}\r\n        row_data={row_data}\r\n        />\r\n    )\r\n\r\n  }else{\r\n\r\n    AccordianComponent = (\r\n      <AccordianTable.react.semanticUI.Table\r\n        tableName={`accordianTable - ${props.tableName} - ${props.row_idx}`}\r\n        tableStyle={{padding:0, margin:0}}\r\n        columns={columns}\r\n        thStyle={{margin:0, padding:0}}\r\n        tdStyle={{margin:0, padding:0}}\r\n        showHeader={props.accordianHeader}\r\n        radius={10}\r\n        {...props.accordianProps}\r\n        />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}`}\r\n        defaultValue={\r\n          <>\r\n            <Cell\r\n              {...props}\r\n              tdProps={{rowSpan:(visible) ? 2 : 1}}\r\n              style={{maxWidth:'50px'}}\r\n              row={props.row_idx}\r\n              value={icon}\r\n              dtype={'icon'}\r\n              key={`${props.tableName}-accordian-control-${props.row_idx}`}\r\n              col = {'accordianEnable'}\r\n              onClick={iconOnClick}\r\n              iconStyle={{color:iconColor}}\r\n              />\r\n\r\n            <Row\r\n              {...props}\r\n              cellContentOnly={true}\r\n              cellOnClick={cellOnClick}\r\n              />\r\n          </>\r\n        }\r\n        />\r\n\r\n\r\n\r\n        { visible ?\r\n          <TableRow\r\n            {...props.trProps}\r\n            component={props.tr}\r\n            key={`${props.tableName}-accordian-row-${props.row_idx}`}\r\n            defaultValue={\r\n              <Cell\r\n                {...props}\r\n                tdProps={{colSpan:props.columns.length}}\r\n                tdStyle={{margin:0, padding:0}}\r\n                row={props.row_idx}\r\n                dtype={'table'}\r\n                key={`${props.tableName}-accordian-dropodwn-${props.row_idx}-${-1}`}\r\n                col = {'accordianTable'}\r\n                value={AccordianComponent}\r\n                />\r\n\r\n\r\n            }\r\n            />\r\n          : null\r\n        }\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\n\r\nimport Row from './Row'\r\n\r\n\r\nexport default function MultiRow( props ) {\r\n\r\n  const modProps = rowSpan(props)\r\n\r\n  var MultiRow = [Row(modProps)]\r\n\r\n  for( var i=0; i < props.multirow.length; i++ ){\r\n    const columns = props.multirow[i]\r\n\r\n    MultiRow.push(\r\n      Row({\r\n        ...props,\r\n        ...{\r\n          columns: columns,\r\n          multirow_idx: i,\r\n          col_span: colSpan(props, columns),\r\n          tdStyle: {\r\n            ...{textAlign: 'left'},\r\n            ...props.tdStyle,\r\n            ...props.multirowStyle\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n  }\r\n\r\n  return MultiRow\r\n}\r\n\r\n\r\nfunction colSpan( props, columns ){\r\n\r\n  var span_len = props.columns.length\r\n  if( props.multirowSpan !== undefined ) span_len = span_len - props.multirowSpan.length\r\n\r\n  // compute the lower bound on column span width\r\n  const span = Math.ceil(span_len/columns.length)\r\n\r\n  var colSpan = {}\r\n  for( var i=0; i < columns.length; i++ ){\r\n    colSpan[columns[i]] = span\r\n\r\n    // shrink the last column when span does not align properly\r\n    if(  (columns.length - i*span) < 0 ){\r\n      colSpan[columns[i]] = columns.length - (i-1)*span\r\n    }\r\n  }\r\n\r\n  return colSpan\r\n\r\n}\r\n\r\nfunction rowSpan( props ){\r\n\r\n  var modProps = {...props, ...{}}\r\n\r\n\r\n  if( props.multirowSpan !== undefined ){\r\n\r\n    // const multiRowCol = [...new Set(props.multirowSpan.filter(x => props.columns.includes(x)))]\r\n    // const colDiff = [...new Set(props.multirowSpan.filter(x => !props.columns.includes(x)))]\r\n    //\r\n    // modProps.columns = multiRowCol.concat(colDiff)\r\n\r\n    modProps['row_span'] = {}\r\n    props.multirowSpan.map(r => modProps['row_span'][r] = props.multirow.length + 1 )\r\n  }\r\n\r\n  return modProps\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Series from '../../../../Series'\r\n\r\nimport {Body, Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\nimport SeriesRow from './SeriesRow'\r\nimport AccordianRow from './AccordianRow'\r\nimport MultiRow from './MultiRow'\r\n\r\nexport default function TableBody( props ) {\r\n\r\n  const [selectedRow, setSelectedRow] = useState(props.selectedRow)\r\n  const [onHover, setOnHover] = useState(false)\r\n\r\n  // default to using the DataFrame Row Format\r\n  var Component = Row\r\n  var rows = props.table_data.length\r\n\r\n  // when lazy loading is implemented, limited the number of rows to render\r\n  if( (props.lazyLoading === true)&(props.renderedRows < rows) ){\r\n    rows = props.renderedRows\r\n  }\r\n\r\n  // overwrite the component with Accordian rows when specified\r\n  if( props.accordian === true ) Component = AccordianRow\r\n\r\n  // change component types when the data is of series type\r\n  if( props.table_data instanceof Series ){\r\n    Component = SeriesRow\r\n    rows = props.table_data.values.length\r\n  }\r\n\r\n  // change component types to MultiRow when the multirow props are present\r\n  if( props.multirow !== undefined ){\r\n    Component = MultiRow\r\n  }\r\n\r\n  const body = []\r\n  for (var i=0; i < rows; i++ ){\r\n\r\n    body.push(\r\n      <Component\r\n        {...props}\r\n        key={`${props.tableName}-Row-${i}`}\r\n        row_idx = {i}\r\n        selectedRow = {selectedRow}\r\n        setSelectedRow = {(value) => setSelectedRow(value)}\r\n        />\r\n    )\r\n  }\r\n\r\n  // add a row to show more rows, when there are more rows to show\r\n  if( (props.lazyLoading === true)&(props.renderedRows < props.table_data.length) ){\r\n    body.push(\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--lazyloading`}\r\n        onClick={() => {\r\n          const step = (props.lazyLoadingStep === undefined ? 100 : props.lazyLoadingStep)\r\n          props.setRenderedRows(props.renderedRows + step)\r\n        }}\r\n        defaultValue={\r\n          <td\r\n            onMouseOver={()=>setOnHover(true)}\r\n            onMouseOut={()=>setOnHover(false)}\r\n            style={{backgroundColor: (onHover ? '#AFEEEE' : '#F0FFFF')}}\r\n            colSpan={props.columns.length}>\r\n            <h3>show more rows</h3>\r\n          </td>\r\n        }\r\n        />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Body\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.body}\r\n      key={`${props.tableName}-body`}\r\n      defaultValue={body}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport Series from '../../../Series'\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport {Table as TableComponent} from '../framework/Components'\r\nimport {SeriesHeader, DataFrameHeader} from './header'\r\nimport TableBody from './body'\r\n\r\n\r\n/**\r\n * Integrated table component  build into the jsonArray\r\n * @param       {String} props.tableName\r\n * @param       {Component} props.table base html component that can be overwritten by Framework component\r\n * @param       {Component} props.tr    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.td    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.th    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.body  base html component that can be overwritten by Framework component\r\n * @param       {Component} props.button base html component that can be overwritten by Framework component\r\n * @param       {function} props.columnOnClick  function exectued when a column is selected\r\n * @param       {function} props.rowOnClick     function exectued when a row is selected\r\n * @param       {function} props.cellOnClick    function exectued when a cell is selected\r\n * @param       {Boolean} props.accordian  Not implemented\r\n * @param       {Boolean} props.accordianHeader  Not implemented\r\n * @param       {Boolean} props.accordianColumns  Not implemented\r\n * @param       {Boolean} props.accordianFunc  Not implemented\r\n * @param       {Boolean} props.showHeader when True, the table header will be shown\r\n * @param       {Boolean} props.sortable   When True, the table can be sorted by the columns\r\n * @param       {Array} props.columns     Array of column names\r\n * @param       {Array} props.columnNames Array of column names\r\n * @param       {String} props.sortBy     column name that will be presorted\r\n * @param       {String} props.sortAscending  sort column direction\r\n * @param       {boolean} props.lazingLoading  when True, only part of the table will be rendered with the ability to render in steps (lazy loading)\r\n * @param       {Integer} props.lazyLoadingStart  Number of rows to render on init\r\n * @param       {Integer} props.lazyLoadingStep   Number of rows to add when rerendering\r\n * @param       {Array} props.rowBackgroundColor set the background color of multiple rows based on the index number\r\n * @constructor\r\n */\r\nexport default class Table extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Table = this.Table.bind(this)\r\n  }\r\n\r\n  Table( props ){\r\n\r\n    // Render the table with a Series data structure\r\n    if( this.data instanceof Series ){\r\n      return SeriesTable( this.props(props) )\r\n    }\r\n\r\n    // default to render the table as a DataFrame type\r\n    return Render( this.props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the table based on the data and parameters specified in the\r\n // json table attribute. This was moved to it's own function in order\r\n // to be complient with React's requirement for useState functionality\r\n // to be implemented within a function\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport function Render( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n  const [filters, setFilters] = useState(props.filters)\r\n  const [renderedRows, setRenderedRows] = useState((props.lazyLoadingStart === undefined) ? 100 : props.lazyLoadingStart)\r\n\r\n  // cast the data to a json_array data type\r\n  var table_data = props.data\r\n  if( !(table_data instanceof jsonArray) ){\r\n    table_data = new jsonArray(table_data)\r\n  }\r\n\r\n  // pull the column names from the props when available. Default\r\n  // to using all columns in the DataFrame\r\n  var columns = props.columns\r\n  if( columns === undefined ) columns = table_data.columns\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'Table'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnFilterOnChange = props.columnFilterOnChange\r\n  if( props.filterable === true ){\r\n      columnFilterOnChange = (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value.length > 0 ) temp.push( content )\r\n        setFilters( temp )\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  // filter Table based on the values stored in the filter object array\r\n  if( filters !== undefined ){\r\n    for( var i=0; i < filters.length; i ++ ){\r\n\r\n      const filt = filters[i]\r\n      if( !(columns.includes(filt.col_name)) ) continue\r\n      \r\n      table_data = table_data.filter(r => filt.value.includes(r[filt.col_name].toString()) )\r\n    }\r\n    // console.log( table_data)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <DataFrameHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          filters = {filters}\r\n          columnOnClick = {columnOnClick}\r\n          columnFilterOnChange = {columnFilterOnChange}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          renderedRows = {renderedRows}\r\n          setRenderedRows = {setRenderedRows}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the a table for data of Series type\r\n * @param       {Object} props parameters for rendering Table\r\n * @constructor\r\n */\r\nexport function SeriesTable( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  var table_data = props.data\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'SeriesTable'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <SeriesHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columnOnClick = {columnOnClick}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n","/**\r\n * echarts Scatter by\r\n * ==================\r\n *\r\n * groups the data based on values in a given column\r\n * and creates a multicolored scatter plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport {color} from '../../../colors/Colors'\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter from './index'\r\n\r\n/**\r\n * Returns a list of echarts scatter objects colored by the specified att\r\n *\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {string} colorBy    color for grouping the samples\r\n * @return {Array}       Array of x/y cooridnates\r\n */\r\nexport default function scatter_by( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // group samples based on the specified column\r\n  const group = json_array.groupby([props.colorBy])\r\n\r\n  var series = []\r\n\r\n  for( var i=0; i < group.length; i++ ){\r\n\r\n    // extract the color based on the index and format the data\r\n    // from a json_array to a list of x/y coordinates\r\n    const color_value = color( i, 100, 'entropy_8bit' )\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series = series.concat( scatter({\r\n      ...props,\r\n      ...{\r\n        json_array: group[i].json_obj,\r\n        color: color_value,\r\n        groupId: group[i][props.colorBy],\r\n      }}\r\n    ))\r\n  }\r\n\r\n  return series\r\n}\r\n","/**\r\n * Value To String\r\n * ====================\r\n *\r\n * Converts values to string formats based on the provided\r\n * data types\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport datetime from '../datetime'\r\n\r\nexport default class valueToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    this.numeric = 8\r\n    this.percentage = 2\r\n    this.float = 4\r\n    this.string = 50\r\n\r\n  }\r\n\r\n  // returns a formatted string based on the value data type\r\n  toString( value, dtype ){\r\n\r\n    switch( dtype ){\r\n\r\n      case 'float': return this.format_float(value)\r\n      case 'int': return this.format_int(value)\r\n      case 'array': return this.format_array(value)\r\n      case 'object': return this.format_object(value)\r\n      case 'boolean': return this.format_boolean(value)\r\n\r\n      case 'scientific': return this.format_scientific( value )\r\n\r\n      case 'percent': return this.format_percentage( value )\r\n      case 'percentage': return this.format_percentage( value )\r\n\r\n      case 'datetime': return this.format_datetime( value )\r\n\r\n      default: return this.format_string( value )\r\n    }\r\n  }\r\n\r\n  // formats a float by removing resolution to 4 decimal points or\r\n  // converting it to scientific notation\r\n  format_float( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value/Math.pow(10,this.float-1) > 0 ) return value.toFixed(this.float).toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  // formats a value of percent data type into a percentage string\r\n  format_percentage( value ){\r\n    if( value === undefined ) return '-'\r\n    const formatted = (100*value).toFixed(this.percentage)\r\n    if( isNaN(formatted) ) return '-'\r\n    return `${formatted}%`\r\n  }\r\n\r\n  // limits the resolution of integers. Returns the original\r\n  // value when less than the maximum resolutions\r\n  format_int( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value < Math.pow(10,this.numeric-1) ) return value.toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  format_array( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_object( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_boolean( value ){\r\n    return value\r\n  }\r\n\r\n  format_scientific( value ){\r\n    return Number.parseFloat(value).toExponential(2)\r\n  }\r\n\r\n  format_datetime( value ){\r\n    return datetime(value).format('YYYY-MM-DD')\r\n  }\r\n\r\n\r\n  // limits the number of characters in a string\r\n  format_string( value ){\r\n    if( value.length > this.string ) return value.slice(1, this.string)\r\n    return value\r\n  }\r\n\r\n}\r\n","/**\n * JSON Array\n * ===============\n *\n * Extend the Array components to include various functions useful\n * for processing an array of JSON objects\n *\n * :Author: Nik Sumikawa\n * :Date: Feb 11, 2020\n */\n\n\nexport default class jsonArray extends Array{\n\n  constructor(array=[], inplace, dtypes) {\n\n    super()\n\n    // to avoid max recursion depth, we push each row separately\n    array.map( row => this.push(row))\n\n  }\n\n\n  // returns all columns in the jsonArray\n  get columns(){\n    var columns = []\n\n    var max_length = this.length\n    if( max_length > 50 ) max_length = 50\n\n    for( var i=0; i < max_length; i++ ){\n      columns = columns.concat(Object.keys(this[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  /**\n   * Replace the column names with those provided by the column array\n   * @param  {Array} columns array of column names\n   * @return {Array}         jsonArray with new column names\n   */\n  set columns( columns ){\n      const keys = this.columns\n\n      // define a mapping between the current and new column names\n      var mapping = {}\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\n        mapping[keys[i]] =columns[i]\n      }\n\n      // return a json array with the new mapping applied\n      return this.rename( mapping, {inplace: true} )\n  }\n\n  // resets the index value\n  reset_index(props={}){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(props['inplace'])\n\n    for( var i=0; i < array.length; i++ ){\n      array[i]['__index__'] = i\n    }\n    return array\n  }\n\n  // return all values for the specified column\n  values( col ){\n    return [...this].map(row => row[col])\n  }\n\n  /**\n   * Returns an array of index values\n   * @return {Array} Array of index values\n   */\n  get index(){\n    return [...this].map(row => row.__index__)\n  }\n\n\n\n  append( df ){\n    return new jsonArray([...this].concat(df))\n  }\n\n  /**\n   * Applies a given function to a column and returns a DataFrame\n   * with the results. The results can be written inplace or a nedw\n   * column created when specified as a parameter\n   * @param  {string} col     column name\n   * @param  {function} func  function to apply to the column\n   * @param  {string} newCol  when provided a new column is produced\n   * @return {[type]}      [description]\n   */\n  apply( col, func, newCol ){\n\n    if( newCol === undefined ) newCol = col\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][newCol] = func(this[i][col])\n    }\n\n    return this\n  }\n\n  /**\n   * cretes a new column by applying the provided function to each row\n   * @param  {string} col     name of the column to create\n   * @param  {function} func  function to apply to the column\n   */\n   create_column( col, func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][col] = func(this[i])\n    }\n\n    return this\n  }\n\n\n\n\n  /**\n   * overwrites the local index column with the provided column\n   * @param {String} col Column name\n   */\n  set_index( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < array.length; i ++ ){\n      array[i].__index__ = array[i][col]\n      delete array[i][col]\n    }\n\n    return array\n  }\n\n\n  // sorts the json array by the provided column\n  sort_values( col, ascending=true){\n\n    var array\n\n    //sort the table based on the ascending flag\n    if( ascending === true ){\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\n\n    }else{\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Merge two DataFrames together\n   * @param  {Array} json_array           DataFrame to be merged\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\n   * @param  {string} on                   index (col) to use for merging\n   * @return {Array}                      DataFrame containing the merged columns\n   */\n  merge( json_array, params={how:'left', on:'__index__'}  ){\n\n    var array = []\n    var df1, df2, index, a, b\n    // var primary_col, secondary_col, value\n\n    var col_left, col_right\n\n    // determine the columns to use for merging the left/right\n    // DataFrames based on the specified parameters\n    if( params.on !== undefined ){\n      col_left = params.on\n      col_right = params.on\n    }\n    if( params.on_right !== undefined ) col_right = params.on_right\n    if( params.on_left !== undefined ) col_left = params.on_left\n\n\n    // determine the merging criteria\n    switch( params.how ){\n      case 'left':\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n\n      case 'right':\n        df1 = [...json_array]\n        df2 = [...this]\n        // primary_col = col_right\n        // secondary_col = col_left\n        index = json_array.unique(col_right)\n        break;\n\n      // default to merge on left\n      default:\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n    }\n\n    // var lookup = {}\n    // for( a = 0; a < df2.length; a++ ){\n    //   value = df2[a][secondary_col]\n    //\n    //   const keys = Object.keys(lookup)\n    //   if( keys.includes(value) ){\n    //     lookup[value].push( df2[a] )\n    //   }else{\n    //     lookup[value] = [df2[a]]\n    //   }\n    // }\n    //\n    // // pull the rows corresponding to the provided index value\n    // for( var a=0; a < df1.length; a++ ){\n    //   value = df1[a][secondary_col]\n    //\n    //   const lookupVal = lookup[value ]\n    //\n    //   // merge rows with similar index values (intersection). Create\n    //   // multiple rows when duplicate index values are present\n    //   if( lookupVal.length > 0 ){\n    //     for( b=0; b < lookupVal.length; b++ ){\n    //       array.push({...lookupVal[b], ...df1[a]})\n    //     }\n    //   }\n    //\n    //   // add the rows that have no overlap\n    //   if( lookupVal.length === 0  ){\n    //     array.push(df1[a])\n    //   }\n    //\n    // }\n\n    // pull the rows corresponding to the provided index value\n    for( var i=0; i < index.length; i++ ){\n      const value = index[i]\n      const df1_rows = df1.filter(r => r[col_left] === value)\n      const df2_rows = df2.filter(r => r[col_right] === value)\n\n      // merge rows with similar index values (intersection). Create\n      // multiple rows when duplicate index values are present\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n          for( b=0; b < df2_rows.length; b++ ){\n            array.push({...df2_rows[b], ...df1_rows[a]})\n          }\n        }\n      }\n\n      // add the rows that have no overlap\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n            array.push(df1_rows[a])\n        }\n      }\n\n    }\n\n    return new jsonArray( array, true )\n\n  }\n\n  /**\n   * Replaces undefined data with a given value. The values\n   * can be assigned globally or by column\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\n   *                              Values can be assigne by column, by providing a value\n   *                              per colum in the parameter dictionary\n   * @return {Array}             DataFrame with missing values replaed\n   */\n  fillna( params={} ){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    var i, j, columns, col, val\n\n    // fill missing values with unique values per column\n    // This assumes that the input is an object with a\n    // value for each column name\n    if( typeof params === 'object'){\n      columns = Object.keys(params)\n\n      // nothing to do when no inputs are provided\n      if( columns.length === 0) return array\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          val = params[col]\n          if( array[i][col] === undefined ) array[i][col] = val\n          if( array[i][col] === null ) array[i][col] = val\n          // if( isNaN(array[i][col]) ) array[i][col] = val\n        }\n      }\n\n    }else{\n\n      // fill all missing values with the same value\n      columns = array.columns\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          if( array[i][col] === undefined ) array[i][col] = params\n          if( array[i][col] === null ) array[i][col] = params\n          // if( isNaN(array[i][col]) ) array[i][col] = params\n        }\n      }\n    }\n\n    return array\n  }\n\n\n\n\n  // filters the json array based on the column and the provided value.\n  // The value can be either a single variable or an array\n  filter_column( col, value ){\n\n    if( Array.isArray(value) ){\n      return new jsonArray(\n        [...this].filter(row => value.includes(row[col])),\n        false\n       )\n    }else{\n      return new jsonArray(\n        [...this].filter(row => row[col] === value ),\n        false\n      )\n    }\n  }\n\n\n  filter( func ){\n    return new jsonArray( [...this].filter(func), false )\n  }\n\n  map( func ){\n    return [...this].map(func)\n  }\n\n  groupby( col ){\n\n    return new jsonArray( this.__groupby__( this, col ), true )\n  }\n\n\n  __groupby__( json_obj, atts, keys ){\n\n    // append the keys with the json object\n    if( atts.length === 0 ){\n      keys['json_obj'] = new jsonArray(json_obj)\n      keys['count'] = json_obj.length\n      return keys\n    }\n\n    // initial conditions for keys\n    if( keys === undefined ){ keys = {} }\n\n    var results = []\n\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\n    const values = json_obj.unique(atts[0], true)\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      const group = json_obj.filter( row => row[atts[0]] === val )\n\n      // deep copy the keys and append with the current key\n      var temp_keys = Object.assign({}, keys)\n      temp_keys[atts[0]] = values[i]\n\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\n    }\n\n    return results\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  count_values( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var counts = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      if( !unique.includes(val) ){\n        unique.push(val)\n        counts[val] = 0\n      }\n      counts[val]++\n    }\n\n    // map the unique object count back to a flat object\n    var buffer = []\n    for( i=0; i < unique.length; i++ ){\n      const split_val = unique[i].split(',')\n\n      //\n      const obj = {count: counts[unique[i]]}\n      for( var j=0; j < split_val.length; j++ ){\n        obj[columns[j]] = split_val[j]\n      }\n\n      buffer.push( obj )\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  drop_duplicates( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var buffer = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      if( !unique.includes(values[i]) ){\n          unique.push( values[i] )\n          buffer.push( this[i] )\n      }\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n\n  pivot( columns ){\n\n    var pivot_table = []\n\n    if( columns === undefined ) columns = this.columns\n\n    for( var i=0; i < columns.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {column: columns[i]}\n\n      // add the column value for each row\n      for( var j=0; j < this.length; j++ ){\n        temp[j] = this[j][columns[i]]\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n  // converts a matrix into a flatten table (opposite of pivot table)\n  flatten( id_att = '__index__' ){\n\n    // extract a list of column names\n    const columns = this.columns\n\n    var table = []\n\n    for( var i=0; i < this.length; i++ ){\n      const row = this[i]\n\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n\n        // avoid a duplicate entry as the id attribute\n        if( col === id_att ) continue\n\n        table.push({\n          column: col,\n          row: row[id_att],\n          value:  row[col]\n        })\n      }\n    }\n\n    return new jsonArray( table, true )\n\n  }\n\n  // creates a pivot table based on the specified row and column.\n  // The summary type is used to compute the value of the pivot.\n  pivot_table( row, column, summaryType='count', value=undefined ){\n\n    var pivot_table = []\n\n    const row_val = this.unique( row )\n    const column_val = this.unique( column )\n\n\n    for( var i=0; i < row_val.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {row: row_val[i]}\n\n      const rval = row_val[i]\n      // const by_row = this.filter( r => r[row] === rval )\n      const by_row = [...this].filter( r => r[row] === rval )\n\n      // add the column value for each row\n      for( var j=0; j < column_val.length; j++ ){\n\n        const cval = column_val[j]\n        // const by_col = by_row.filter( r => r[column] === cval )\n        const by_col = [...by_row].filter( r => r[column] === cval )\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\n        // console.log( by_col )\n\n        var temp_json\n        switch( summaryType ){\n          // returns the number of rows for the current split\n          case 'count':\n            temp[column_val[j]] = by_col.length\n            break;\n\n          // returns the number of unique values for the current split\n          case 'unique':\n            // set defaults for missing parameter values\n            if( value === undefined ) value = '__index__'\n\n            temp_json = new jsonArray( by_col )\n            temp[column_val[j]] = temp_json.unique( value ).length\n            break;\n\n\n          default:\n            temp[column_val[j]] = by_col.length\n            break\n        }\n\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n\n  /**\n   * Creates a new column by merging the content from the columns\n   * specified in the columns attribute\n   * @param  {array} columns  array of column names\n   * @param  {String} col_name Name of the resulting column\n   * @param  {String} [sep='   ']            string delimiter\n   * @return {OBJECT}          jsonArray with the new column\n   */\n  combine( columns, col_name, sep=' ', params={} ){\n\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < this.length; i++ ){\n      // seed the value with the value from the first column\n      var temp = this[i][columns[0]]\n\n      for( var j=1; j < columns.length; j++ ){\n        temp = temp + sep + this[i][columns[j]]\n      }\n\n      array[i][col_name] = temp\n    }\n\n    array.dtypes[col_name] = 'string'\n    return array\n  }\n\n  combine_columns( col1, col2, col_name, sep=' ' ){\n    // creates a new column by merging the content of col 1 and 2 to\n    // form a new column\n    return this.combine([col1, col2], col_name, sep )\n  }\n\n\n  unique( col, ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    var unique_values = [...new Set([...this].map(row => row[col] ))]\n\n\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        switch( typeof unique_values[0] ){\n          case \"string\":\n            return unique_values.sort()\n\n          case \"boolean\":\n            return unique_values.sort()\n\n          default :\n            try{\n              unique_values = unique_values.map( x => +x)\n              unique_values = unique_values.sort(function(a,b){return a - b})\n            }catch{\n              // default to the standard sort\n              unique_values.sort()\n            }\n        }\n\n    }\n\n    return unique_values\n  }\n\n\n\n\n  /**\n   * Applies a threshold to the specified column\n   * @param  {function} func     function used to partition dataset\n   * @param  {string} res_col   column name containing the results\n   * @return {Array}            jsonArray containing res_col\n   */\n  label( func, params={} ){\n\n    const param_keys = Object.keys(params)\n\n    // set defaults for missing parameter values\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\n    if( !param_keys.includes('value') ) params['value'] = true\n    if( !param_keys.includes('default') ) params['default'] = false\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\n\n    var array = this.__inplace__(params['inplace'])\n\n\n    // identify all samples identified by the rule\n    const sample_index = array.filter( func ).map( row => row.__index__ )\n\n    // create a boolean label, where parts in the sample set are true\n    for( var i=0; i < array.length; i ++ ){\n\n      // extract a list of columns name for the given row\n      const columns = Object.keys( array[i] )\n\n      // the value is true when it is included in the sample set\n      if( sample_index.includes( array[i].__index__ ) ){\n        array[i][params['output_col']] = params['value']\n        continue\n      }\n\n      // set the default value when no value exists\n      if( !columns.includes(params['output_col']) ){\n        array[i][params['output_col']] = params['default']\n        continue\n      }\n\n    }\n\n    return array\n  }\n\n  /**\n   * Copies the content from one column to a new column. This is\n   * non destructive, so if the column already exists, only the\n   * missing data will be copied over\n   * @param  {String} col     original column name\n   * @param  {String} new_col new column name\n   * @return {Object}         jsonArray with the new column added\n   */\n  copy_column( col, new_col, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      if(!columns.includes( new_col) ){\n        array[i][new_col] = array[i][col]\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * Returns a DataFrame containing only the specified column\n   * and the index\n   * @param  {array} columns array of column names\n   * @return {array}         json array containing the specified columns\n   */\n  select_columns( columns ){\n\n    var array = []\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < this.length; i++ ){\n\n      var row = {__index__: this[i].__index__}\n      // copy the specified columns for each row\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n        row[col] = this[i][col]\n      }\n\n      array.push( row )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Drops columns from the DataFrame\n   * @param  {String or Array} columns String or Array of column names\n   * @return {OBJECT}         JsonArray without the specified columns\n   */\n  drop_columns( columns, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n\n      // delete the specified column when of string type\n      if( typeof columns === 'string' ){\n        delete array[columns]\n\n      // when a list is provided, delete all columns in the string\n      }else{\n\n        for( var j=0; j < columns.length; j++ ){\n          delete array[i][columns[j]]\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * renames columns\n   * @param  {object} mapping object containing the existing column name and new column name\n   * @return {object}         json array with the new column naming\n   */\n  rename( mapping, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const columns = Object.keys( mapping )\n\n    // rename the specified columns\n    for( var i = 0; i < array.length; i++ ){\n\n      const ex_columns = Object.keys( array[i] )\n\n      // create a new column based on the mapping and delete\n      // the existing one (taht was replaced)\n      for( var j=0; j < columns.length; j++ ){\n        // only replace the column when data exists for that column\n        if( ex_columns.includes(columns[j]) ){\n          const new_col = mapping[columns[j]]\n          array[i][new_col] = array[i][columns[j]]\n\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\n          delete array[i][columns[j]]\n\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * replaces the values in the specified column with the given value\n   * based on the mapping\n   * @param  {String} col     original column name\n   * @param  {Object} mapping Object containing the value mapping\n   * @return {Object}         jsonArray with the new column added\n   */\n  replace( col, mapping={}, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const values = Object.keys( mapping )\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      // do not perform mapping when no data nor the mapping exists\n      if(!columns.includes(col) ) continue\n      if(!values.includes(array[i][col])) continue\n\n      array[i][col] = mapping[array[i][col]]\n\n    }\n\n    return new jsonArray( array )\n  }\n\n\n\n  /**\n   * returns the data object. When enable is true, the original\n   * jsonArray is returned so the values are modified directly. Otherwise\n   * the jsonArray is cloned to avoid mutation of the original object\n   *\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\n   * @return {Object}             current jsonArray content\n   */\n  __inplace__( enable=false ){\n\n    // clone the local copy to avoid mutation when inplace is disabled\n    if( enable ) return this\n\n    return new jsonArray( this )\n  }\n\n\n}\n","\r\nimport jsonArray from './jsonArray'\r\n\r\nexport default jsonArray\r\n","\r\n// retrieves data from the data repository. modularizing the data this way, makes\r\n// it possible to easily offload the data to an external location to reduce the\r\n// overall build size thus improving build and loading times\r\nexport default function getData( path ){\r\n  return require('./data/' + path)\r\n}\r\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Grid, Segment} from 'semantic-ui-react'\n\nimport jsonArray from './components/jsonArray'\nimport Example from './components/Example'\nimport Sidebar from './components/Sidebar'\n\n\n// wraps the fixed code documentation framework in the\n// grid structure to provide one line per example\nexport default function Examples( props ){\n\n  const [category, setCategory] = useState()\n  const [subcategory, setSubCategory] = useState()\n\n  var config = props.config\n  if( config === undefined ){\n    config = require('./config.json' )\n  }\n\n  config = new jsonArray(config)\n\n  // set default based on indev flag\n  const temp = config.filter(r => r.indev === true)\n\n  if( temp.length > 0 ){\n    // sort the configuration so the indev example is at the top\n    config = config.fillna({indev: false})\n    config = config.sort_values('indev', false)\n\n\n    if( category === undefined) {\n      setCategory( temp[0].category )\n      setSubCategory( temp[0].subcategory )\n    }\n  }\n\n\n  return (\n\n    <Segment style={{margin:'0 20px 0 20px'}}>\n      <Grid columns={2}>\n         <Grid.Column\n           style={{maxWidth:'250px'}}>\n          <Sidebar\n            config={config}\n            category={category}\n            setCategory={setCategory}\n            setSubCategory={setSubCategory}\n            />\n         </Grid.Column>\n\n        <Grid.Column stretched style={{width:'calc(100% - 250px)'}}>\n           <PageContent\n             {...props}\n             category={category}\n             subcategory={subcategory}\n             config={config}\n             />\n         </Grid.Column>\n       </Grid>\n\n     </Segment>\n  )\n}\n\n\n\n\nfunction PageContent( props ){\n\n  // select all examples belonging to a single category\n  var examples = props.config.filter(r => r.category === props.category )\n\n  if( props.subcategory !== undefined ){\n    examples = examples.filter(r => r.subcategory === props.subcategory )\n  }\n\n\n\n  // create an array of example components\n  var exampleComponents = []\n  for( var i=0; i < examples.length; i++ ){\n\n    const title = examples[i].title\n\n    exampleComponents.push(\n      <Segment\n        key={`Example-${title}`}\n        vertical>\n        <Example\n          {...props}\n          jsxDir='examples'\n          docDir='doc'\n          example={ examples[i]}\n          />\n      </Segment>\n    )\n  }\n\n\n  return(\n    <div>\n      {exampleComponents}\n    </div>\n  )\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment} from 'semantic-ui-react'\n\nimport Controls from './Header'\nimport CodeRender from './CodeRender'\n\n\n\nexport default function Example( props ){\n\n  const [showCode, setShowCode] = useState(false)\n\n  var Component\n\n  var dir = props.jsxDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  try{\n    Component = require(`Documentation/${dir}/${props.example.path}`).default\n  }catch{\n    Component = NullComponent\n  }\n\n  console.log( 'what are the components', Component)\n\n  return(\n    <Segment.Group>\n      <Segment>\n        <Controls\n          title = {props.example.title}\n          description = {props.example.description}\n          onClick={() => setShowCode(!showCode)}\n          />\n      </Segment>\n\n      <Segment style={{width:'100%'}}>\n        <Component {...props}/>\n      </Segment>\n\n      <CodeRender\n        {...props}\n        visible = {showCode}\n        />\n\n    </Segment.Group>\n  )\n}\n\nfunction NullComponent(props){ return null }\n","/**\n * @title Controls\n * @description Example Header and controls\n * @author Nik sumikawa\n * @date Nov 21, 2020\n *\n * note taken from react-hot-docs\n */\n\nimport React from \"react\"\n\nimport {\n  Grid,\n  Header,\n  Button\n} from \"semantic-ui-react\"\n\n\nexport default function Controls( props ){\n\n  // do not render the component when the visiblility flag\n  // is set to false\n  if( props.visible === false ) return null\n\n  var title\n  if( props.title !== undefined ) title = props.title\n\n  var description\n  if( props.description !== undefined ) description = props.description\n\n  return(\n    <Grid>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <Header as=\"h2\">{title}</Header>\n          <span>{description}</span>\n        </Grid.Column>\n\n\n        <Grid.Column textAlign='right'>\n          <Button\n            onClick={() => props.onClick()}>\n            Show code\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n\n    </Grid>\n  )\n\n}\n","/**\nCode Render\n==================\n\nUses React-ace to render the source code\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment, Button} from 'semantic-ui-react'\n\nimport AceEditor from \"react-ace\"\n\nrequire(\"brace/mode/html\")\nrequire(\"brace/mode/jsx\")\nrequire(\"brace/mode/sh\")\nrequire(\"brace/mode/python\")\n// require(\"brace/theme/github\")\nrequire(\"brace/theme/dracula\")\n\n\nexport default function CodeRender( props ){\n\n  const [source, setSource] = useState('')\n\n  if( props.visible === false ) return null\n\n  var rel_path\n\n  var dir = props.docDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  var ext = props.ext\n  if( ext === undefined ) ext = '.doc'\n\n  var syntax = 'jsx'\n  if( ext === '.py' ) syntax = 'python'\n\n  var filename = props.example.path.split('/')\n  filename = filename[filename.length-1] + ext\n\n\n  try{\n    rel_path = require(`Documentation/${dir}/${props.example.path}${ext}`)\n\n  }catch{\n    return(\n      <Segment>\n        Code not available. Please compile to see source\n      </Segment>\n    )\n  }\n\n  // console.log( rel_path.default )\n  if( (rel_path !== undefined)&(source === '') ){\n\n    fetch(rel_path.default)\n    .then((r) => r.text())\n    .then(text  => {\n      // console.log('this is the code', text);\n      setSource(text)\n    })\n\n  }\n\n  // return (<div> example </div>)\n  return(\n\n    <Segment>\n      <Button\n        style={{\n          position: 'absolute',\n          right: '20px',\n          top: '20px',\n          zIndex: 10\n        }}\n        icon = 'download'\n        color='red'\n        circular\n        onClick={() => downloadFile(source, filename)}\n        />\n\n      <AceEditor\n        editorProps={{ $blockScrolling: Infinity }}\n        maxLines={Infinity}\n        minLines={10}\n        mode={syntax}\n        name=\"jsx-editor\"\n        onChange={() => console.log('not implemented') }\n        tabSize={2}\n        theme=\"dracula\"\n        value={source}\n        width=\"100%\"\n        readOnly\n      />\n    </Segment>\n  )\n}\n\n\n\nfunction downloadFile( source, filename ){\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([source], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n","/**\nSidebar\n==================\n\nRenders a sidebar based on the configuration file\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React from 'react';\n\nimport {Menu, Dropdown} from 'semantic-ui-react'\n\nimport jsonArray from './jsonArray'\n\n\n\n\n// renders a sidebar given an array of category names\nexport default function Sidebar( props ){\n\n  var menuItems = flat_categories(props )\n  menuItems = menuItems.concat( sub_categories(props) )\n\n  return (\n    <Menu pointing secondary vertical>\n      {menuItems}\n    </Menu>\n  )\n\n}\n\n// renders categories without sub categories\nfunction flat_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory === undefined )\n  // console.log( 'jsonArray', props.config instanceof jsonArray)\n  const categories = config.unique(['category'])\n\n  var menuItems = []\n  for( var i=0; i < categories.length; i++ ){\n    const cat = categories[i]\n\n    menuItems.push(\n      <Menu.Item\n        key={`menu-${cat}`}\n        name={cat}\n        active={props.category === cat}\n        onClick={() => {\n          props.setCategory(cat)\n          props.setSubCategory(undefined)\n        }}\n      />\n    )\n  }\n\n  return menuItems\n}\n\n\n// renders categories without sub categories\nfunction sub_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory !== undefined )\n  const groups = config.groupby(['category'])\n\n  var menuItems = []\n  for( var i=0; i < groups.length; i++ ){\n\n    const cat = groups[i].category\n    const subcategories = new jsonArray(groups[i].json_obj).unique(['subcategory'])\n\n    var subMenuItems = []\n    for( var j=0; j < subcategories.length; j++ ){\n      const subcat = subcategories[j]\n\n      subMenuItems.push(\n        <Dropdown.Item\n          key={`dropdown-${cat}-${subcat}`}\n          onClick={() => {\n            props.setCategory(cat)\n            props.setSubCategory(subcat)\n          }}\n          >\n          {subcat}\n        </Dropdown.Item>\n      )\n    }\n\n    menuItems.push(\n      <Dropdown\n        key={`dropdown-${cat}`}\n        item\n        text={cat}>\n        <Dropdown.Menu>\n          {subMenuItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  return menuItems\n}\n","/**\r\n * dtype\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to allow for data type\r\n * formatting. This includes extracting data types for specific\r\n * columns and also converting to known data types\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../jsonArray'\r\n\r\nimport datetime from './datetime'\r\n\r\n\r\n\r\nexport default class DataTypes extends Object{\r\n\r\n  constructor(array) {\r\n    super()\r\n\r\n    // global definition to prevent excessive processing\r\n    // when determining data type. This essentially limits\r\n    // the number of checks per column\r\n    this.max_length = 50\r\n\r\n    // set default dtypes. Ideally, extract them from the jsonArray when available\r\n    if( array instanceof jsonArray ){\r\n      this.set_dtypes( array.dtypes )\r\n    }\r\n  }\r\n\r\n  // returns all columns in the jsonArray\r\n  columns( array ){\r\n    var columns = []\r\n\r\n    // ensure that the max length is not greater than the\r\n    // array size, to avoid checking non-existing rows\r\n    if( this.max_length > array.length ) this.max_length  = array.length\r\n\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat(Object.keys(array[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\r\n  }\r\n\r\n  // converts all data types based on the global dtypes definition\r\n  // stored within the jsonArray variable\r\n  init( array ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const dtype_col = Object.keys(this)\r\n\r\n    for( var i=0; i < dtype_col.length; i++ ){\r\n      // convert the column to the specified type\r\n      array = this.convert(array, dtype_col[i], this[dtype_col[i]])\r\n    }\r\n\r\n    this.max_length = array.length\r\n    if( this.max_length > 50 ) this.max_length = 50\r\n\r\n    this.parse(array)\r\n\r\n\r\n    // converting all numeric Strings to their proper non-string type\r\n    const columns = this.columns(array)\r\n    for( i=0; i < columns.length; i++ ){\r\n\r\n\r\n      const col = columns[i]\r\n      if(this[col] === 'intString') array = this.convert( array, col, 'int' )\r\n      if(this[col] === 'floatString') array = this.convert( array, col, 'float' )\r\n      if(this[col] === 'booleanString') array = this.convert( array, col, 'boolean' )\r\n\r\n    }\r\n\r\n    delete this.max_length\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * sets the internal data type definition based on the provided objects\r\n   * @param {object} dtypes object containing the data type definition\r\n   */\r\n  set_dtypes( dtypes ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const columns = Object.keys(dtypes)\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      this[columns[i]] = dtypes[columns[i]]\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // returns the data type for the given value\r\n  data_type( value ){\r\n\r\n    if( value instanceof jsonArray ) return 'jsonArray'\r\n    if( value instanceof Array ) return 'array'\r\n    if( value instanceof Object ) return 'object'\r\n\r\n\r\n    if( (Number(value) === value)&(value % 1 === 0) ) return 'int'\r\n    if( (Number(value) === value)&(value % 1 !== 0) ) return 'float'\r\n\r\n    // attempt to convert the value to a number\r\n    const numeric = Number( value )\r\n\r\n    // determine the proper type when successfully converted to a number\r\n    if( numeric !== undefined & !isNaN(numeric) ){\r\n      if( value === true | value === false ) return 'boolean'\r\n      if( value % 1 === 0 ) return 'intString'\r\n      if( value % 1 !== 0 ) return 'floatString'\r\n    }\r\n\r\n    if(value === 'true' | value === 'false') return 'booleanString'\r\n    if(typeof value === 'string' || value instanceof String) return 'string'\r\n\r\n    return 'unknown'\r\n  }\r\n\r\n  /**\r\n   * returns True when the data type is numeric. Otherwise False\r\n   * @param  {String}  dtype Data type string\r\n   * @return {Boolean}       True when the data type is numeric, otherwise false\r\n   */\r\n  isNumeric( dtype ){\r\n    switch( dtype ){\r\n      case 'float' : return true\r\n      case 'int': return true\r\n      case 'percentage': return true\r\n      default : return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert the specified column based on the data type\r\n   * @param  {string} col       column name\r\n   * @param  {string} dtype     data type definition\r\n   * @return {array}            array containing with the column mapped correctly\r\n   */\r\n  convert( array, col, dtype, params={} ){\r\n\r\n    // convert the dtype for the specific column for all rows\r\n    for( var i=0; i < array.length; i++ ){\r\n\r\n      // do not process the row when data doesn't exist for the column\r\n      // const columns = Object.keys(array[i])\r\n      // if( !columns.includes( col) ) continue\r\n      if( array[i][col] === undefined ) continue\r\n\r\n      array[i][col] = this.apply(array[i][col], dtype, params )\r\n    }\r\n\r\n    // create an internal variable with the data type of the column\r\n    this.set_label( col, dtype )\r\n\r\n    return array\r\n  }\r\n\r\n  // logic to apply when converting a value to the correct data type\r\n  apply(value, dtype, params={}){\r\n\r\n    switch( dtype ){\r\n      case 'datetime':\r\n        return datetime(value)\r\n\r\n      case 'jsonArray':\r\n        return new jsonArray(value)\r\n\r\n      case 'week':\r\n        return datetime(value).week()\r\n\r\n      case 'strftime':\r\n        const param_keys = Object.keys(params)\r\n        if( !param_keys.includes('format') ) params['format'] = 'YYYY-MM-DD'\r\n\r\n        return datetime(value).format(params['format'])\r\n\r\n      case 'int' :\r\n        return Number( value )\r\n\r\n      case 'float' :\r\n        return Number( value )\r\n\r\n      case 'string' :\r\n        if (value === null) return ''\r\n        return value.toString()\r\n\r\n      case 'boolean' :\r\n        if( value === null ) return null \r\n        if( value === false | value === true ) return value\r\n        if( value.toLowerCase() === 'true' ) return true\r\n        if( value.toLowerCase() === 'false' ) return false\r\n        return Number( value )\r\n\r\n      case 'array':\r\n        if( typeof value !== 'string' ) return value\r\n        return value\r\n          .replace(/\\[/gi, '')\r\n          .replace(/\\]/gi, '')\r\n          .replace(/'/gi, '')\r\n          .replace(/, /gi, ',')\r\n          .split(',');\r\n\r\n      default :\r\n        return value\r\n    }\r\n\r\n  }\r\n\r\n  // sets the internal data type label\r\n  set_label( col, data_type ){\r\n\r\n    // set the column data type\r\n    switch( data_type ){\r\n      case 'strftime':\r\n        this[col] = 'string';\r\n        break;\r\n\r\n      default:\r\n        this[col] = data_type\r\n        break\r\n    }\r\n\r\n    return this[col]\r\n  }\r\n\r\n\r\n\r\n  // compares two data types and returns the one with the\r\n  // highest priority to avoid type conflict\r\n  dtypePriority( dtype1, dtype2 ){\r\n     const priority = [\r\n       'object',\r\n       'array',\r\n       'string',\r\n       'float',\r\n       'int',\r\n       'boolean',\r\n     ]\r\n\r\n     for( var i=0; i < priority.length; i++ ){\r\n       if( dtype1 === priority[i] ) return priority[i]\r\n       if( dtype2 === priority[i] ) return priority[i]\r\n     }\r\n\r\n     return 'unknown'\r\n  }\r\n\r\n  // set a data type for the specified column\r\n  parse_column( array, col ){\r\n\r\n    var dtype\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      if( array[i][col] !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( array[i][col] )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n  // returns an object containing the dtypes for each column\r\n  parse( array ){\r\n\r\n    // parse a unique set of column names from the array of objects\r\n    var columns = []\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat( Object.keys(array[i]))\r\n    }\r\n    columns = [...new Set(columns)]\r\n\r\n    // parse the data types for each column\r\n    const existing = Object.keys(this)\r\n    for( i=0; i < columns.length; i++ ){\r\n      // do no overwrite existing datatypes\r\n      if( existing.includes(columns[i]) ) continue\r\n\r\n      //parse undefined datatypes\r\n      this[columns[i]] = this.parse_column(array, columns[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the data type for the provided series\r\n   * @param  {Object} series Series object\r\n   * @return {String}        Data type string\r\n   */\r\n  parse_series( series ){\r\n\r\n    var dtype\r\n    for( var i=0; i < series.values.length; i++ ){\r\n\r\n      const value = series.values[i]\r\n\r\n      if( value !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( value )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n}\r\n","/**\r\n * Pluggin Managements\r\n * ======================\r\n *\r\n * Attemps to import various functionality that is dependent on\r\n * various modules. When the module is not available, the enable\r\n * flag is not set, rendering the function not available\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 26, 2020\r\n *\r\n */\r\n\r\n // import * as echarts from 'echarts';\r\n // import 'echarts-gl';\r\n\r\nexport var enabledComponents = {\r\n  echarts: true,\r\n  semanticUI: false,\r\n  excel: false,\r\n}\r\n\r\n// attempt to import the react echarts component\r\nexport var components = {\r\n  echarts: undefined,\r\n  semanticUI: undefined,\r\n  excel: undefined,\r\n}\r\n\r\n\r\ntry{\r\n  // require(\"echarts/lib/lang\");\r\n  // require.cache[require.resolve('echarts/lib/lang')].exports = require(\"echarts/lib/langEN\");\r\n  // echarts = require('echarts')\r\n  components.echarts = require('./echarts').default\r\n  enabledComponents.echarts = true\r\n}catch{\r\n  // console.log('failed to load echarts. module not installed')\r\n}\r\n\r\ntry{\r\n  components.semanticUI = require('../framework/SemanticUI').default\r\n  enabledComponents.semanticUI = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n\r\ntry{\r\n  components.excel = require('./Excel').default\r\n  enabledComponents.excel = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n","/**\r\n * React Components\r\n * ===================\r\n *\r\n * returns a class containing all available React components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n\r\n\r\nimport {enabledComponents, components} from './plugins/Plugins'\r\n\r\nimport echartsLibrary from './plugins/echarts'\r\n\r\nexport default class ReactComponents extends Object{\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.data = data\r\n  }\r\n\r\n  get Table(){\r\n\r\n    const Table = require('./table/Table').default\r\n    return new Table(this.data).Table\r\n  }\r\n\r\n\r\n  get FileIO(){\r\n\r\n    const FileIO = require('./plugins/fileIO').default\r\n    return new FileIO(this.data)\r\n  }\r\n\r\n  get semanticUI(){\r\n    if( enabledComponents.semanticUI === false ){\r\n      alert( 'Semantic UI module not installed')\r\n      return {}\r\n    }\r\n\r\n    return new components.semanticUI( this.data )\r\n  }\r\n\r\n\r\n  get Excel(){\r\n    if( enabledComponents.excel === false ){\r\n      alert( 'react-excel-renderer module not installed')\r\n      return {}\r\n    }\r\n\r\n    return components.excel\r\n  }\r\n\r\n  // return a dictionary containing the various e-charts plotting routines\r\n  get echarts(){\r\n\r\n    if( enabledComponents.echarts === false ){\r\n      alert('echarts module not installed. Install echarts and echarts-for-react')\r\n      return {}\r\n    }\r\n\r\n    return new echartsLibrary( this.data )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport datetime from './data_types/datetime';\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\nexport default class jsonObject extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    const keys = Object.keys(data)\r\n\r\n    // copy over the content from the input data\r\n    for( var index in keys ){\r\n      const key = keys[index]\r\n      this[key] = data[key]\r\n    }\r\n\r\n  }\r\n\r\n  // TODO: search for all columns in the Array\r\n  get columns(){ return Object.keys(this) }\r\n  get keys(){ return Object.keys(this) }\r\n\r\n  // converts the specified key to a datetime attribute\r\n  strptime( key ){\r\n\r\n    if( !(this[key] instanceof datetime) ){\r\n      this[key] = datetime(this[key])\r\n    }\r\n    return this\r\n  }\r\n\r\n\r\n  // convert the json Object to a two dimensional json array\r\n  to_jsonArray( key_name, value_name ){\r\n\r\n    var array = []\r\n    const keys = this.columns\r\n\r\n    // set defaults for the key and value attributes\r\n    if( key_name === undefined ) key_name = 'key'\r\n    if( value_name === undefined ) value_name = 'value'\r\n\r\n    // convert the json object into a json array\r\n    for( var i=0; i < keys.length; i++ ){\r\n      array.push( {\r\n        [key_name]: keys[i],\r\n        [value_name]: this.json_object[keys[i]]\r\n      })\r\n    }\r\n\r\n    return new jsonArray(array)\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Array To String\r\n * ====================\r\n *\r\n * Converts jsonArray to an array of strings\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class arrayToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    // whitespace for each tab and the tabs between each column\r\n    this.tab_count = 1\r\n    this.tab_space = 4\r\n\r\n    this.max_width = 20\r\n\r\n    this.columns = undefined\r\n\r\n  }\r\n\r\n\r\n    // returns the length of the contents\r\n    col_width( value ){\r\n\r\n      return value.length\r\n    }\r\n\r\n\r\n\r\n    // determines the maximum width between columns\r\n    col_spacing( json_array ){\r\n\r\n      var max_length = {}\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      // determine the maximum string lenght of each column\r\n      for( var i=0; i < this.columns.length; i++ ){\r\n\r\n        var col = this.columns[i]\r\n\r\n        // determine the length of the column name string\r\n        max_length[col] = this.col_width(this.columns[i])\r\n\r\n        // cap the length of the column name length. We can skip\r\n        // processing because we are already at the max width\r\n        if( max_length[col] > this.max_width ){\r\n          max_length[col] = this.max_width\r\n          continue\r\n        }\r\n\r\n\r\n        // determine the maximum string length of the column\r\n        for( var j=0; j < json_array.length; j++ ){\r\n\r\n          // do not consider non-existing values\r\n          if( !Object.keys(json_array[j]).includes(col) ) continue\r\n\r\n          const value = value_to_string.toString(\r\n            json_array[j][col],\r\n            json_array.dtypes[col]\r\n          )\r\n\r\n          if( value.length > max_length[col] ){\r\n            max_length[col] = value.length\r\n          }\r\n\r\n          // We can skip processing because we are already at the max width\r\n          if( max_length[col] > this.max_width ) break\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return max_length\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns a list of column names in order with the proper\r\n     * whitespace added for logging\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of column names with the appropriate whitespace\r\n     */\r\n    format_columns( spacing ){\r\n\r\n      var row_array = []\r\n\r\n      // add each column name with the appropriate white space added\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        const whitespace = spacing[col] - col.length\r\n        row_array.push( new Array(whitespace + 1).join(' ') + col )\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a formatted string of the formatted cell for each row\r\n     * @param  {Array}  row     Object containing the values for each row\r\n     * @param  {Object} dtypes  Object containing the maximum length for each column\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of values with the appropriate whitespace\r\n     */\r\n    format_row( row, dtypes, spacing ){\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      var row_array = []\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        var value = row[col]\r\n\r\n        var whitespace\r\n        if( value === undefined ){\r\n          value = 'nan'\r\n          whitespace = spacing[col] - 3\r\n        } else {\r\n\r\n          value = value_to_string.toString( value, dtypes[col] )\r\n          whitespace = spacing[col] - value.length\r\n        }\r\n\r\n        try{\r\n          row_array.push( new Array(whitespace + 1).join(' ') + value )\r\n        }catch{row_array.push(value)}\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts the array of strings int a single array where\r\n     * each column is separated by whitespace based on the\r\n     * local white space definition\r\n     * @param  {Array} array  Array of strings\r\n     * @return {String}       String containing each array element with the desired whitespace\r\n     */\r\n    format_array( array ){\r\n      return new Array(...array).join(new Array(this.tab_space * this.tab_count).join(' '))\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a matrix of strings that have been formated based on the data\r\n     * type of each column\r\n     * @param  {Array} array  jsonArray containing the matrix to convert\r\n     * @return {String}        Matrix of strings formatted based on the column data type\r\n     */\r\n    toString( array ){\r\n\r\n      // force the input array into a json array type\r\n      var json_array = array\r\n      if(!(json_array instanceof(jsonArray))){\r\n        json_array = new jsonArray(array)\r\n      }\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      const spacing = this.col_spacing( json_array )\r\n\r\n      // seed the formatted array with the column names\r\n      var formatted = this.format_array( this.format_columns(spacing) ) + '\\r\\n'\r\n\r\n      // format the data from each row\r\n      for( var i=0; i < json_array.length; i++ ){\r\n        formatted = formatted.concat(\r\n          this.format_array( this.format_row(json_array[i], json_array.dtypes, spacing) ) + '\\r\\n'\r\n        )\r\n      }\r\n\r\n      return formatted\r\n\r\n    }\r\n\r\n\r\n    toConsole( array ){\r\n\r\n      const jsonArray_str = this.toString( array )\r\n      console.log( jsonArray_str )\r\n    }\r\n}\r\n","/**\r\n * Format\r\n * =============\r\n * Routines to convert the jsonArray into a string for visualization\r\n * purposes\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n */\r\n\r\n\r\nimport arrayToString from './arrayToString'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class strFormat{\r\n\r\n  constructor( data ){\r\n    this.data = data\r\n  }\r\n\r\n\r\n  /**\r\n   * returns a string containing the jsonArray contents\r\n   * where each column is formated based on the local data\r\n   * types\r\n   * @return {String} Formatted string containing the jsonArray contents\r\n   */\r\n  get table(){\r\n    const format = new arrayToString()\r\n    return format.toString( this.data )\r\n  }\r\n\r\n  row( index ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  column( col ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  /**\r\n   * Returns the formatted data for the specified cell\r\n   * @param  {int} row row number\r\n   * @param  {String} col column name\r\n   * @return {String}     formatted string representing the string value\r\n   */\r\n  value( row, col ){\r\n    const format = new valueToString()\r\n    return format.toString(\r\n      this.data[row][col],\r\n      this.data.dtypes[col]\r\n    )\r\n  }\r\n\r\n}\r\n","/**\r\n * Echarts Tooltip formatter\r\n * =========================\r\n *\r\n * Attempt to standardize the tooltip format\r\n * to show data from the top 5 columns or those\r\n * specified by the user\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Sept 29, 2020\r\n */\r\n\r\n\r\nexport default class echartsTooltip extends Object {\r\n\r\n  constructor() {\r\n    super()\r\n    // super(...array)\r\n\r\n    // as a default, set the tooltip to trigger when\r\n    // hovering over an item\r\n    this.show = true\r\n    this.trigger = 'item'\r\n    // this.showContent = false\r\n  }\r\n\r\n\r\n  /**\r\n   * Formats the tooltip using data taken from the\r\n   * selected sample. When a list of columns are provided,\r\n   * they are used render the tooltip information\r\n   * @param  {object} json_array   array of json objects\r\n   * @param  {Array}  [columns=[]] array fo column names\r\n   * @return {none}              The tooltip format is stored locally\r\n   */\r\n  from_DataFrame( json_array, columns=[] ){\r\n\r\n    if( columns.length === 0 ){\r\n      columns = json_array.columns.splice(1,5)\r\n    }\r\n\r\n    columns = columns.concat(['__index__'])\r\n    this.formatter = (props) => {\r\n      // the dataframe index was pushed into the plot data in addition to the\r\n      // data used for plotting. This was used to locate the part by index\r\n      // number after splitting it for visualization purposes\r\n      const index = props.data[2]\r\n      if( index === undefined ) return ''\r\n\r\n      var sample = json_array.filter(r => r.__index__ === index)\r\n      if( sample.length === 0) return ''\r\n\r\n      // select the only sample that should reside at the index\r\n      sample = sample[0]\r\n\r\n      // format a string based on the DataFrame contents\r\n      var string = ''\r\n      for (var i=0; i < columns.length; i++ ){\r\n         // [key, value] of Object.entries(json_array[index])) {\r\n        const col = columns[i]\r\n        if( col === '__index__' ) continue\r\n        string = string + `<b>${col}</b>: ${sample[col]}<br/>`;\r\n      }\r\n\r\n      return string\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","/**\r\n * Echarts Axis formatter\r\n * =========================\r\n *\r\n * Routines to automatically change the axis format based on\r\n * specifications. The purpose is to limit axis configuration\r\n * to simplify the plotting process. At the same time, It is\r\n * possible to extend the axis parameters as desired.\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 22, 2020\r\n */\r\n\r\nimport moment from 'moment'\r\n\r\nexport default class echartsAxis extends Object {\r\n\r\n  constructor( col='', json_array=[] ) {\r\n    super()\r\n\r\n    this.axis = col\r\n    this.name = col\r\n    // super(...array)\r\n    //\r\n    this.initialize( json_array, col )\r\n  }\r\n\r\n  // default axis parameters\r\n  default(){\r\n    this.type = 'value'\r\n    this.scale = true\r\n  }\r\n\r\n  /**\r\n   * Initializes the axis based on the data type. this\r\n   * attempts to define the axis automatically. It's\r\n   * possible to overwrite this for custom plotting\r\n   * @param  {Array} json_array  jsonArray\r\n   * @param  {String} col       Column name\r\n   * @return {null}             nothing is returned\r\n   */\r\n  initialize( json_array, col ){\r\n\r\n    if( json_array === undefined ) return null\r\n    if( json_array.length === 0 ) return null\r\n    if( col === undefined ) return null\r\n    if( col === '' ) return null\r\n\r\n    // set the axis label\r\n    this.name = col\r\n\r\n    switch( json_array.dtypes[col] ){\r\n      case 'string' :\r\n        this.type = 'category'\r\n        this.data = json_array.unique(col)\r\n        break\r\n\r\n      // format date columns\r\n      case 'datetime':\r\n      case 'strftime':\r\n        this.type = 'time'\r\n        this.axisLabel = {\r\n          formatter: (function(value){\r\n            return moment(value).format('YYYY-MM-DD')\r\n          })\r\n        }\r\n        break;\r\n\r\n      default:\r\n        this.type = 'value'\r\n        this.scale = true\r\n    }\r\n  }\r\n\r\n\r\n  hide(){ this.show = false }\r\n\r\n  minValue(value){\r\n    this.min = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.min\r\n    }\r\n  }\r\n\r\n  maxValue(value){\r\n    this.max = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.max\r\n    }\r\n  }\r\n\r\n  rotate(){\r\n    this.axisLabel = {\r\n      ...this.axisLabel,\r\n      ...{ rotate: 90 }\r\n    }\r\n  }\r\n\r\n  label( label ){\r\n    if( label !== undefined ){\r\n      this.name = label\r\n    }\r\n  }\r\n\r\n  tick_values( values ){\r\n    if( values !== undefined ){\r\n      this.type = 'category'\r\n      this.data = values\r\n    }\r\n  }\r\n\r\n  // // process the parameters object to configure the plot axis\r\n  // process_params( params ){\r\n  //\r\n  //   // add the label to the axis configuration\r\n  //   this.label( params.label )\r\n  //\r\n  //   switch( params.type ){\r\n  //     case 'category':\r\n  //       this.tick_values( [...new Set(params.values)] )\r\n  //       break;\r\n  //\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n  // formats the axis to display categories\r\n  to_category( params={} ){\r\n    this.type = 'category'\r\n    this.data = [...new Set(params.values)]\r\n\r\n    // this.splitArea ={\r\n    //     show: true\r\n    // }\r\n  }\r\n\r\n  // formats the axis to display values\r\n  to_value( params={} ){\r\n    this.type = 'value'\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  to_date( params={} ){\r\n\r\n    var strftime = 'MM-DD'\r\n    if( params.strftime !== undefined ) strftime = params.strftime\r\n\r\n    this.type = 'time'\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return moment(value).format(strftime)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  scientific(units=2){\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return value.toExponential(units)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  dynamic_range( json_array ){\r\n    const min = json_array.min( this.name )\r\n    const max = json_array.max( this.name )\r\n    const padding = (max - min) * 0.05\r\n\r\n    console.log( min, max, padding)\r\n    this.min = (min - padding).toFixed(3)\r\n    this.max = (max + padding).toFixed(3)\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport default function Axline( value, props={} ){\r\n\r\n  var val = value\r\n  if( val/Math.pow(10,4-1) > 1 ) val = val.toExponential(3)\r\n\r\n  var label = val\r\n  if( props.label !== undefined) label = props.label\r\n\r\n  var color = 'red'\r\n  if( props.color !== undefined ) color = props.color\r\n\r\n  var line = {\r\n    name: 'limit',\r\n    type: 'line',\r\n    color: color,\r\n    markLine: {\r\n        symbol: \"none\",\r\n        data: [{\r\n          tooltip: {show:false},\r\n          // name: val,\r\n          label: {\r\n            formatter: label,\r\n            position: 'end'\r\n          }\r\n        }]\r\n    }\r\n  }\r\n\r\n  if( props.axis === 'yAxis' ){\r\n    line.markLine.data[0]['yAxis'] = value\r\n  }else{\r\n    line.markLine.data[0]['xAxis'] = value\r\n  }\r\n\r\n  return line\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function line( json_array, props={} ){\r\n\r\n  const line = require('../../series/line').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = line( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a boxplot plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function boxplot( json_array, props={} ){\r\n\r\n  const boxplot = require('../../series/boxplot').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'boxplot required att : colx and coly' )\r\n  }\r\n\r\n  const keys = json_array.unique( props.colx, true )\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({ values: keys })\r\n  xAxis.axisLabel = { formatter: '{value}' }\r\n  // xAxis.boundaryGap = true\r\n  // xAxis.nameGap = 30\r\n  // xAxis.splitLine = {show: false }\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_value()\r\n  yAxis.dynamic_range(json_array)\r\n  // yAxis.splitArea = {show: true}\r\n\r\n\r\n  var series = boxplot( {...props, ...{json_array: json_array}} )\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // series = echart_series.boxplot(props.colx, props.coly, props )\r\n\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function heatmap( json_array, props={} ){\r\n\r\n  // returns an object for generating a heatmap, similar to\r\n  // the calendar example but with data from a jsonArray\r\n  // example: https://echarts.apache.org/examples/en/editor.html?c=calendar-heatmap\r\n\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({values: json_array.unique(props.colx, true) })\r\n  xAxis.label( props.colx )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_category({ values: json_array.unique(props.coly, true) })\r\n  xAxis.label( props.coly )\r\n\r\n\r\n  var grid = {backgroundColor: 'rgb(0, 128, 0)'}\r\n\r\n  var visualMap = {\r\n      min: Math.min(...json_array.unique(props.value))*100,\r\n      max: Math.max(...json_array.unique(props.value))*100,\r\n      calculable: true,\r\n      orient: 'vertical',\r\n      left: 'left',\r\n      bottom: '10%',\r\n      inRange: {\r\n        color: ['green', 'yellow','orange', 'red']\r\n      }\r\n  }\r\n\r\n  var series = [{\r\n      type: 'heatmap',\r\n      data: json_array.map(function (item) {\r\n\r\n        var value = Number(item[props.value])\r\n        if( props.percentage === true ) value = (Number(item[props.value])*100).toFixed(2)\r\n\r\n          return [\r\n            item[props.colx],\r\n            item[props.coly],\r\n            value\r\n          ]\r\n        }),\r\n      label: {\r\n          show: true\r\n      },\r\n  }]\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n    grid: grid,\r\n    visualMap: visualMap\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function scatter( json_array, props={} ){\r\n\r\n  const scatter = require('../../series/scatter').default\r\n  const scatter_by = require('../../series/scatter/scatterBy').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : colx and coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx, json_array )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n\r\n  var colorBy = props.colorBy\r\n  if( colorBy === undefined) colorBy = props.label\r\n\r\n  var series\r\n\r\n  if( (colorBy !== undefined)&(json_array.columns.includes(colorBy)) ){\r\n\r\n    series = scatter_by({\r\n      ...props,\r\n      ...{\r\n          json_array: json_array,\r\n          colorBy: colorBy\r\n        }\r\n    })\r\n\r\n  }else{\r\n    series = scatter({\r\n      ...props,\r\n      ...{json_array: json_array}\r\n    })\r\n\r\n  }\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function bar( json_array, props={} ){\r\n\r\n  const bar = require('../../series/bar').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'bar plot required att : colx and coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.label(props.colx)\r\n  xAxis.tick_values(json_array.values(props.colx))\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // var series = echart_series.bar( props.coly, props)\r\n\r\n  var series = bar( {\r\n    ...props,\r\n    ...{\r\n      json_array: json_array,\r\n      col: props.coly\r\n    }} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n  }\r\n\r\n}\r\n","/**\r\n * echarts grid\r\n * =================\r\n *\r\n * Converts json arrays into echart grid series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: March 5, 2021\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\nimport get_color from '../../../colors/Colors'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function grid( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n    return []\r\n  }\r\n\r\n  var color_col = props.color\r\n  if( props.color === undefined ){\r\n    color_col = 'color'\r\n    json_array = json_array.create_column( 'color', r => get_color(r[props.value]) )\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'custom',\r\n    // coordinateSystem: 'cartesian2d',\r\n    renderItem: renderRectangle,\r\n    animation: false,\r\n    legendHoverLink : false,\r\n    silent: true,\r\n\r\n    encode: {\r\n        x: 0,\r\n        y: 1\r\n    },\r\n    data: json_array.map(r => [\r\n      r[props.colx],\r\n      r[props.coly],\r\n      r[props.value],\r\n      r[color_col],\r\n    ])\r\n  }\r\n\r\n  if( props.label === true ){\r\n    Series['label'] = {\r\n        show: true,\r\n        color: \"black\",\r\n        fontSize:12,\r\n        z: 10,\r\n        zlevel: 10,\r\n        formatter: (element) => {\r\n          return element.value[2]; // Use sum variable here\r\n        },\r\n    }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction renderRectangle(params, api) {\r\n\r\n    var xCoor = api.value(0);\r\n    var yCoor = api.value(1);\r\n    var color = api.value(3);\r\n\r\n    const [x,y] = api.coord([xCoor, yCoor])\r\n    const [w,h] = api.size([1, 1])\r\n\r\n    return {\r\n        type: 'rect',\r\n        shape: {\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        },\r\n        style: api.style({\r\n            stroke: '#B0B0B0',\r\n            fill: color,\r\n        }),\r\n    };\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport grid from '../../series/grid'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function rectGrid( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.label( props.colx )\r\n  xAxis.minValue()\r\n  xAxis.maxValue()\r\n  xAxis.hide()\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.label( props.coly )\r\n  yAxis.minValue()\r\n  yAxis.maxValue()\r\n  yAxis.hide()\r\n\r\n\r\n  var series = grid( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a pie char\r\n * @param  {string} value  values for pie chart\r\n * @param  {string} label  name of each section\r\n */\r\nexport default function pie( props ){\r\n\r\n  // format the data with and without a label (w/o is the default)\r\n  var data = props.json_array.map(r => { return {value: r[props.value]}})\r\n  if( props.label !== undefined ){\r\n    data = props.json_array.map(r => {\r\n      return {\r\n        value: r[props.value],\r\n        name: r[props.label]\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'pie',\r\n    avoidLabelOverlap: false,\r\n    radius: ['40%', '70%'],\r\n    labelLine: {\r\n                show: false\r\n            },\r\n    data: data\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    Series['label'] = {\r\n        show: false,\r\n        position: 'center'\r\n    }\r\n\r\n    Series['emphasis'] = {\r\n        label: {\r\n            show: true,\r\n            fontSize: '40',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie'\r\n\r\n\r\nexport default function pieChart( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.value === undefined)){\r\n    alert( 'pie plot required att : value ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\nimport pie from './index'\r\n/**\r\n * @param  {string} col  column name\r\n */\r\nexport default function fromSeries( props ){\r\n\r\n  const group = props.json_array.groupby([props.col])\r\n\r\n  return pie({\r\n      ...props,\r\n      ...{\r\n        json_array: group,\r\n        value: 'count',\r\n        label: props.col\r\n        }\r\n  })\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie/fromSeries'\r\n\r\n\r\nexport default function pieFromSeries( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined)){\r\n    alert( 'pie plot required att : col ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.label !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function waterfall( json_array, props={} ){\r\n\r\n  const waterfall = require('../../series/waterfall').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = waterfall( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","/**\r\n * echarts Options\r\n * =================\r\n *\r\n * Converts json arrays into echart option objects. This is\r\n * intended for customize plots\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 7, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport echartsTooltip from '../tooltips'\r\nimport echartsAxis from '../axis'\r\n\r\nimport * as features from './features'\r\nimport Line from './charts/line'\r\nimport Boxplot from './charts/boxplot'\r\nimport Heatmap from './charts/heatmap'\r\nimport Scatter from './charts/scatter'\r\nimport Bar from './charts/bar'\r\nimport Grid from './charts/grid'\r\nimport Pie from './charts/pie'\r\nimport PieFromSeries from './charts/pie/fromSeries'\r\nimport Waterfall from './charts/waterfall'\r\n\r\nimport Toolbox from './format/Toolbox'\r\nimport legend from './format/legend'\r\n\r\n\r\nexport default class echartsOptions extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    this.json_array = data\r\n\r\n    // cast the variable to a jsonArray type when it is a standard array\r\n    if( (this.json_array instanceof jsonArray) === false ){\r\n      this.json_array  = new jsonArray( this.json_array  )\r\n    }\r\n\r\n    // set the default plot parameters\r\n    this.default()\r\n  }\r\n\r\n\r\n  // set the default plot parameters\r\n  default(){\r\n\r\n    // default animations to off for performance\r\n    this.animation = false\r\n\r\n    this.tooltip = new echartsTooltip()\r\n\r\n    this.grid = {\r\n        left: '10%',\r\n        right: '10%',\r\n        bottom: '15%'\r\n    }\r\n\r\n    this.series = []\r\n  }\r\n\r\n\r\n  heatmap( props ){ return this.generate_options( Heatmap, props ) }\r\n  boxplot( props ){ return this.generate_options( Boxplot, props ) }\r\n  scatter( props ){ return this.generate_options( Scatter, props ) }\r\n  bar( props ){ return this.generate_options( Bar, props ) }\r\n  line( props ){ return this.generate_options( Line, props ) }\r\n  rectGrid( props ){ return this.generate_options( Grid, props ) }\r\n  pie( props ){ return this.generate_options( Pie, props ) }\r\n  pieFromSeries( props ){ return this.generate_options( PieFromSeries, props ) }\r\n  waterfall( props ){ return this.generate_options( Waterfall, props ) }\r\n\r\n\r\n  toolbox( props ){ return Toolbox( this, props ) }\r\n  selection( props ){ return features.Selection( this, props ) }\r\n  zoom( props ){ return features.DataZoom( this, props ) }\r\n  highlight( props ){\r\n    const options = features.Highlight( this, props )\r\n    this.local_variables( options )\r\n    delete this.json_array\r\n    return this\r\n  }\r\n\r\n  // wrapper used to generate the options based on the provided function\r\n  generate_options( func, props ){\r\n    const options = func( this.json_array, props )\r\n\r\n    this.local_variables( options )\r\n\r\n    // add the tooltip when provided as a parameter\r\n    if( props.tooltip !== undefined ){\r\n      this.tooltip.from_DataFrame(this.json_array, props.tooltip)\r\n    }\r\n\r\n    if( props.delete !== false ) delete this.json_array\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  // create a local copy of each option variable\r\n  local_variables( options ){\r\n    const keys = Object.keys( options )\r\n    for( var i=0; i < keys.length; i++ ){\r\n      const key = keys[i]\r\n      this[key] = options[key]\r\n    }\r\n  }\r\n\r\n  // appends the series\r\n  append_series( series ){\r\n    this.series = this.series.concat(series)\r\n    return this\r\n  }\r\n\r\n  xtick_padding(padding){\r\n    this.grid = {\r\n      ...this.grid,\r\n      ...{bottom: padding}\r\n    }\r\n  }\r\n\r\n  legend(position){\r\n    this.legend = legend(position)\r\n  }\r\n\r\n  // add a secondary y axis\r\n  secondary_axis( col ){\r\n    this.yAxis.push(  new echartsAxis(col) )\r\n    return this\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axhline( value, props={} ){\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'yAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axvline( value, props={} ){\r\n\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'xAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { toolbox as features } from 'echarts/lib/langEN'\r\n\r\n// adds a toolbox to the chart to enable user interaction\r\nexport default function Toolbox( option, props ){\r\n\r\n  option['toolbox'] = {\r\n    show: true,\r\n    feature: {\r\n        dataZoom: {\r\n          title: 'Zoom',\r\n          show: true\r\n        },\r\n        saveAsImage: { title: 'Save', show: true},\r\n        restore: {title: 'Restore', show: true},\r\n    }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n// adds the ability to select data from the plot\r\nexport default function Selection( option, sliders=false ){\r\n\r\n  option['brush'] = {\r\n      toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n      xAxisIndex: 0,\r\n      outOfBrush: {\r\n          colorAlpha: 0.8\r\n      }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\n// adds the ability to zoom into plots\r\nexport default function DataZoom( option, props ){\r\n\r\n  if( option.dataZoom === undefined ) option['dataZoom'] = []\r\n\r\n\r\n  var params = props\r\n  if( params === undefined ){\r\n    params = {\r\n      scroll: true,\r\n      xAxis: false,\r\n      yAxis: false,\r\n      sliders: {\r\n        xAxis: true,\r\n        yAxis: true,\r\n      }\r\n    }\r\n  }\r\n\r\n  if( params.scroll ){\r\n    var scrollZoom = {\r\n        type: 'inside',\r\n        start: 0,\r\n        end: 100,\r\n        filterMode: 'none',\r\n    }\r\n\r\n    if( params.xAxis ) scrollZoom['orient'] = 'horizontal'\r\n    if( params.yAxis ) scrollZoom['orient'] = 'vertical'\r\n\r\n    option['dataZoom'] = option['dataZoom'].concat(scrollZoom)\r\n  }\r\n\r\n  if( params.sliders !== undefined ){\r\n    const icon = 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z'\r\n\r\n    if( params.sliders.xAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          xAxisIndex: 0,\r\n          start: 0,\r\n          end: 100,\r\n          height: 7,\r\n          bottom: 8,\r\n          showDataShadow: false,\r\n          handleSize: 15,\r\n          handleIcon: icon,\r\n          filterMode: 'none',\r\n        }\r\n      )\r\n    }\r\n\r\n    if( params.sliders.yAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n            type: 'slider',\r\n            show: true,\r\n            yAxisIndex: 0,\r\n            start: 0,\r\n            end: 100,\r\n            width: 7,\r\n            showDataShadow: false,\r\n            handleSize: 15,\r\n            handleIcon: icon,\r\n            filterMode: 'none',\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  // console.log( 'what is this', sliders)\r\n  // console.log( 'soom', option)\r\n\r\n    return option\r\n}\r\n","\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Highlight( options, props ){\r\n\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'minimum attributes: colx, coly and value')\r\n    return\r\n  }\r\n\r\n  // identify the index of the samples to highlight\r\n  var index = props.value\r\n  if( typeof props.value === 'string'){\r\n    index = options.xAxis[0]['data'].indexOf( props.value )\r\n  }\r\n\r\n  // extend the first item in the series with the marked area\r\n  options.series[0]['markArea'] = {\r\n      data: [\r\n        [{\r\n          name: props.value,\r\n          xAxis: index - 1\r\n      }, {\r\n          xAxis: index + 1\r\n      }]\r\n    ]\r\n  }\r\n\r\n  return options\r\n\r\n}\r\n","\r\nexport default function legend( position ){\r\n\r\n  switch( position ){\r\n\r\n    case 'top-center':\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n\r\n    case 'left':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        left: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    case 'right':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        right: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    default:\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n  }\r\n\r\n}\r\n","/**\r\n * Echarts Components\r\n * ===================\r\n *\r\n * returns a class containing all available eCharts components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n import echartsOptions from './options'\r\n\r\n\r\n\r\n\r\nexport default class eChartsComponents extends Object{\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.data = data\r\n  }\r\n\r\n  get options(){\r\n    return new echartsOptions( this.data )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Vline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'vLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: 0,\r\n            y: [1, 2]\r\n        },\r\n        data: data\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var xValue = api.value(0);\r\n    var highPoint = api.coord([xValue, api.value(1)]);\r\n    var lowPoint = api.coord([xValue, api.value(2)]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: null\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\nexport default function Circle( props ){\r\n  \r\n  var Series = {\r\n      type: 'custom',\r\n      renderItem: (params, api) => renderItem(params, api, props),\r\n      animation: false,\r\n      legendHoverLink : false,\r\n      silent: true,\r\n      data: props.data,\r\n      z: 0,\r\n      zlevel: 0,\r\n      encode: {\r\n          x: 0,\r\n          y: 1\r\n      },\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n\r\n}\r\n\r\nfunction renderItem(params, api, props) {\r\n\r\n    const [x,y] = api.coord([\r\n      api.value(0),\r\n      api.value(1)\r\n    ])\r\n\r\n    const radius = Math.max(...api.size([props.radius, props.radius]))\r\n\r\n    var Series = {\r\n        type: 'circle',\r\n        shape: {\r\n          cx: x,\r\n          cy: y,\r\n          r: radius,\r\n        },\r\n        z: 0,\r\n        zlevel: 0,\r\n        style: api.style({\r\n            fill: 'red',\r\n            stroke: 'red'\r\n        })\r\n    }\r\n\r\n    if( props.color !== undefined ) Series.style.fill = props.color\r\n    if( props.border !== undefined ) Series.style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Hline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'hLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: [1, 2],\r\n            y: 0,\r\n        },\r\n        data: data,\r\n        z: 100\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var yValue = api.value(0);\r\n    var highPoint = api.coord([api.value(1), yValue]);\r\n    var lowPoint = api.coord([api.value(2), yValue]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: 'green'\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","/**\r\n * echarts Formatter\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\nimport scatter from './scatter'\r\nimport scatter_by from './scatter/scatterBy'\r\nimport boxplot from './boxplot'\r\nimport line from './line'\r\nimport bar from './bar'\r\nimport grid from './grid'\r\nimport pie from './pie'\r\nimport pieFromSeries from './pie/fromSeries'\r\nimport waterfall from './waterfall'\r\nimport rollingAvg from './line/rollingAvg'\r\n\r\nimport ErrorBars from './features/ErrorBars'\r\nimport Circle from './features/Circle'\r\nimport Vline from './features/Vline'\r\nimport Hline from './features/Hline'\r\n\r\n\r\n\r\nexport {default as scatter} from './scatter'\r\nexport {default as scatter_by} from './scatter/scatterBy'\r\n\r\n\r\nexport default class echartsSeries extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.json_array = data;\r\n\r\n    // convert to a jsonArray type and groupby week attribute\r\n    if( !this.json_array instanceof jsonArray ){\r\n      this.json_array = new jsonArray( this.json_array )\r\n    }\r\n\r\n  }\r\n\r\n  scatter( props ){ return scatter({...props, ...{json_array:this.json_array}}) }\r\n  scatter_by( props ){ return scatter_by({...props, ...{json_array:this.json_array}}) }\r\n  boxplot( props ){ return boxplot({...props, ...{json_array:this.json_array}}) }\r\n  line( props ){ return line({...props, ...{json_array:this.json_array}}) }\r\n  bar( props ){ return bar({...props, ...{json_array:this.json_array}}) }\r\n  pie( props ){ return pie({...props, ...{json_array:this.json_array}}) }\r\n  pieFromSeries( props ){ return pieFromSeries({...props, ...{json_array:this.json_array}}) }\r\n  rectGrid( props ){ return grid({...props, ...{json_array:this.json_array}}) }\r\n  waterfall( props ){ return waterfall({...props, ...{json_array:this.json_array}}) }\r\n  rollingAvg( props ){ return rollingAvg({...props, ...{json_array:this.json_array}}) }\r\n\r\n\r\n  errorbars( props ){ return ErrorBars({...props, ...{json_array:this.json_array}}) }\r\n  circle( props ){ return Circle({...props, ...{json_array:this.json_array}}) }\r\n  vline( props ){ return Vline({...props, ...{json_array:this.json_array}}) }\r\n  hline( props ){ return Hline({...props, ...{json_array:this.json_array}}) }\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// returns the\r\nexport default function rollingAvg( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  if( !json_array.columns.includes(`${props.coly}_avg`) ){\r\n    json_array = json_array.rolling_average(props.coly, props.window)\r\n  }\r\n\r\n  var Series = {\r\n    type: 'line',\r\n    data: json_array.map(r => r[`${props.coly}_avg`]),\r\n    smooth: true,\r\n    showSymbol: false,\r\n    lineStyle: {\r\n        color: '#000000',\r\n        width: 2,\r\n        type: 'dashed'\r\n    },\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Vline from './Vline'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function ErrorBars( props ){\r\n\r\n  if( (props.min === undefined)|(props.max === undefined) ){\r\n    alert( 'minimum attributes: min and max')\r\n    return\r\n  }\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = Vline({\r\n    ...props,\r\n    ...{\r\n      colx: '__index__',\r\n      coly: props.min,\r\n      colz: props.max,\r\n      zIndex: -1\r\n    }\r\n  })\r\n\r\n  // scatter point for the minimum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.min,\r\n      symbol: 'triangle',\r\n      color: 'green'\r\n    })[0]\r\n  )\r\n\r\n  // scatter point for the maximum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.max,\r\n      symbol: 'diamond',\r\n      color: 'blue'\r\n    })[0],\r\n  )\r\n\r\n\r\n  // scatter point for the average value when available\r\n  if( props.avg !== undefined ){\r\n    Series.push(\r\n      json_array.echartsSeries.scatter({\r\n        colx:'__index__',\r\n        coly:props.avg,\r\n        symbol: 'square',\r\n        color: 'red'\r\n      })[0]\r\n    )\r\n  }\r\n\r\n  return Series\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\n\r\nexport function max(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.max(...array)\r\n}\r\n\r\nexport function min(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.min(...array)\r\n}\r\n\r\nexport function sum(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return array.reduce((a,b) => a + b, 0)\r\n}\r\n\r\nexport function mean(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return sum(array) / array.length\r\n}\r\n\r\nexport function dropna(array){\r\n  return array.filter(r => (r !== undefined)&(r !== null)&(!Number.isNaN(r)) )\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\nimport * as arrayStats from './array'\r\n\r\nexport function max(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.max(data.map(row => row[col]))\r\n}\r\n\r\nexport function min(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.min(data.map(row => row[col]))\r\n}\r\n\r\nexport function sum(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.sum(data.map(row => row[col]))\r\n}\r\n\r\nexport function mean(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.mean(data.map(row => row[col]))\r\n}\r\n\r\n\r\nexport function forward_diff(data, col, newCol, step=1){\r\n  if( newCol === undefined) newCol = col\r\n\r\n  for( let i=step; i < data.length; i++ ){\r\n    data[i][newCol] = data[i][col] - data[i-step][col]\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n\r\n// computes the rolling average for the provided column\r\nexport function rolling_average(data, col, window=7 ){\r\n\r\n  var pStep, nStep\r\n  if( window % 2  === 0){\r\n    pStep = window/2\r\n    nStep = window/2\r\n\r\n  }else{\r\n    pStep = Math.floor(window/2)\r\n    nStep = Math.floor(window/2) + 1\r\n  }\r\n\r\n  const yValues = data.map(r => r[col])\r\n\r\n  for( let i=0; i < data.length; i++ ){\r\n\r\n    var start = i - nStep\r\n    var end = i + pStep\r\n\r\n    // ensure that the statistics do not count out of bounds values\r\n    if (start < 0 ) start = 0\r\n    if (end > data.length ) end = data.length\r\n\r\n    data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,end))\r\n  }\r\n\r\n  return data\r\n}\r\n","/**\r\n * JSON Array\r\n * ===============\r\n *\r\n * Extend the Array components to include various functions useful\r\n * for processing an array of JSON objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Feb 11, 2020\r\n */\r\n\r\n\r\n\r\n // import _ from 'lodash'\r\nimport jsonObject from './jsonObject'\r\n\r\nimport Series from './Series'\r\nimport DataTypes from './data_types/dtypes'\r\nimport strFormat from './data_types/format/strFormat'\r\n\r\nimport eChartsComponents from './frameworks/echarts/components'\r\nimport echartsOptions from './frameworks/echarts/options'\r\nimport echartsSeries from './frameworks/echarts/series'\r\n\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\n\r\nimport * as stats from './statistics/matrix'\r\n\r\n\r\n\r\nexport default class jsonArray extends Array{\r\n\r\n  constructor(array=[], inplace, dtypes) {\r\n\r\n    // var dtypes = dtypes\r\n    if( dtypes === undefined ) dtypes = new DataTypes( array )\r\n    // console.log( dtypes )\r\n\r\n    // add an index column when the array is not empty\r\n    if( (array.length > 0)&(inplace!==true) ){\r\n\r\n      array = JSON.parse(JSON.stringify(array))\r\n\r\n      // when the Array is passed in as an array of arrays, covert\r\n      // it to an array of objects\r\n      if( array[0].hasOwnProperty('length') ){\r\n        for( var i=0; i < array.length; i++ ){\r\n          array[i] = {...array[i]}\r\n        }\r\n      }\r\n\r\n      const columns = Object.keys(array[0])\r\n\r\n      // create an internal index attribute when one doesn't exist\r\n      if( !columns.includes('__index__') ){\r\n        for( i=0; i < array.length; i++ ){\r\n          array[i]['__index__'] = i\r\n        }\r\n      }\r\n\r\n\r\n      // initialize the array based on the data type of the uncloned DataFrame\r\n      array = dtypes.init(array)\r\n    }\r\n\r\n    super()\r\n\r\n    // to avoid max recursion depth, we push each row separately\r\n    array.map( row => this.push(row))\r\n\r\n    // console.log( dtypes )\r\n    // dictionary containing column data types\r\n    this.dtypes = dtypes\r\n\r\n  }\r\n\r\n\r\n  // returns all columns in the jsonArray\r\n  get columns(){\r\n    var columns = []\r\n\r\n    var max_length = this.length\r\n    if( max_length > 50 ) max_length = 50\r\n\r\n    for( var i=0; i < max_length; i++ ){\r\n      columns = columns.concat(Object.keys(this[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\r\n  }\r\n\r\n  /**\r\n   * Replace the column names with those provided by the column array\r\n   * @param  {Array} columns array of column names\r\n   * @return {Array}         jsonArray with new column names\r\n   */\r\n  set columns( columns ){\r\n      const keys = this.columns\r\n\r\n      // define a mapping between the current and new column names\r\n      var mapping = {}\r\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\r\n        mapping[keys[i]] =columns[i]\r\n      }\r\n\r\n      // return a json array with the new mapping applied\r\n      return this.rename( mapping, {inplace: true} )\r\n  }\r\n\r\n  // resets the index value\r\n  reset_index(props={}){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(props['inplace'])\r\n\r\n    for( var i=0; i < array.length; i++ ){\r\n      array[i]['__index__'] = i\r\n    }\r\n    return array\r\n  }\r\n\r\n  // return all values for the specified column\r\n  values( col ){\r\n    return [...this].map(row => row[col])\r\n  }\r\n\r\n  /**\r\n   * Returns an array of index values\r\n   * @return {Array} Array of index values\r\n   */\r\n  get index(){\r\n    return [...this].map(row => row.__index__)\r\n  }\r\n\r\n  /**\r\n   * Returns a Series containing the data for the specified column\r\n   * @param  {string} col column name\r\n   * @return {Series}     Series containing the column data\r\n   */\r\n  col( col ){\r\n    const index = this.index\r\n    const value = [...this].map(row => row[col])\r\n    return new Series({\r\n      index: index,\r\n      value: value,\r\n      dtype: this.dtypes[col],\r\n      name: col\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Combines the column series with the local DataFrame\r\n   * @param {Series} series Series containing data for a single column\r\n   */\r\n  set_col( series, params={} ){\r\n    // duplicate the jsonArray\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // retrieve index and convert to string type to match the\r\n    // index from the Series\r\n    var index = this.index.map( row => row.toString() )\r\n\r\n    for (var [key, value] of Object.entries(series.data)) {\r\n      var id = index.indexOf(key)\r\n\r\n      // extend the DataFrame with a new row containing the\r\n      // sample with an unmatched id\r\n      if( id === -1 ){\r\n        array.push({\r\n          [series.name]: value,\r\n          __index__: key\r\n        })\r\n        continue\r\n      }\r\n\r\n      // overwrite existing or create new entries for the value\r\n      array[id][series.name] = value\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /// returns a jsonArray with the specified columns\r\n  selectColumns( columns ){\r\n    var subset = []\r\n    this.forEach( r => {\r\n      var row = {}\r\n      columns.forEach(s => row[s] = r[s])\r\n      subset.push(row)\r\n    })\r\n    return new jsonArray(subset)\r\n  }\r\n\r\n\r\n  append( df ){\r\n    return new jsonArray([...this].concat(df))\r\n  }\r\n\r\n  /**\r\n   * Applies a given function to a column and returns a DataFrame\r\n   * with the results. The results can be written inplace or a nedw\r\n   * column created when specified as a parameter\r\n   * @param  {string} col     column name\r\n   * @param  {function} func  function to apply to the column\r\n   * @param  {string} newCol  when provided a new column is produced\r\n   * @return {[type]}      [description]\r\n   */\r\n  apply( col, func, newCol ){\r\n\r\n    if( newCol === undefined ) newCol = col\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][newCol] = func(this[i][col])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * cretes a new column by applying the provided function to each row\r\n   * @param  {string} col     name of the column to create\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   create_column( col, func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][col] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * applies the provided function to each row\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   row_apply( func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n\r\n  // returns the values of the data at the specified index\r\n  loc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( typeof idx == \"object\" ){\r\n      return  new jsonArray([...this].filter(row => idx.includes(row.__index__) ))\r\n    }\r\n\r\n    // return the row after it has been converted to a series\r\n    if( props.Series === true ){\r\n      const index = this.columns\r\n      const value = Object.values([...this].filter(row => row.__index__ === idx))\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n\r\n      return [...this].filter(row => row.__index__ === idx )\r\n  }\r\n\r\n  // return the values of the data at the relative row number\r\n  iloc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( Array.isArray(idx) ){\r\n      var array = []\r\n      for( var i=0; i < idx.length; i++ ){\r\n        array.push( this[idx[i]] )\r\n      }\r\n      return new jsonArray(array)\r\n    }\r\n\r\n    if( props.Series === true ){\r\n      const index = Object.keys(this[idx])\r\n      const value = Object.values(this[idx])\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n    return this[idx]\r\n  }\r\n\r\n  /**\r\n   * overwrites the local index column with the provided column\r\n   * @param {String} col Column name\r\n   */\r\n  set_index( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < array.length; i ++ ){\r\n      array[i].__index__ = array[i][col]\r\n      delete array[i][col]\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Converts the contents of the jsonArray into a formatted string\r\n   * where the columns are equally spaced apart and the values are\r\n   * formatted based on the internal data type\r\n   * @return {String} jsonArray contents formatted as a string\r\n   */\r\n  to_string(){\r\n    const format = new strFormat(this)\r\n    return format.table\r\n  }\r\n\r\n  /**\r\n   * returns the strFormat class used to format matrix components into\r\n   * strings such as single columns, rows, values, etc.\r\n   * @return {class} strFormat class with the current jsonArray contents\r\n   */\r\n  get strFormat(){\r\n    return new strFormat(this)\r\n  }\r\n\r\n  // sorts the json array by the provided column\r\n  sort_values( col, ascending=true){\r\n\r\n    var array\r\n\r\n    //sort the table based on the ascending flag\r\n    if( ascending === true ){\r\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\r\n\r\n    }else{\r\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Merge two DataFrames together\r\n   * @param  {Array} json_array           DataFrame to be merged\r\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\r\n   * @param  {string} on                   index (col) to use for merging\r\n   * @return {Array}                      DataFrame containing the merged columns\r\n   */\r\n  merge( json_array, params={how:'left', on:'__index__'}  ){\r\n\r\n    var array = []\r\n    var df1, df2, index, a, b\r\n    // var primary_col, secondary_col, value\r\n\r\n    var col_left, col_right\r\n\r\n    // determine the columns to use for merging the left/right\r\n    // DataFrames based on the specified parameters\r\n    if( params.on !== undefined ){\r\n      col_left = params.on\r\n      col_right = params.on\r\n    }\r\n    if( params.on_right !== undefined ) col_right = params.on_right\r\n    if( params.on_left !== undefined ) col_left = params.on_left\r\n\r\n\r\n    // determine the merging criteria\r\n    switch( params.how ){\r\n      case 'left':\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n\r\n      case 'right':\r\n        df1 = [...json_array]\r\n        df2 = [...this]\r\n        // primary_col = col_right\r\n        // secondary_col = col_left\r\n        index = json_array.unique(col_right)\r\n        break;\r\n\r\n      // default to merge on left\r\n      default:\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n    }\r\n\r\n    // var lookup = {}\r\n    // for( a = 0; a < df2.length; a++ ){\r\n    //   value = df2[a][secondary_col]\r\n    //\r\n    //   const keys = Object.keys(lookup)\r\n    //   if( keys.includes(value) ){\r\n    //     lookup[value].push( df2[a] )\r\n    //   }else{\r\n    //     lookup[value] = [df2[a]]\r\n    //   }\r\n    // }\r\n    //\r\n    // // pull the rows corresponding to the provided index value\r\n    // for( var a=0; a < df1.length; a++ ){\r\n    //   value = df1[a][secondary_col]\r\n    //\r\n    //   const lookupVal = lookup[value ]\r\n    //\r\n    //   // merge rows with similar index values (intersection). Create\r\n    //   // multiple rows when duplicate index values are present\r\n    //   if( lookupVal.length > 0 ){\r\n    //     for( b=0; b < lookupVal.length; b++ ){\r\n    //       array.push({...lookupVal[b], ...df1[a]})\r\n    //     }\r\n    //   }\r\n    //\r\n    //   // add the rows that have no overlap\r\n    //   if( lookupVal.length === 0  ){\r\n    //     array.push(df1[a])\r\n    //   }\r\n    //\r\n    // }\r\n\r\n    // pull the rows corresponding to the provided index value\r\n    for( var i=0; i < index.length; i++ ){\r\n      const value = index[i]\r\n      const df1_rows = df1.filter(r => r[col_left] === value)\r\n      const df2_rows = df2.filter(r => r[col_right] === value)\r\n\r\n      // merge rows with similar index values (intersection). Create\r\n      // multiple rows when duplicate index values are present\r\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n          for( b=0; b < df2_rows.length; b++ ){\r\n            array.push({...df2_rows[b], ...df1_rows[a]})\r\n          }\r\n        }\r\n      }\r\n\r\n      // add the rows that have no overlap\r\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n            array.push(df1_rows[a])\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    return new jsonArray( array, true )\r\n\r\n  }\r\n\r\n  /**\r\n   * Replaces undefined data with a given value. The values\r\n   * can be assigned globally or by column\r\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\r\n   *                              Values can be assigne by column, by providing a value\r\n   *                              per colum in the parameter dictionary\r\n   * @return {Array}             DataFrame with missing values replaed\r\n   */\r\n  fillna( params={} ){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    var i, j, columns, col, val\r\n\r\n    // fill missing values with unique values per column\r\n    // This assumes that the input is an object with a\r\n    // value for each column name\r\n    if( typeof params === 'object'){\r\n      columns = Object.keys(params)\r\n\r\n      // nothing to do when no inputs are provided\r\n      if( columns.length === 0) return array\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          val = params[col]\r\n          if( array[i][col] === undefined ) array[i][col] = val\r\n          if( array[i][col] === null ) array[i][col] = val\r\n          if( array[i][col] === '' ) array[i][col] = val\r\n          // if( isNaN(array[i][col]) ) array[i][col] = val\r\n        }\r\n      }\r\n\r\n    }else{\r\n\r\n      // fill all missing values with the same value\r\n      columns = array.columns\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          if( array[i][col] === undefined ) array[i][col] = params\r\n          if( array[i][col] === null ) array[i][col] = params\r\n          // if( isNaN(array[i][col]) ) array[i][col] = params\r\n        }\r\n      }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n\r\n\r\n\r\n  // filters the json array based on the column and the provided value.\r\n  // The value can be either a single variable or an array\r\n  filter_column( col, value ){\r\n\r\n    if( Array.isArray(value) ){\r\n      return new jsonArray(\r\n        [...this].filter(row => value.includes(row[col])),\r\n        false,\r\n        this.dtypes\r\n       )\r\n    }else{\r\n      return new jsonArray(\r\n        [...this].filter(row => row[col] === value ),\r\n        false,\r\n        this.dtypes\r\n      )\r\n    }\r\n  }\r\n\r\n  concat( array ){ return new jsonArray( [...this].concat(array)) }\r\n\r\n  filter( func ){\r\n    return new jsonArray( [...this].filter(func), false, this.dtypes )\r\n  }\r\n\r\n  map( func ){\r\n    return [...this].map(func)\r\n  }\r\n\r\n  groupby( col ){\r\n    var dtypes = this.dtypes\r\n    dtypes['json_obj'] = 'jsonArray'\r\n\r\n    return new jsonArray( this.__groupby__( this, col ), true, dtypes )\r\n  }\r\n\r\n\r\n  __groupby__( json_obj, atts, keys ){\r\n\r\n    // append the keys with the json object\r\n    if( atts.length === 0 ){\r\n      keys['json_obj'] = new jsonArray(json_obj)\r\n      keys['count'] = json_obj.length\r\n      return keys\r\n    }\r\n\r\n    // initial conditions for keys\r\n    if( keys === undefined ){ keys = {} }\r\n\r\n    var results = []\r\n\r\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\r\n    const values = json_obj.unique(atts[0], true)\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      const group = json_obj.filter( row => row[atts[0]] === val )\r\n\r\n      // deep copy the keys and append with the current key\r\n      var temp_keys = Object.assign({}, keys)\r\n      temp_keys[atts[0]] = values[i]\r\n\r\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  count_values( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var counts = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      if( !unique.includes(val) ){\r\n        unique.push(val)\r\n        counts[val] = 0\r\n      }\r\n      counts[val]++\r\n    }\r\n\r\n    // map the unique object count back to a flat object\r\n    var buffer = []\r\n    for( i=0; i < unique.length; i++ ){\r\n      const split_val = unique[i].split(',')\r\n\r\n      //\r\n      const obj = {count: counts[unique[i]]}\r\n      for( var j=0; j < split_val.length; j++ ){\r\n        obj[columns[j]] = split_val[j]\r\n      }\r\n\r\n      buffer.push( obj )\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  drop_duplicates( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var buffer = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      if( !unique.includes(values[i]) ){\r\n          unique.push( values[i] )\r\n          buffer.push( this[i] )\r\n      }\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n\r\n  pivot( columns ){\r\n\r\n    var pivot_table = []\r\n\r\n    if( columns === undefined ) columns = this.columns\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {column: columns[i]}\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < this.length; j++ ){\r\n        temp[j] = this[j][columns[i]]\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n\r\n  // converts a matrix into a flatten table (opposite of pivot table)\r\n  flatten( id_att = '__index__' ){\r\n\r\n    // extract a list of column names\r\n    const columns = this.columns\r\n\r\n    var table = []\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      const row = this[i]\r\n\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n\r\n        // avoid a duplicate entry as the id attribute\r\n        if( col === id_att ) continue\r\n\r\n        table.push({\r\n          column: col,\r\n          row: row[id_att],\r\n          value:  row[col]\r\n        })\r\n      }\r\n    }\r\n\r\n    return new jsonArray( table, true )\r\n\r\n  }\r\n\r\n  // creates a pivot table based on the specified row and column.\r\n  // The summary type is used to compute the value of the pivot.\r\n  pivot_table( row, column, summaryType='count', value=undefined ){\r\n\r\n    var pivot_table = []\r\n\r\n    const row_val = this.unique( row )\r\n    const column_val = this.unique( column )\r\n\r\n\r\n    for( var i=0; i < row_val.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {row: row_val[i]}\r\n\r\n      const rval = row_val[i]\r\n      // const by_row = this.filter( r => r[row] === rval )\r\n      const by_row = [...this].filter( r => r[row] === rval )\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < column_val.length; j++ ){\r\n\r\n        const cval = column_val[j]\r\n        // const by_col = by_row.filter( r => r[column] === cval )\r\n        const by_col = [...by_row].filter( r => r[column] === cval )\r\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\r\n        // console.log( by_col )\r\n\r\n        var temp_json\r\n        switch( summaryType ){\r\n          // returns the number of rows for the current split\r\n          case 'count':\r\n            temp[column_val[j]] = by_col.length\r\n            break;\r\n\r\n          // returns the number of unique values for the current split\r\n          case 'unique':\r\n            // set defaults for missing parameter values\r\n            if( value === undefined ) value = '__index__'\r\n\r\n            temp_json = new jsonArray( by_col )\r\n            temp[column_val[j]] = temp_json.unique( value ).length\r\n            break;\r\n\r\n          case 'sum':\r\n            temp[column_val[j]] = stats.sum( by_col, value)\r\n            break;\r\n\r\n          case 'mean':\r\n            temp[column_val[j]] = stats.mean( by_col, value)\r\n            break;\r\n\r\n          default:\r\n            temp[column_val[j]] = by_col.length\r\n            break\r\n        }\r\n\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n  /**\r\n   * convert the column data type based on the mapping\r\n   * @param  {Object} [columns={}] object containing the mapping between columns and data type\r\n   * @param  {Object} [params={}]  parameter object\r\n   * @return {Array}              jsonArray containing the mapped columns\r\n   */\r\n  astype( columns={}, params={} ){\r\n\r\n    var inplace = true\r\n    if( params.inplace !== undefined ) inplace = params.inplace\r\n\r\n    var array = this.__inplace__(inplace)\r\n\r\n    // convert all columns based on the specified data types\r\n    const col_names = Object.keys(columns)\r\n    for( var i=0; i < col_names.length; i++ ){\r\n      const col = col_names[i]\r\n      array = array.dtypes.convert(array, col, columns[col], params)\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  // converts the specified column into a date string\r\n  strftime( col, format='YYYY-MM-DD', params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'strftime', params)\r\n  }\r\n\r\n  // converts the specified column into a\r\n  strptime( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'datetime', params)\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a new column by merging the content from the columns\r\n   * specified in the columns attribute\r\n   * @param  {array} columns  array of column names\r\n   * @param  {String} col_name Name of the resulting column\r\n   * @param  {String} [sep='   ']            string delimiter\r\n   * @return {OBJECT}          jsonArray with the new column\r\n   */\r\n  combine( columns, col_name, sep=' ', params={} ){\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      // seed the value with the value from the first column\r\n      var temp = this[i][columns[0]]\r\n\r\n      for( var j=1; j < columns.length; j++ ){\r\n        temp = temp + sep + this[i][columns[j]]\r\n      }\r\n\r\n      array[i][col_name] = temp\r\n    }\r\n\r\n    array.dtypes[col_name] = 'string'\r\n    return array\r\n  }\r\n\r\n  combine_columns( col1, col2, col_name, sep=' ' ){\r\n    // creates a new column by merging the content of col 1 and 2 to\r\n    // form a new column\r\n    console.log( 'this function is deprecated: see combine')\r\n    return this.combine([col1, col2], col_name, sep )\r\n  }\r\n\r\n  to_jsonObject( key, value ){\r\n    // Converts the jsonArray into a jsonObject with following\r\n    // columns for the key and values\r\n\r\n    var object = {}\r\n    for( var i=0; i < this.length; i++ ){\r\n      object[this[i][key]] = this[i][value]\r\n    }\r\n\r\n    return new jsonObject( object )\r\n  }\r\n\r\n  /**\r\n   * creates a single column with the hex color string based\r\n   * on the RGB color values taken from separate columns\r\n   * @param  {string} rcol red color column\r\n   * @param  {string} gcol green color column\r\n   * @param  {string} bcol blue color column\r\n   * @return {[type]}      [description]\r\n   */\r\n  to_rgb( rcol, gcol, bcol, colorCol='rgb'){\r\n    const toHex = require('./frameworks/colors/Colors').rgbToHex\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][colorCol] = toHex( this[i][rcol], this[i][gcol], this[i][bcol])\r\n    }\r\n\r\n    this.dtypes[colorCol] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * converts the column value into a color\r\n   * @param  {string} col color column\r\n   * @param  {string} colorType color label\r\n   */\r\n  to_color( col, colorType='entropy_8bit'){\r\n    const get_color = require('./frameworks/colors/Colors').get_color\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i]['color'] = get_color( this[i][col], colorType)\r\n    }\r\n\r\n    this.dtypes['color'] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  unique( col, ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    // filter the undefined values from unique\r\n    var values = [...this]\r\n      .map(row => row[col])\r\n      .filter(row => row !== undefined)\r\n\r\n    // remove duplicates by forcing to a set\r\n    var unique_values = [...new Set(values)]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtypes[col] === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        switch( typeof unique_values[0] ){\r\n          case \"string\":\r\n            return unique_values.sort()\r\n\r\n          case \"boolean\":\r\n            return unique_values.sort()\r\n\r\n          default :\r\n            try{\r\n              unique_values = unique_values.map( x => +x)\r\n              unique_values = unique_values.sort(function(a,b){return a - b})\r\n            }catch{\r\n              // default to the standard sort\r\n              unique_values.sort()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Applies a threshold to the specified column\r\n   * @param  {function} func     function used to partition dataset\r\n   * @param  {string} res_col   column name containing the results\r\n   * @return {Array}            jsonArray containing res_col\r\n   */\r\n  label( func, params={} ){\r\n\r\n    const param_keys = Object.keys(params)\r\n\r\n    // set defaults for missing parameter values\r\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\r\n    if( !param_keys.includes('value') ) params['value'] = true\r\n    if( !param_keys.includes('default') ) params['default'] = false\r\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n\r\n    // identify all samples identified by the rule\r\n    const sample_index = array.filter( func ).map( row => row.__index__ )\r\n\r\n    // create a boolean label, where parts in the sample set are true\r\n    for( var i=0; i < array.length; i ++ ){\r\n\r\n      // extract a list of columns name for the given row\r\n      const columns = Object.keys( array[i] )\r\n\r\n      // the value is true when it is included in the sample set\r\n      if( sample_index.includes( array[i].__index__ ) ){\r\n        array[i][params['output_col']] = params['value']\r\n        continue\r\n      }\r\n\r\n      // set the default value when no value exists\r\n      if( !columns.includes(params['output_col']) ){\r\n        array[i][params['output_col']] = params['default']\r\n        continue\r\n      }\r\n\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Copies the content from one column to a new column. This is\r\n   * non destructive, so if the column already exists, only the\r\n   * missing data will be copied over\r\n   * @param  {String} col     original column name\r\n   * @param  {String} new_col new column name\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  copy_column( col, new_col, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n      const columns = Object.keys(array[i] )\r\n\r\n      if(!columns.includes( new_col) ){\r\n        array[i][new_col] = array[i][col]\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns a DataFrame containing only the specified column\r\n   * and the index\r\n   * @param  {array} columns array of column names\r\n   * @return {array}         json array containing the specified columns\r\n   */\r\n  select_columns( columns ){\r\n\r\n    var array = []\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < this.length; i++ ){\r\n\r\n      var row = {__index__: this[i].__index__}\r\n      // copy the specified columns for each row\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n        row[col] = this[i][col]\r\n      }\r\n\r\n      array.push( row )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Drops columns from the DataFrame\r\n   * @param  {String or Array} columns String or Array of column names\r\n   * @return {OBJECT}         JsonArray without the specified columns\r\n   */\r\n  drop_columns( columns, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      // delete the specified column when of string type\r\n      if( typeof columns === 'string' ){\r\n        delete array[columns]\r\n\r\n      // when a list is provided, delete all columns in the string\r\n      }else{\r\n\r\n        for( var j=0; j < columns.length; j++ ){\r\n          delete array[i][columns[j]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * renames columns\r\n   * @param  {object} mapping object containing the existing column name and new column name\r\n   * @return {object}         json array with the new column naming\r\n   */\r\n  rename( mapping, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const columns = Object.keys( mapping )\r\n\r\n    // rename the specified columns\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      const ex_columns = Object.keys( array[i] )\r\n\r\n      // create a new column based on the mapping and delete\r\n      // the existing one (taht was replaced)\r\n      for( var j=0; j < columns.length; j++ ){\r\n        // only replace the column when data exists for that column\r\n        if( ex_columns.includes(columns[j]) ){\r\n          const new_col = mapping[columns[j]]\r\n          array[i][new_col] = array[i][columns[j]]\r\n\r\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\r\n          delete array[i][columns[j]]\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * replaces the values in the specified column with the given value\r\n   * based on the mapping\r\n   * @param  {String} col     original column name\r\n   * @param  {Object} mapping Object containing the value mapping\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  replace( col, mapping={}, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const values = Object.keys( mapping )\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n      const columns = Object.keys(array[i] )\r\n\r\n      // do not perform mapping when no data nor the mapping exists\r\n      if(!columns.includes(col) ) continue\r\n      if(!values.includes(array[i][col])) continue\r\n\r\n      array[i][col] = mapping[array[i][col]]\r\n\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the data object. When enable is true, the original\r\n   * jsonArray is returned so the values are modified directly. Otherwise\r\n   * the jsonArray is cloned to avoid mutation of the original object\r\n   *\r\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\r\n   * @return {Object}             current jsonArray content\r\n   */\r\n  __inplace__( enable=false ){\r\n\r\n    // clone the local copy to avoid mutation when inplace is disabled\r\n    if( enable ) return this\r\n\r\n    return new jsonArray( this )\r\n  }\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  max(col){ return stats.max(this, col)  }\r\n  min(col){ return stats.min(this, col)  }\r\n  sum(col){ return stats.sum(this, col)  }\r\n  mean(col){ return stats.mean(this, col)  }\r\n  forward_diff(col, newCol, step=1){ return stats.forward_diff(this, col, newCol, step)  }\r\n  rolling_average(col, window=1){ return stats.rolling_average(this, col, window)  }\r\n  stats(){ return stats  }\r\n\r\n\r\n\r\n  // max(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.max(...this.map(row => row[col])) }\r\n  // min(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.min(...this.map(row => row[col])) }\r\n  // sum(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.map(row => row[col]).reduce((a,b) => a + b, 0) }\r\n  // mean(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.sum(col) / this.length }\r\n\r\n  /********************************************************************************\r\n  *  ECharts json array interface\r\n  *  ===============================\r\n  *  Interface that returns echarts series objects for plotting\r\n  ********************************************************************************/\r\n\r\n  // /**\r\n  //  * echarts line plot data formatter\r\n  //  * @param  {stringi} col  column name\r\n  //  * @return {object}      echarts data series object\r\n  //  */\r\n  get echartsOptions( ){ return new echartsOptions( this ) }\r\n  get echartsSeries( ){ return new echartsSeries( this ) }\r\n\r\n  get echarts( ){ return new eChartsComponents( this ) }\r\n\r\n  get react(){ return new ReactComponents(this) }\r\n\r\n  get fileIO(){\r\n    const fromFileLibrary = require('./frameworks/fileIO/fromFile').default\r\n    return new fromFileLibrary(this)\r\n  }\r\n}\r\n","/**\r\n * Components\r\n * ==============\r\n *\r\n * standard html components are wrapped in order to provide\r\n * the ability to leverage an existing framework when specified.\r\n * Defaults to using the standard html components\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 25, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nexport function Button(props){\r\n  return wrapper( props, 'button' )\r\n}\r\n\r\nexport function Input(props){\r\n  return wrapper( props, 'input' )\r\n}\r\n\r\nexport function Image(props){\r\n  return wrapper( props, 'img' )\r\n}\r\n\r\nexport function Table(props){\r\n  return wrapper( props, 'table' )\r\n}\r\n\r\nexport function Cell(props){\r\n  return wrapper( props, 'td' )\r\n}\r\n\r\nexport function Header(props){\r\n  return wrapper( props, 'thead' )\r\n}\r\n\r\nexport function HeaderCell(props){\r\n  return wrapper( props, 'th' )\r\n}\r\n\r\nexport function Row(props){\r\n  return wrapper( props, 'tr' )\r\n}\r\n\r\nexport function Body(props){\r\n  return wrapper( props, 'body' )\r\n}\r\n\r\nexport function Icon(props){\r\n  return wrapper( props, 'icon' )\r\n}\r\n\r\nexport function Checkbox(props){\r\n  return wrapper( props, 'checkbox' )\r\n}\r\n\r\nfunction wrapper( props, type ){\r\n\r\n  if( props.component === undefined ){\r\n    switch( type ){\r\n      case 'button':\r\n        return <button {...props}>{props.defaultValue}</button>\r\n\r\n      case 'input':\r\n        return <input {...props}>{props.defaultValue}</input>\r\n\r\n      case 'checkbox':\r\n        return <input {...props} type=\"checkbox\" >{props.defaultValue}</input>\r\n\r\n      case 'img':\r\n        return <img\r\n          src={props.defaultValue}\r\n          alt=''\r\n          {...props} />\r\n\r\n      case 'table':\r\n        return <table {...props}>{props.defaultValue}</table>\r\n\r\n      case 'td':\r\n        return <td {...props}>{props.defaultValue}</td>\r\n\r\n      case 'tr':\r\n        return <tr {...props}>{props.defaultValue}</tr>\r\n\r\n      case 'th':\r\n        return <th {...props}>{props.defaultValue}</th>\r\n\r\n      case 'body':\r\n        return <tbody {...props}>{props.defaultValue}</tbody>\r\n\r\n      case 'thead':\r\n        return <thead {...props}>{props.defaultValue}</thead>\r\n\r\n      case 'icon':\r\n        return <i {...props}>{props.defaultValue}</i>\r\n\r\n      default:\r\n        console.log( 'default type', type)\r\n        return <div {...props}>{props.defaultValue}</div>\r\n\r\n\r\n    }\r\n  }\r\n\r\n  return(\r\n    <props.component\r\n      {...props}\r\n      component={undefined}\r\n      >\r\n      {props.defaultValue}\r\n    </props.component>\r\n  )\r\n}\r\n","/**\r\n * Extract\r\n * ===================\r\n *\r\n * Routines for extracting data to the local desktop\r\n * in various formats\r\n *\r\n * @author Nik Sumikawa\r\n * @date Oct 7, 2020\r\n */\r\n\r\nconst Papa = require(\"papaparse\")\r\n\r\n\r\n/**\r\n * Pushes the data into a downloadable location\r\n * and posts the interface to enable downlaodign\r\n * @param  {Blob}   data       Blob containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nfunction browserInterface( data, filename ){\r\n\r\n  var url = window.URL.createObjectURL(data);\r\n\r\n  var link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', filename);\r\n\r\n  document.body.appendChild(link);\r\n\r\n  link.click();\r\n\r\n  // Clean up and remove the link\r\n  link.parentNode.removeChild(link);\r\n}\r\n\r\n/**\r\n * Formats the data as a csv file and push it into a dowloadble location\r\n * @param  {Array}   data     DataFrame containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nexport default function toCsv( data, filename='file.csv' ){\r\n\r\n  var csv = Papa.unparse(data, {\r\n    header: true,\r\n    columns:data.columns\r\n  });\r\n\r\n  var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\r\n\r\n  browserInterface( csvData, filename )\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function line( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  var Series = {\r\n    type: 'line',\r\n    data: json_array.map(r => r[props.coly])\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nexport default function Waterfall( props ){\r\n\r\n  var data = props.json_array\r\n\r\n  // perform the forward difference required to generate the waterfall\r\n  data = data.forward_diff(props.coly, 'waferfallDiff' )\r\n\r\n  const diff = data.map(r => r.waferfallDiff)\r\n\r\n  var pos = []\r\n  var neg = []\r\n  var stack = []\r\n\r\n  for( let i=0; i < data.length - 1; i++ ){\r\n    const temp = data[i+1]['waferfallDiff']\r\n\r\n\r\n    if(temp >= 0){\r\n      pos.push(temp)\r\n      neg.push('-')\r\n      stack.push( data[i][props.coly] )\r\n\r\n    }else{\r\n      pos.push('-')\r\n      neg.push(Math.abs(temp))\r\n      stack.push( data[i+1][props.coly] )\r\n    }\r\n\r\n  }\r\n\r\n  const series = [\r\n      {\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          itemStyle: {\r\n              barBorderColor: 'rgba(0,0,0,0)',\r\n              color: 'rgba(0,0,0,0)'\r\n          },\r\n          emphasis: {\r\n              itemStyle: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n              }\r\n          },\r\n          data: stack\r\n      },\r\n\r\n      {\r\n          name: 'Gains',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: pos,\r\n          color: 'green',\r\n      },\r\n\r\n      {\r\n          name: 'Losses',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: neg,\r\n          color: 'red',\r\n      }\r\n  ]\r\n\r\n  return series\r\n\r\n\r\n\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function Bar( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = {\r\n    name: 'bar',\r\n    type: 'bar',\r\n    data: json_array.map( row => row[props.col] )\r\n\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Bar from './bar'\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function BarPlot( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  // return a single boxplot when the column is a string\r\n  if( typeof props.col === 'string' ){\r\n    return [Bar({\r\n      ...props,\r\n      ...{\r\n        col: props.col,\r\n        json_array: json_array,\r\n      }\r\n    })]\r\n  }\r\n\r\n  var series = []\r\n  for( var i=0; i < props.col.length; i++ ){\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series.push( Bar({\r\n      ...props,\r\n      ...{\r\n        col: props.col[i],\r\n        name: props.col[i],\r\n        json_array: json_array,\r\n      }\r\n    }) )\r\n\r\n  }\r\n\r\n  return series\r\n\r\n\r\n\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function EchartsReact( props ) {\r\n\r\n  // extract the options from the props so it can be modified\r\n  var option = props.option\r\n\r\n  var onEvents = {}\r\n\r\n  // when selectionCallback is provided, add the brush functionality\r\n  // and callback function to the list of events\r\n  if( props.onSelect !== undefined ){\r\n    option['brush'] = {\r\n      xAxisIndex: 'all',\r\n      outOfBrush: {\r\n        colorAlpha: 0.1\r\n      }\r\n    }\r\n\r\n    const onSelect = (params) => {\r\n      if( params.batch === undefined ) return\r\n\r\n      const index = params.batch[0].selected[0].dataIndex;\r\n      if( params.batch[0].selected !== undefined ){\r\n        props.onSelect({\r\n            index: index,\r\n            data: props.data.iloc(index)\r\n        } )\r\n      }\r\n    }\r\n\r\n    onEvents['brushselected'] = onSelect\r\n  }\r\n\r\n  // when an onClick event is provided, add it to the Events\r\n  if( props.onClick !== undefined ){\r\n    onEvents['click'] = props.onClick\r\n  }\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option = {option}\r\n      onEvents={onEvents}\r\n      style={props.echartsStyle}\r\n    />\r\n  )\r\n}\r\n","/**\r\n * Echarts Wrapper\r\n * ==================\r\n *\r\n * React component used to wrap the echart's plotter. This includes\r\n * handles for onClick function and callback functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 20, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport moment from 'moment'\r\nimport ReactLibraryFramework from '../../ReactLibraryFramework'\r\n\r\nimport EchartsReact from './EchartsReact'\r\n// export {default as EchartsReact} from './EchartsReact'\r\n\r\n\r\nexport default class echartsLibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Echarts = this.Echarts.bind(this)\r\n    this.Heatmap = this.Heatmap.bind(this)\r\n    this.Boxplot = this.Boxplot.bind(this)\r\n    this.Scatter = this.Scatter.bind(this)\r\n    this.Line = this.Line.bind(this)\r\n    this.Bar = this.Bar.bind(this)\r\n    this.Histogram = this.Histogram.bind(this)\r\n    this.Pareto = this.Pareto.bind(this)\r\n    this.RectGrid = this.RectGrid.bind(this)\r\n\r\n  }\r\n\r\n  Echarts( props ){\r\n    return EchartsReact( this.props(props) )\r\n  }\r\n\r\n  Heatmap( props ){\r\n    return this.Component( 'heatmap', this.props(props) )\r\n  }\r\n\r\n  Boxplot( props ){\r\n    return this.Component( 'boxplot', this.props(props) )\r\n  }\r\n\r\n  RectGrid( props ){\r\n    return this.Component( 'rectGrid', this.props(props) )\r\n  }\r\n\r\n  Scatter( props ){\r\n    return this.Component( 'scatter', this.props(props) )\r\n  }\r\n\r\n  Line( props ){\r\n    return this.Component( 'line', this.props(props) )\r\n  }\r\n\r\n  Bar( props ){\r\n    return this.Component( 'bar', this.props(props) )\r\n  }\r\n\r\n  Histogram( props ){\r\n    return this.Component( 'histogram', this.props(props) )\r\n  }\r\n\r\n  Pareto( props ){\r\n    return Pareto( this.props(props) )\r\n  }\r\n\r\n  Component( type, props ){\r\n\r\n    const options = props.data.echartsOptions\r\n\r\n    var plot_options\r\n    switch( type ){\r\n      case 'boxplot':\r\n        plot_options = options.boxplot(props)\r\n        break\r\n\r\n      case 'scatter':\r\n        plot_options = options.scatter(props)\r\n        break\r\n\r\n      case 'heatmap':\r\n        plot_options = options.heatmap(props)\r\n        break\r\n\r\n      case 'line':\r\n        plot_options = options.line(props)\r\n        break\r\n\r\n      case 'bar':\r\n        plot_options = options.bar(props)\r\n        break\r\n\r\n      case 'rectGrid':\r\n        plot_options = options.rectGrid(props)\r\n        break\r\n\r\n\r\n      case 'histogram':\r\n        const series = props.data.col( props.colx )\r\n        const hist = series.binning({bins: 30})\r\n        const opt = hist.echartsOptions\r\n        plot_options = opt.bar({colx: 'value', coly: 'count'})\r\n        break\r\n\r\n      default:\r\n        alert(`unknown plot type: ${type}`)\r\n        break\r\n    }\r\n    return(\r\n      <EchartsReact\r\n        {...props}\r\n        option = {plot_options}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function react_echarts( options, params ){\r\n  return(\r\n    <EchartsReact\r\n      option = {options}\r\n      onClick = {params['onClick']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a Pareto plot component based on the contents of the\r\n * jsonArray DAtaFrame\r\n */\r\nexport function Pareto( props ){\r\n\r\n  // pivot the user data based the unique users per day\r\n  var pivot = props.data.pivot_table(\r\n    props.colx,\r\n    props.coly,\r\n    'unique',\r\n    props.label\r\n    )\r\n\r\n  const split_values = props.data.unique(props.coly)\r\n\r\n  // format the x axis as a date when specified\r\n  if( (props.dates === true) | (props.colx === 'date') ){\r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    pivot = pivot.apply('row', (value) => moment(value), 'datetime' )\r\n\r\n    // extract a list of unique day\r\n    const dates = pivot.unique('row')\r\n    const datetimes = pivot.unique('datetime')\r\n\r\n    // calculate the number of days between the minimum and maximum date\r\n    const t = new Date(Math.min.apply(null,datetimes))\r\n    const start_date = moment(formatDate(t))\r\n\r\n    // calculate the number of days within the window\r\n    const timeframe = (pivot.max('datetime') - pivot.min('datetime') )/(60*60*24*1000)\r\n\r\n    // add dates not in the pivot table\r\n    for( var i=0; i < timeframe; i++ ){\r\n      const date = moment(start_date).add(i, 'days').format('YYYY-MM-DD')\r\n      if( !dates.includes(date) ) pivot.push({row: date})\r\n    }\r\n  }\r\n\r\n  // sort the usage by date to ensure proper ordering\r\n  pivot = pivot.sort_values('row')\r\n\r\n  var _props = {\r\n    ...props,\r\n    ...{\r\n      data: pivot,\r\n      colx: 'row',\r\n      coly: split_values,\r\n      stacked: true,\r\n    }\r\n  }\r\n\r\n\r\n  const options = props.data.echartsOptions\r\n\r\n  return(\r\n    <EchartsReact\r\n      {..._props}\r\n      option = {options.bar(_props)}\r\n      />\r\n  )\r\n  // return(\r\n  //   <Bar\r\n  //     {...props}\r\n  //     data = {pivot}\r\n  //     colx = 'row'\r\n  //     coly = {split_values}\r\n  //     stacked = {true}\r\n  //     />\r\n  // )\r\n}\r\n","/**\r\n * eCharts Boxplot\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter_overlay from './scatter_overlay'\r\n\r\nvar prepareBoxplotData\r\ntry{\r\n  prepareBoxplotData =  require( 'echarts/extension/dataTool').prepareBoxplotData\r\n}catch{ console.log( 'echarts module not implemented')}\r\n\r\n\r\n/**\r\n * Convert the json_array to a format for generating a boxplot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function boxplot( props ){\r\n\r\n\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  json_array = json_array.sort_values(props.colx)\r\n\r\n  // group the data based on the boxplot groups\r\n  const groups = json_array.groupby([props.colx])\r\n\r\n  // group the data based on the unique column values\r\n  var group_values = []\r\n  for( var i=0; i < groups.length; i++ ){\r\n    group_values.push(\r\n      groups[i].json_obj.map(row => row[props.coly])\r\n    )\r\n  }\r\n\r\n  // // leverage the echarts function to generate the data\r\n  const echartsData = prepareBoxplotData(group_values)\r\n\r\n  // format the boxplot results as a series\r\n  var series = [\r\n    {\r\n      name: 'boxplot',\r\n      type: 'boxplot',\r\n      data: echartsData.boxData,\r\n    }\r\n  ]\r\n\r\n\r\n  // add the outlier samples. This is set by default and\r\n  // can only be turned off by expicitly providing false\r\n  if( (props.outliers !== false)&(props.allSample !== true) ){\r\n    series.push({\r\n      name: 'outlier',\r\n      type: 'scatter',\r\n      data: echartsData.outliers\r\n      }\r\n    )\r\n  }\r\n\r\n  if( (props.allSample === true)|(props.overlayFilter !== undefined) ){\r\n    series = series.concat(\r\n      scatter_overlay(props)\r\n    )\r\n  }\r\n\r\n\r\n  return series\r\n}\r\n","/**\r\n * Scatter Overlay\r\n * ===================\r\n *\r\n * Overlays a scatter plot containing all samples\r\n * on top of an existing boxplot\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 2, 2020\r\n *\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport scatter from '../scatter'\r\nimport scatter_by from '../scatter/scatterBy'\r\n\r\n // when specified, overlay a scatter plot that highlights\r\n // the location of all 'MARKED' samples in the specified\r\n // label column\r\nexport default function scatter_overlay( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  // group the data based on the boxplot groups\r\n  const keys = json_array.unique( props.colx )\r\n\r\n  // create a mapping between the x column values and the integer\r\n  // values used for the boxplot\r\n  var mapping = {}\r\n  // keys.forEach((element, i) => mapping[element] = echartsData.axisData[i])\r\n  keys.forEach((element, i) => mapping[element] = i)\r\n  json_array = json_array.copy_column( props.colx, 'boxplot_x' )\r\n  json_array = json_array.replace('boxplot_x', mapping)\r\n  json_array = json_array.astype({'boxplot_x': 'int'})\r\n\r\n\r\n  if( props.overlayFilter ) json_array = json_array.filter( props.overlayFilter )\r\n\r\n  // create multicolored scatter plot when colorBy attribute is provided\r\n  var scatterFunc = scatter\r\n  if( props.colorBy !== undefined ) scatterFunc = scatter_by\r\n\r\n\r\n  return scatterFunc({\r\n      ...props,\r\n      ...{\r\n        colx: 'boxplot_x',\r\n        json_array: json_array,\r\n      }}\r\n    )\r\n\r\n}\r\n","var map = {\n\t\"./\": 200,\n\t\"./components/CodeRender\": 276,\n\t\"./components/CodeRender.jsx\": 276,\n\t\"./components/Example\": 265,\n\t\"./components/Example.jsx\": 265,\n\t\"./components/Header\": 266,\n\t\"./components/Header.jsx\": 266,\n\t\"./components/Sidebar\": 277,\n\t\"./components/Sidebar.jsx\": 277,\n\t\"./components/jsonArray\": 160,\n\t\"./components/jsonArray.js\": 160,\n\t\"./config\": 316,\n\t\"./config.json\": 316,\n\t\"./doc/Demo/BasicExample.doc\": 766,\n\t\"./doc/Echarts/Bar/Simple.doc\": 767,\n\t\"./doc/Echarts/Bar/Stacked.doc\": 768,\n\t\"./doc/Echarts/Boxplot/AllSamples.doc\": 769,\n\t\"./doc/Echarts/Boxplot/AllSamplesGrouped.doc\": 770,\n\t\"./doc/Echarts/Boxplot/FilteredOverlay.doc\": 771,\n\t\"./doc/Echarts/Boxplot/Simple.doc\": 772,\n\t\"./doc/Echarts/Custom/HorizontalLine.doc\": 773,\n\t\"./doc/Echarts/Custom/Selection.doc\": 774,\n\t\"./doc/Echarts/Custom/Simple.doc\": 775,\n\t\"./doc/Echarts/Custom/Style.doc\": 776,\n\t\"./doc/Echarts/Custom/Zoom.doc\": 777,\n\t\"./doc/Echarts/Custom/ZoomSlider.doc\": 778,\n\t\"./doc/Echarts/Custom/ZoomVertical.doc\": 779,\n\t\"./doc/Echarts/Format/Legend.doc\": 780,\n\t\"./doc/Echarts/Format/ToolboxExample.doc\": 781,\n\t\"./doc/Echarts/Heatmap/Simple.doc\": 782,\n\t\"./doc/Echarts/Line/ErrorBars.doc\": 783,\n\t\"./doc/Echarts/Line/Highlight.doc\": 784,\n\t\"./doc/Echarts/Line/Simple.doc\": 785,\n\t\"./doc/Echarts/Pie/FromSeries.doc\": 786,\n\t\"./doc/Echarts/Pie/Simple.doc\": 787,\n\t\"./doc/Echarts/RectGrid/Custom.doc\": 788,\n\t\"./doc/Echarts/RectGrid/Simple.doc\": 789,\n\t\"./doc/Echarts/Scatter/ColorBy.doc\": 790,\n\t\"./doc/Echarts/Scatter/Labeled.doc\": 791,\n\t\"./doc/Echarts/Scatter/Simple.doc\": 792,\n\t\"./doc/Echarts/Selection/SelectionScatter.doc\": 793,\n\t\"./doc/Echarts/Tooltips/tooltips.doc\": 794,\n\t\"./doc/Table/AccordianTable.doc\": 795,\n\t\"./doc/Table/AlternatingStyle.doc\": 796,\n\t\"./doc/Table/Checkbox.doc\": 797,\n\t\"./doc/Table/ColumnFilters.doc\": 798,\n\t\"./doc/Table/LazyLoading.doc\": 799,\n\t\"./doc/Table/MultiRowCol.doc\": 800,\n\t\"./doc/Table/MultirowTable.doc\": 801,\n\t\"./doc/Table/NoHeader.doc\": 802,\n\t\"./doc/Table/ParentFilterCol.doc\": 803,\n\t\"./doc/Table/ParentSortCol.doc\": 804,\n\t\"./doc/Table/SimpleTable.doc\": 805,\n\t\"./doc/Table/TableFormat.doc\": 806,\n\t\"./examples/Demo/BasicExample\": 422,\n\t\"./examples/Demo/BasicExample.jsx\": 422,\n\t\"./examples/Echarts/Bar/Simple\": 423,\n\t\"./examples/Echarts/Bar/Simple.jsx\": 423,\n\t\"./examples/Echarts/Bar/Stacked\": 557,\n\t\"./examples/Echarts/Bar/Stacked.jsx\": 557,\n\t\"./examples/Echarts/Boxplot/AllSamples\": 558,\n\t\"./examples/Echarts/Boxplot/AllSamples.jsx\": 558,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped\": 559,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped.jsx\": 559,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay\": 560,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay.jsx\": 560,\n\t\"./examples/Echarts/Boxplot/Simple\": 561,\n\t\"./examples/Echarts/Boxplot/Simple.jsx\": 561,\n\t\"./examples/Echarts/Custom/HorizontalLine\": 562,\n\t\"./examples/Echarts/Custom/HorizontalLine.jsx\": 562,\n\t\"./examples/Echarts/Custom/Selection\": 563,\n\t\"./examples/Echarts/Custom/Selection.jsx\": 563,\n\t\"./examples/Echarts/Custom/Simple\": 564,\n\t\"./examples/Echarts/Custom/Simple.jsx\": 564,\n\t\"./examples/Echarts/Custom/Style\": 565,\n\t\"./examples/Echarts/Custom/Style.jsx\": 565,\n\t\"./examples/Echarts/Custom/Zoom\": 566,\n\t\"./examples/Echarts/Custom/Zoom.jsx\": 566,\n\t\"./examples/Echarts/Custom/ZoomSlider\": 567,\n\t\"./examples/Echarts/Custom/ZoomSlider.jsx\": 567,\n\t\"./examples/Echarts/Custom/ZoomVertical\": 568,\n\t\"./examples/Echarts/Custom/ZoomVertical.jsx\": 568,\n\t\"./examples/Echarts/Format/Legend\": 569,\n\t\"./examples/Echarts/Format/Legend.jsx\": 569,\n\t\"./examples/Echarts/Format/ToolboxExample\": 570,\n\t\"./examples/Echarts/Format/ToolboxExample.jsx\": 570,\n\t\"./examples/Echarts/Heatmap/Simple\": 571,\n\t\"./examples/Echarts/Heatmap/Simple.jsx\": 571,\n\t\"./examples/Echarts/Line/ErrorBars\": 572,\n\t\"./examples/Echarts/Line/ErrorBars.jsx\": 572,\n\t\"./examples/Echarts/Line/Highlight\": 573,\n\t\"./examples/Echarts/Line/Highlight.jsx\": 573,\n\t\"./examples/Echarts/Line/Simple\": 574,\n\t\"./examples/Echarts/Line/Simple.jsx\": 574,\n\t\"./examples/Echarts/Pie/FromSeries\": 575,\n\t\"./examples/Echarts/Pie/FromSeries.jsx\": 575,\n\t\"./examples/Echarts/Pie/Simple\": 576,\n\t\"./examples/Echarts/Pie/Simple.jsx\": 576,\n\t\"./examples/Echarts/RectGrid/Custom\": 577,\n\t\"./examples/Echarts/RectGrid/Custom.jsx\": 577,\n\t\"./examples/Echarts/RectGrid/Simple\": 578,\n\t\"./examples/Echarts/RectGrid/Simple.jsx\": 578,\n\t\"./examples/Echarts/Scatter/ColorBy\": 579,\n\t\"./examples/Echarts/Scatter/ColorBy.jsx\": 579,\n\t\"./examples/Echarts/Scatter/Labeled\": 580,\n\t\"./examples/Echarts/Scatter/Labeled.jsx\": 580,\n\t\"./examples/Echarts/Scatter/Simple\": 581,\n\t\"./examples/Echarts/Scatter/Simple.jsx\": 581,\n\t\"./examples/Echarts/Selection/SelectionScatter\": 582,\n\t\"./examples/Echarts/Selection/SelectionScatter.jsx\": 582,\n\t\"./examples/Echarts/Tooltips/tooltips\": 583,\n\t\"./examples/Echarts/Tooltips/tooltips.jsx\": 583,\n\t\"./examples/Table/AccordianTable\": 584,\n\t\"./examples/Table/AccordianTable.jsx\": 584,\n\t\"./examples/Table/AlternatingStyle\": 585,\n\t\"./examples/Table/AlternatingStyle.jsx\": 585,\n\t\"./examples/Table/Checkbox\": 586,\n\t\"./examples/Table/Checkbox.jsx\": 586,\n\t\"./examples/Table/ColumnFilters\": 587,\n\t\"./examples/Table/ColumnFilters.jsx\": 587,\n\t\"./examples/Table/LazyLoading\": 588,\n\t\"./examples/Table/LazyLoading.jsx\": 588,\n\t\"./examples/Table/MultiRowCol\": 589,\n\t\"./examples/Table/MultiRowCol.jsx\": 589,\n\t\"./examples/Table/MultirowTable\": 590,\n\t\"./examples/Table/MultirowTable.jsx\": 590,\n\t\"./examples/Table/NoHeader\": 591,\n\t\"./examples/Table/NoHeader.jsx\": 591,\n\t\"./examples/Table/ParentFilterCol\": 592,\n\t\"./examples/Table/ParentFilterCol.jsx\": 592,\n\t\"./examples/Table/ParentSortCol\": 593,\n\t\"./examples/Table/ParentSortCol.jsx\": 593,\n\t\"./examples/Table/SimpleTable\": 594,\n\t\"./examples/Table/SimpleTable.jsx\": 594,\n\t\"./examples/Table/TableFormat\": 595,\n\t\"./examples/Table/TableFormat.jsx\": 595,\n\t\"./examples/data/jsonArray/data\": 263,\n\t\"./examples/data/jsonArray/data.json\": 263,\n\t\"./examples/data/jsonArray/yield_timeframe\": 264,\n\t\"./examples/data/jsonArray/yield_timeframe.json\": 264,\n\t\"./examples/getData\": 20,\n\t\"./examples/getData.js\": 20,\n\t\"./index\": 200,\n\t\"./index.jsx\": 200,\n\t\"./install.py\": 1232\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 417;","import React from 'react';\n\n\n\nexport default function SimpleTable( props ){\n\n  return (\n    <div>\n      This is a very basic example to show how this works\n    </div>\n  )\n\n}\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Bar\r\n      colx='id'\r\n      coly='COUNT'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * File Input/Output Interface\r\n * ==============================\r\n *\r\n * React component used to retrieve from and store to the user's\r\n * desktop\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Oct 7, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport {Button} from '../framework/Components'\r\n\r\nconst extract = require('../../fileIO/extract')\r\n\r\n\r\n\r\nexport default class FileIOLibrary extends ReactLibraryFramework{\r\n  constructor(data){\r\n    super(data)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n\r\n  }\r\n\r\n  ToCsv( props ){\r\n    return ToCsv( this.props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a heatmap plotting component based on the contents of the\r\n * jsonArray DAtaFrame\r\n */\r\nexport function ToCsv( props ){\r\n\r\n  // set defaults for the button label and filename and\r\n  // overwrite the defaults when values are passed in\r\n  var value = 'Download'\r\n  if( props.value !== undefined ) value = props.value\r\n\r\n  var filename = 'file.csv'\r\n  if( props.filename !== undefined ) value = props.filename\r\n\r\n  return(\r\n    <Button\r\n      {...props}\r\n      style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n      component={props.button}\r\n      key={`toCSV Button`}\r\n      defaultValue={value}\r\n      onClick={() => extract.toCsv(props.data, filename )}\r\n      />\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var stack_col = 'CATEGORY2'\r\n\r\n  var json_array = new jsonArray( data )\r\n  // create a pivot table so there is a unique column for each\r\n  // category you wish to stack (CATEGORY2 in this case)\r\n  var pivot = json_array.pivot_table('CATEGORY1', stack_col, 'count')\r\n\r\n  // retrieve the unique values for column you wish to stack\r\n  const stacked_id = json_array.unique(stack_col)\r\n\r\n  console.log( stacked_id)\r\n  return(\r\n    <pivot.react.echarts.Bar\r\n      colx = 'row'\r\n      coly = {stacked_id}\r\n      stacked = {true}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\n// Standardize method to map prop variables to series to\r\n// avoid multiple changes in multiple files\r\nexport default function propsToSeries(props, Series){\r\n\r\n    if( props.name !== undefined ) Series['name'] = props.name\r\n    if( props.stacked !== undefined ) Series['stack'] = props.stacked\r\n    if( props.color !== undefined ) Series['color'] = props.color\r\n    if( props.smooth !== undefined ) Series['smooth'] = props.smooth\r\n    if( props.symbol !== undefined ) Series['symbol'] = props.symbol\r\n    if( props.lineStyle !== undefined ) Series['lineStyle'] = props.lineStyle\r\n    if( props.axis !== undefined ) Series['yAxisIndex'] = props.axis\r\n    if( props.z !== undefined ) Series['z'] = props.z\r\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\r\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\r\n\r\n    if( props.lw !== undefined ) Series['itemStyle'] = {normal: {borderWidth:props.lw}}\r\n\r\n    return Series\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      overlayFilter = {r => r.CATEGORY2 === '71F00295B-05'}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option = option.axhline( 3.5 )\r\n\r\n  \r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.selection()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      echartsStyle={{height:'500px'}}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({scroll:true})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({sliders: {xAxis: true, yAxis: true}})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoomslider'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({\r\n    scroll: true,\r\n    yAxis: true,\r\n    sliders: {yAxis:true}\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx:'COUNT',\r\n    coly:'id',\r\n    colorBy:'CATEGORY2'\r\n  })\r\n\r\n  option.toolbox()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  console.log( data )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Heatmap\r\n      colx='__index__'\r\n      coly='COUNT'\r\n      value='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG_YIELD',\r\n      min:'MIN_YIELD',\r\n      max:'MAX_YIELD',\r\n    })\r\n  )\r\n\r\n  option.xAxis[0].rotate()\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG_YIELD',\r\n      min:'MIN_YIELD',\r\n      max:'MAX_YIELD',\r\n    })\r\n  )\r\n\r\n  option.xAxis[0].rotate()\r\n  option.xAxis[0].max = json_array.length\r\n  option.xAxis[0].min = -1\r\n\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  option = option.highlight({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD',\r\n    value: 'TZ62817.1C',\r\n\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/yield_timeframe.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Line\r\n      colx='WP_LOTID'\r\n      coly='AVG_YIELD'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {\"START_TIME\":\"2021-02-24 04:32:01\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-13 19:15:32\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69644.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-22 06:09:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70094.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-06 17:28:18\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:35:14\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 01:13:39\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-07 21:40:40\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70491.1X\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 07:42:45\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 19:43:32\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-07 03:49:22\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70484.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-22 13:21:03\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69643.1W\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 14:05:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 07:41:31\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70099.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-25 21:17:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 04:18:51\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70106.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-25 02:12:10\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 03:55:42\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 17:33:24\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 16:07:48\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71012.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:58\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-24 06:30:56\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69639.1A\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-16 08:49:56\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 10:03:11\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70101.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-09 21:34:30\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70483.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:09:28\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 18:25:51\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 01:25:29\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71018.1T\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-24 18:41:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 23:08:54\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 13:48:53\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 11:29:21\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70490.1F\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-23 20:52:06\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 12:30:11\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-02 18:32:23\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69221.1R\",\"FAB\":\"CHDFAB\",\"QRB\":true,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:57\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-23 10:26:55\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69253.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 17:21:56\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-28 04:32:00\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69641.1K\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"}]\r\n\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column('type', r => {\r\n    if(r.QRB === true) return 'QRB'\r\n    if(r.FORCE_INK === true) return 'FORCE_INK'\r\n    if(r.DEV === true) return 'DEV'\r\n    if(r.SBL === true) return 'SBL'\r\n    return 'OTHER'\r\n  })\r\n\r\n  // const col = 'type'\r\n  // const group = json_array.groupby([col])\r\n  //\r\n  // console.log( group )\r\n  var option = json_array.echartsOptions\r\n  option = option.pieFromSeries({\r\n    col: 'type'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='pieFromSeries'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  var option = json_array.echartsOptions\r\n  // option = option.scatter({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   // label: true\r\n  // })\r\n\r\n  option = option.rectGrid({\r\n      colx: 'x',\r\n      coly: 'y',\r\n      value: 'v',\r\n      label: true\r\n  })\r\n\r\n  option = option.append_series(\r\n      json_array.echartsSeries.circle({\r\n          data: [2,2],\r\n          radius: 150\r\n      })\r\n    )\r\n\r\n  // option = option.rectGrid({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   label: true\r\n  // })\r\n  //\r\n  option.zoom({\r\n    scroll: true,\r\n    sliders : {\r\n      xAxis: true,\r\n      yAxis: true\r\n    }\r\n  })\r\n  // // option['xAxis'][0]['show'] = false\r\n  // // option['xAxis'][0]['min'] = function (value) { return value.min }\r\n  // // option['xAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['yAxis'][0]['min'] = function (value) { return  value.min - 1 }\r\n  // // option['yAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['xAxis']['max'] = 6\r\n  // // option['yAxis']['min'] = -1\r\n  // // option['yAxis']['max'] = 6\r\n  //\r\n  // option['dataZoom'] = [\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           xAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //       },\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           yAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //           // left: '93%',\r\n  //           // start: 0,\r\n  //           // end: 5\r\n  //       },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     xAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     yAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // }\r\n  //   ]\r\n\r\n  console.log( option )\r\n  return(\r\n    <div>\r\n      this is still custom\r\n      <json_array.react.echarts.Echarts\r\n        key='zoomslider'\r\n        option = {option}\r\n        />\r\n    </div>\r\n\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  return(\r\n    <json_array.react.echarts.RectGrid\r\n      colx = {'x'}\r\n      coly = {'y'}\r\n      value = {'v'}\r\n      label = {true}\r\n      />\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColorByScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      colorBy='CATEGORY2'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.label(r => r.CATEGORY2 === '71F00295B-07')\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      label='label'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nimport { Divider, Header } from 'semantic-ui-react'\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx: 'COUNT',\r\n    coly: 'id',\r\n  })\r\n\r\n  console.log( json_array )\r\n  option.tooltip.from_DataFrame(\r\n    data,\r\n    ['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']\r\n  )\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n\r\n      <Divider horizontal>Example 1</Divider>\r\n      <Header as='h4'>Tooltips are provided as a parameter</Header>\r\n      <json_array.react.echarts.Scatter\r\n        colx='COUNT'\r\n        coly='id'\r\n        tooltip = {['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']}\r\n        />\r\n\r\n      <Divider horizontal>Example 2</Divider>\r\n      <Header as='h4'>Tooltips are added to the option. This enables more customization</Header>\r\n      <json_array.react.echarts.Echarts\r\n        option ={option}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  var groups = json_array.groupby(['CATEGORY1', 'CATEGORY2'])\r\n\r\n\r\n  console.log( groups )\r\n  return (\r\n    <groups.react.semanticUI.Table\r\n      tableName = {'AccordianTable'}\r\n      columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n\r\n      accordian={true}\r\n      accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n      accordianHeader = {true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      alternateStyle= {true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function CheckboxTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column( 'checkboxField', () => false )\r\n  json_array = json_array.astype({checkboxField: 'checkbox', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['checkboxField','COUNT','VALUE','id','CATEGORY1','CATEGORY2' ]}\r\n      sortable={true}\r\n      cellOnClick={{\r\n        checkboxField: (val) => {\r\n          alert('checkbox selected. see console for details')\r\n          console.log( 'cell was selected', val)\r\n      }}}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filterable={true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var JsonArray = new jsonArray( data )\r\n  JsonArray = JsonArray.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <JsonArray.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      sortable={true}\r\n      lazyLoading = {true}\r\n      lazyLoadingStart = {5}\r\n      lazyLoadingStep = {5}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRowCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      multirowSpan={['COUNT']}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRow'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'NoHeader'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      showHeader={false}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const [filters, setFilters] = React.useState([])\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'ParentFilterCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filters = {filters}\r\n      columnFilterOnChange = { (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value !== '' ) temp.push( content )\r\n        setFilters( temp )\r\n      }}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ParentSortColumn( props ){\r\n\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columnOnClick={(content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }}\r\n      sortBy = {sortBy}\r\n      sortAscending = {sortAscending}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'TableFormat'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      tdStyle={{padding:'2px 5px 2px 5px'}}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport Documentation from './Documentation'\n\nReactDOM.render( <Documentation />,  document.getElementById('root') );\n","export default __webpack_public_path__ + \"static/media/BasicExample.ac843189.doc\";","export default __webpack_public_path__ + \"static/media/Simple.43fbfd31.doc\";","export default __webpack_public_path__ + \"static/media/Stacked.19aee742.doc\";","export default __webpack_public_path__ + \"static/media/AllSamples.d2ca8046.doc\";","export default __webpack_public_path__ + \"static/media/AllSamplesGrouped.e14389c9.doc\";","export default __webpack_public_path__ + \"static/media/FilteredOverlay.0a919588.doc\";","export default __webpack_public_path__ + \"static/media/Simple.0998509d.doc\";","export default __webpack_public_path__ + \"static/media/HorizontalLine.01d045fc.doc\";","export default __webpack_public_path__ + \"static/media/Selection.ca287540.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ac9d6926.doc\";","export default __webpack_public_path__ + \"static/media/Style.1c3a8c53.doc\";","export default __webpack_public_path__ + \"static/media/Zoom.aa973c04.doc\";","export default __webpack_public_path__ + \"static/media/ZoomSlider.1dad555e.doc\";","export default __webpack_public_path__ + \"static/media/ZoomVertical.68b7fd34.doc\";","export default __webpack_public_path__ + \"static/media/Legend.f367df42.doc\";","export default __webpack_public_path__ + \"static/media/ToolboxExample.dd92f223.doc\";","export default __webpack_public_path__ + \"static/media/Simple.2d862a29.doc\";","export default __webpack_public_path__ + \"static/media/ErrorBars.133ac994.doc\";","export default __webpack_public_path__ + \"static/media/Highlight.e40abc5f.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ed38691e.doc\";","export default __webpack_public_path__ + \"static/media/FromSeries.fb55d306.doc\";","export default __webpack_public_path__ + \"static/media/Simple.4ef4ef49.doc\";","export default __webpack_public_path__ + \"static/media/Custom.79a55982.doc\";","export default __webpack_public_path__ + \"static/media/Simple.2491f20a.doc\";","export default __webpack_public_path__ + \"static/media/ColorBy.aedf42bd.doc\";","export default __webpack_public_path__ + \"static/media/Labeled.fffca27c.doc\";","export default __webpack_public_path__ + \"static/media/Simple.d6531c7d.doc\";","export default __webpack_public_path__ + \"static/media/SelectionScatter.98d21352.doc\";","export default __webpack_public_path__ + \"static/media/tooltips.6c82abc1.doc\";","export default __webpack_public_path__ + \"static/media/AccordianTable.c6c79840.doc\";","export default __webpack_public_path__ + \"static/media/AlternatingStyle.722b45d1.doc\";","export default __webpack_public_path__ + \"static/media/Checkbox.41c2605e.doc\";","export default __webpack_public_path__ + \"static/media/ColumnFilters.1274a36a.doc\";","export default __webpack_public_path__ + \"static/media/LazyLoading.436accb3.doc\";","export default __webpack_public_path__ + \"static/media/MultiRowCol.38989a59.doc\";","export default __webpack_public_path__ + \"static/media/MultirowTable.a14bcb9f.doc\";","export default __webpack_public_path__ + \"static/media/NoHeader.7670f9ba.doc\";","export default __webpack_public_path__ + \"static/media/ParentFilterCol.52b459ec.doc\";","export default __webpack_public_path__ + \"static/media/ParentSortCol.5d0b7307.doc\";","export default __webpack_public_path__ + \"static/media/SimpleTable.e51e24b8.doc\";","export default __webpack_public_path__ + \"static/media/TableFormat.1fa82fe0.doc\";","\r\nexport const ENTROPY = [\r\n  \"#363388\",\r\n  \"#87ea00\",\r\n  \"#011fc3\",\r\n  \"#4cdf21\",\r\n  \"#3e0eba\",\r\n  \"#00d226\",\r\n  \"#692dda\",\r\n  \"#9bf94f\",\r\n  \"#3445ee\",\r\n  \"#a6db00\",\r\n  \"#714ffc\",\r\n  \"#82fc5f\",\r\n  \"#a227dd\",\r\n  \"#66ff72\",\r\n  \"#9335e6\",\r\n  \"#76c900\",\r\n  \"#023cda\",\r\n  \"#cef036\",\r\n  \"#da37ec\",\r\n  \"#2bff88\",\r\n  \"#c400c4\",\r\n  \"#00aa0a\",\r\n  \"#c454ff\",\r\n  \"#02c744\",\r\n  \"#dd55ff\",\r\n  \"#c0f346\",\r\n  \"#7d5dff\",\r\n  \"#f0d600\",\r\n  \"#0146ce\",\r\n  \"#a3c700\",\r\n  \"#50199f\",\r\n  \"#b0f55d\",\r\n  \"#c800b5\",\r\n  \"#02df7f\",\r\n  \"#ff5ff8\",\r\n  \"#00a52e\",\r\n  \"#da00b1\",\r\n  \"#95f980\",\r\n  \"#9e00a3\",\r\n  \"#5ba400\",\r\n  \"#566dff\",\r\n  \"#bdc400\",\r\n  \"#0032a9\",\r\n  \"#eabf00\",\r\n  \"#7371ff\",\r\n  \"#eee652\",\r\n  \"#0161e1\",\r\n  \"#deeb5b\",\r\n  \"#69028a\",\r\n  \"#9cf78f\",\r\n  \"#ea00b0\",\r\n  \"#01dd93\",\r\n  \"#fc00ab\",\r\n  \"#02f3b9\",\r\n  \"#c600a0\",\r\n  \"#6ffba9\",\r\n  \"#e90096\",\r\n  \"#01ae56\",\r\n  \"#ec70ff\",\r\n  \"#348900\",\r\n  \"#c47cff\",\r\n  \"#7ca500\",\r\n  \"#3682ff\",\r\n  \"#ffc530\",\r\n  \"#0261d6\",\r\n  \"#d5b200\",\r\n  \"#0144ab\",\r\n  \"#bab100\",\r\n  \"#258bff\",\r\n  \"#ea9f00\",\r\n  \"#0287ed\",\r\n  \"#f17f00\",\r\n  \"#01459b\",\r\n  \"#ceee6f\",\r\n  \"#7b007a\",\r\n  \"#5cfbc9\",\r\n  \"#fa0085\",\r\n  \"#019136\",\r\n  \"#ff57cd\",\r\n  \"#217500\",\r\n  \"#ff72e7\",\r\n  \"#00781d\",\r\n  \"#f38aff\",\r\n  \"#5b8700\",\r\n  \"#a68dff\",\r\n  \"#849600\",\r\n  \"#592282\",\r\n  \"#ffd760\",\r\n  \"#8b007a\",\r\n  \"#00e8c3\",\r\n  \"#ff2236\",\r\n  \"#02eadc\",\r\n  \"#ff312a\",\r\n  \"#00ebfd\",\r\n  \"#ff3f20\",\r\n  \"#00e9ec\",\r\n  \"#dd0018\",\r\n  \"#2be2ff\",\r\n  \"#ff3d3f\",\r\n  \"#5ff7f6\",\r\n  \"#f4005e\",\r\n  \"#01ad68\",\r\n  \"#e60072\",\r\n  \"#6bf8de\",\r\n  \"#cc002f\",\r\n  \"#00d1d3\",\r\n  \"#c32c00\",\r\n  \"#02ccf4\",\r\n  \"#d94a00\",\r\n  \"#4ab0ff\",\r\n  \"#ec6500\",\r\n  \"#6ea0ff\",\r\n  \"#d59f00\",\r\n  \"#005fad\",\r\n  \"#ffa72c\",\r\n  \"#007bc3\",\r\n  \"#ff772d\",\r\n  \"#00a4d7\",\r\n  \"#ce7600\",\r\n  \"#8aa8ff\",\r\n  \"#c19900\",\r\n  \"#dd91ff\",\r\n  \"#356b00\",\r\n  \"#ff4fa7\",\r\n  \"#016e30\",\r\n  \"#ff4f92\",\r\n  \"#005312\",\r\n  \"#ff95e9\",\r\n  \"#245200\",\r\n  \"#b69aff\",\r\n  \"#838600\",\r\n  \"#6f156a\",\r\n  \"#b5f19c\",\r\n  \"#af006a\",\r\n  \"#9af4c1\",\r\n  \"#da005a\",\r\n  \"#00a484\",\r\n  \"#ff4369\",\r\n  \"#00b1a4\",\r\n  \"#ae002c\",\r\n  \"#5cceff\",\r\n  \"#9d2300\",\r\n  \"#73c2ff\",\r\n  \"#c66800\",\r\n  \"#0185bf\",\r\n  \"#ffc24b\",\r\n  \"#293a79\",\r\n  \"#f4e379\",\r\n  \"#572a73\",\r\n  \"#f5e285\",\r\n  \"#79035b\",\r\n  \"#d0eb9c\",\r\n  \"#91005b\",\r\n  \"#019069\",\r\n  \"#ae004f\",\r\n  \"#a0f1e0\",\r\n  \"#9d0012\",\r\n  \"#02b0b8\",\r\n  \"#ff6c4c\",\r\n  \"#00abc4\",\r\n  \"#ff8e3d\",\r\n  \"#016398\",\r\n  \"#ffa548\",\r\n  \"#005174\",\r\n  \"#b48200\",\r\n  \"#8fbbff\",\r\n  \"#ad5000\",\r\n  \"#028aab\",\r\n  \"#ff6362\",\r\n  \"#007548\",\r\n  \"#ff658c\",\r\n  \"#005629\",\r\n  \"#e8a9ff\",\r\n  \"#948500\",\r\n  \"#c8adff\",\r\n  \"#6f7300\",\r\n  \"#ffb7fc\",\r\n  \"#184817\",\r\n  \"#ff8ecd\",\r\n  \"#344700\",\r\n  \"#f8c4ff\",\r\n  \"#575900\",\r\n  \"#b8b9ff\",\r\n  \"#9d3500\",\r\n  \"#aeebfe\",\r\n  \"#aa003b\",\r\n  \"#aeedea\",\r\n  \"#92002d\",\r\n  \"#baecd9\",\r\n  \"#980050\",\r\n  \"#018d81\",\r\n  \"#ff6c74\",\r\n  \"#029195\",\r\n  \"#ff7e5c\",\r\n  \"#00667f\",\r\n  \"#ff9158\",\r\n  \"#00535b\",\r\n  \"#ffa466\",\r\n  \"#204259\",\r\n  \"#fede92\",\r\n  \"#572e65\",\r\n  \"#ffd08b\",\r\n  \"#323e5c\",\r\n  \"#ffa173\",\r\n  \"#074648\",\r\n  \"#ff808c\",\r\n  \"#00523c\",\r\n  \"#ff8cb3\",\r\n  \"#2f4513\",\r\n  \"#fbd6fb\",\r\n  \"#822f00\",\r\n  \"#c1e6ff\",\r\n  \"#86003d\",\r\n  \"#e6e4ad\",\r\n  \"#701f49\",\r\n  \"#dbe6c4\",\r\n  \"#7c112f\",\r\n  \"#c9e7ec\",\r\n  \"#791a1f\",\r\n  \"#e0dffc\",\r\n  \"#682e03\",\r\n  \"#d5cfff\",\r\n  \"#975d00\",\r\n  \"#016b72\",\r\n  \"#ff9493\",\r\n  \"#016252\",\r\n  \"#ffaed5\",\r\n  \"#7b6a00\",\r\n  \"#4c3752\",\r\n  \"#ffba84\",\r\n  \"#164738\",\r\n  \"#ff9e8a\",\r\n  \"#294529\",\r\n  \"#ffbec1\",\r\n  \"#4c3d02\",\r\n  \"#f7dbdd\",\r\n  \"#55390b\",\r\n  \"#e0e2de\",\r\n  \"#6d291d\",\r\n  \"#f4dec0\",\r\n  \"#6a2937\",\r\n  \"#ffd8b0\",\r\n  \"#3b3e4d\",\r\n  \"#ffc999\",\r\n  \"#563548\",\r\n  \"#ffd1c3\",\r\n  \"#43401e\",\r\n  \"#ffb3a3\",\r\n  \"#413f30\",\r\n  \"#854c00\",\r\n  \"#443d3b\",\r\n  \"#755000\",\r\n  \"#59343c\",\r\n  \"#695800\",\r\n  \"#543830\",\r\n  \"#60331a\"\r\n]\r\n","\r\nexport const ENTROPY_8BIT = [\r\n    '#0082c8',\t//\tBlue\t1\r\n    '#FF0000',\t//\tRed\t    2\r\n    '#3cb44b',\t//\tGreen\t3\r\n    '#f58231',\t//\tOrange\t4\r\n    '#911eb4',\t//\tPurple\t5\r\n    '#ffe119',\t//\tYellow\t6\r\n    '#46f0f0',\t//\tCyan\t7\r\n    '#f032e6',\t//\tMagenta\t8\r\n    '#d2f53c',\t//\tLime\t9\r\n    '#fabebe',\t//\tPink\t10\r\n    '#008080',\t//\tTeal\t11\r\n    '#e6beff',\t//\tLavender\t12\r\n    '#aa6e28',\t//\tBrown\t13\r\n    '#fffac8',\t//\tBeige\t14\r\n    '#800000',\t//\tMaroon\t15\r\n    '#aaffc3',\t//\tMint\t16\r\n    '#808000',\t//\tOlive\t17\r\n    '#ffd8b1',\t//\tCoral\t18\r\n    '#000080',\t//\tNavy\t19\r\n    '#808080',\t//\tGrey\t20\r\n    '#FFFFFF',\t//\tWhite\t21\r\n    '#000000',\t//\tBlack\t22\r\n    ]\r\n","\r\nexport const  REDS = [\r\n  '#ff0000', '#ff1900', '#ff2700', '#ff3100', '#ff3900',\r\n  '#ff4000', '#ff4700', '#ff4d00', '#ff5200', '#ff5800',\r\n  '#ff5d00', '#ff6101', '#ff6602', '#ff6a04', '#ff6e05',\r\n  '#ff7207', '#ff7609', '#ff7a0c', '#ff7e0e', '#ff8110',\r\n  '#ff8513', '#ff8815', '#ff8c17', '#ff8f19', '#ff921c',\r\n  '#ff951e', '#ff9820', '#ff9b23', '#ff9e25', '#ffa127',\r\n  '#ffa42a', '#ffa62c', '#ffa92f', '#ffac31', '#ffae34',\r\n  '#ffb136', '#ffb338', '#ffb63b', '#ffb83d', '#ffba40',\r\n  '#ffbd43', '#ffbf45', '#ffc148', '#ffc34a', '#ffc54d',\r\n  '#ffc850', '#ffca52', '#ffcc55', '#ffce58', '#ffcf5a',\r\n  '#ffd15d', '#ffd360', '#ffd563', '#ffd765', '#ffd868',\r\n  '#ffda6b', '#ffdc6e', '#ffdd71', '#ffdf74', '#ffe077',\r\n  '#ffe27a', '#ffe37d', '#ffe580', '#ffe683', '#ffe786',\r\n  '#ffe989', '#ffea8c', '#ffeb8f', '#ffec92', '#ffee95',\r\n  '#ffef99', '#fff09c', '#fff19f', '#fff2a2', '#fff3a6',\r\n  '#fff4a9', '#fff5ac', '#fff5b0', '#fff6b3', '#fff7b6',\r\n  '#fff8ba', '#fff8bd', '#fff9c1', '#fffac4', '#fffac8',\r\n  '#fffbcb', '#fffbcf', '#fffcd2', '#fffcd6', '#fffdd9',\r\n  '#fffddd', '#fffee1', '#fffee4', '#fffee8', '#fffeec',\r\n  '#fffff0', '#fffff3', '#fffff7', '#fffffb', '#ffffff',]\r\n","/**\r\n * Colors\r\n * ======\r\n *\r\n * Description\r\n * -----------\r\n * Routiens for generating colors based on a given index\r\n *\r\n */\r\n\r\nimport {ENTROPY} from './pallet/entropy_pallet'\r\nimport {ENTROPY_8BIT} from './pallet/entropy_8bit'\r\nimport {REDS} from './pallet/reds'\r\n\r\n\r\n\r\n\r\nexport function color( index, opacity, color_type='entropy', min=null, max=null, invert=true){\r\n  const color_hex = get_color( index, color_type, min, max, invert )\r\n\r\n  return convertHex(color_hex, opacity)\r\n}\r\n\r\n//\r\n /**\r\n  * returns the color at the specified index. Round robbin selection implemented\r\n  * @param  {Int} index                  color index\r\n  * @param  {String} [color_type='entropy'] color type definition\r\n  * @return {String}                        hex color string\r\n  */\r\n function get_color( index, color_type='entropy', min=null, max=null, invert=true ){\r\n\r\n   //select the color type. Default to entropy\r\n   var colors = ENTROPY\r\n   if( color_type === 'entropy' ){colors = ENTROPY}\r\n   if( color_type === 'entropy_8bit' ){colors = ENTROPY_8BIT}\r\n   if( color_type === 'reds' ){colors = REDS}\r\n\r\n   const max_colors = colors.length - 1\r\n\r\n   var step_size\r\n   var val = index\r\n\r\n   if( max !== null) {\r\n\r\n     //default the color range assuming there is no minum value\r\n     // var step_size = max_colors/max\r\n     // var val = max_colors - Math.floor((index*step_size))\r\n     // if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     //\r\n     //change the scale and color range when a minimum value exists\r\n    if( min !== null ){\r\n       step_size = max_colors/(max - min + 1)\r\n\r\n       //determine the color value\r\n       val = max_colors - Math.floor((index*step_size)-min)\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)-min) }\r\n\r\n     //scale the colors when there is no minimum value\r\n     }else{\r\n       step_size = max_colors/max\r\n       val = max_colors - Math.floor((index*step_size))\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     }\r\n\r\n     //set an upper and lower bound to avoid accessing outside of the array\r\n     if( val > max_colors ){ val = max_colors }\r\n     if( val < 0 ){ val = 0}\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   // for continuous color schemes, cap the positive and negative sizes of th\r\n   // array\r\n   if( color_type === 'reds' ){\r\n\r\n     val = max_colors-index\r\n\r\n     // Invert the color scheme and check to ensure the highside\r\n     // doesn't run off the negative side of the array\r\n     if( invert === true ){\r\n       if( val < 0 ){ val = 0}\r\n       return colors[val]\r\n     }\r\n\r\n     if( val > max_colors ){ val = max_colors }\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   return colors[val%colors.length]\r\n }\r\n\r\n\r\nexport function convertHex(hex,opacity){\r\n    hex = hex.replace('#','');\r\n    const r = parseInt(hex.substring(0,2), 16);\r\n    const g = parseInt(hex.substring(2,4), 16);\r\n    const b = parseInt(hex.substring(4,6), 16);\r\n\r\n    return 'rgba('+r+','+g+','+b+','+opacity/100+')';\r\n\r\n}\r\n\r\n\r\n function int_to_color(v, min=0, max=100) {\r\n   v = 100*((v-min) / (max - min)) - 1\r\n   v = Math.max(0, v)\r\n   return REDS[Math.round(v)]\r\n }\r\n\r\n function shadeHexColor(color, percent) {\r\n   // changes the color by a percent. positive percentage are lighter and negative are darker\r\n   var f = parseInt(color.slice(1),16)\r\n   var t = percent<0?0:255\r\n   var p = percent<0?percent*-1:percent\r\n   var R = f>>16\r\n   var G = (f>>8) & 0x00FF\r\n   var B = f&0x0000FF\r\n\r\n   return \"#\"+( 0x1000000+(Math.round((t-R)*p)+R) *\r\n                0x10000+(Math.round((t-G)*p)+G) *\r\n                0x100+(Math.round((t-B)*p)+B))\r\n                .toString(16)\r\n                .slice(1);\r\n }\r\n\r\n\r\n/**\r\n * returns and object containing the fill and edge color based on a boolean value\r\n */\r\nexport function booleanColor( value ){\r\n\r\n  var fill, edge\r\n\r\n  switch( value ){\r\n    case true :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case false :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 0 :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 1 :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -1 :\r\n      fill = '#B0B0B0'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -2 :\r\n      fill = '#000000'\r\n      edge = shadeHexColor( fill, 0.5)\r\n      break\r\n\r\n    default :\r\n      fill = 'white'\r\n      edge = 'black'\r\n      break\r\n  }\r\n\r\n  return {\r\n    fill: fill,\r\n    edge: edge\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * lightens the fill color and darkens the edge color to\r\n * create a nice contrast between edge and fill\r\n * @param  {hex color} colorHex hex color value\r\n * @return {object}          object containing the edge and fill colors\r\n */\r\nexport function fillAndEdge( colorHex ){\r\n  return {\r\n    fill: shadeHexColor( colorHex, 0.2),\r\n    edge: shadeHexColor( colorHex, -0.5)\r\n  }\r\n}\r\n\r\n/**\r\n * Converts a single RGB component to hex string\r\n * @param  {8bit integer} c 8 bit color integer\r\n * @return {string}   hex string for the specified component\r\n */\r\nfunction componentToHex(c) {\r\n  if ( c === undefined ) return 'FF'\r\n\r\n  var hex = c.toString(16);\r\n  return hex.length === 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n/**\r\n * returns the hex string based on the provided components\r\n * @param  {string} r red color component integer value\r\n * @param  {string} g green color component integer value\r\n * @param  {string} b blue color component integer value\r\n * @return {string}   hex color string\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\nexport {get_color, int_to_color, shadeHexColor};\r\nexport default get_color;\r\n","/**\r\n * echarts Scatter\r\n * =================\r\n *\r\n * Converts json arrays into echart scatter series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a list of x/y cooridnates\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function scatter( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // set default color scheme for specific label types\r\n  var color = props.color\r\n  switch( props.groupId ){\r\n    case true:\r\n      color = 'red'\r\n      break\r\n\r\n    case false:\r\n      color = 'blue'\r\n      break\r\n\r\n    case 'MARKED':\r\n      color = 'green'\r\n      break\r\n\r\n    default:\r\n      if( color === undefined ) color = 'blue'\r\n      break\r\n  }\r\n\r\n\r\n  // convert the json array to a list of lists containing data\r\n  var coordinates = []\r\n  for( var i=0; i < json_array.length; i++ ){\r\n    var temp\r\n\r\n    // the dataframe index was pushed into the plot data in addition to the\r\n    // data used for plotting. This was used to locate the part by index\r\n    // number after splitting it for visualization purposes\r\n    temp = [\r\n      json_array[i][props.colx],\r\n      json_array[i][props.coly],\r\n      json_array[i]['__index__']]\r\n\r\n    if( props.colorBy !== undefined) temp.push(props.colorBy)\r\n\r\n    coordinates.push(temp)\r\n  }\r\n\r\n  var Series = {\r\n    name: 'scatter',\r\n    type: 'scatter',\r\n    color: color,\r\n    data: coordinates\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  // add tooltips when the label is provided\r\n  if( props.colorBy !== undefined ){\r\n    Series['emphasis'] = {\r\n      label: {\r\n        formatter: function( params){\r\n          return `${coordinates[params.dataIndex][2]}`\r\n        },\r\n        show: true,\r\n        position: 'top',\r\n        color: color ,\r\n        fontSize: 16\r\n      }\r\n    }\r\n  }\r\n\r\n  return [Series]\r\n\r\n}\r\n"],"sourceRoot":""}