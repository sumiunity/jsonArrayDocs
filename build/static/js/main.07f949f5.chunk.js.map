{"version":3,"sources":["Documentation/examples/getData.js","jsonArray/index.jsx","jsonArray/jsonObject.js","jsonArray/data_types/format/arrayToString.js","jsonArray/data_types/format/strFormat.js","jsonArray/frameworks/datetime/index.js","jsonArray/statistics/array.js","jsonArray/statistics/matrix.js","jsonArray/jsonArray.js","jsonArray/Series.js","jsonArray/frameworks/react/framework/Components.jsx","jsonArray/frameworks/echarts/series/propsToSeries.js","jsonArray/frameworks/colors/pallet/entropy_pallet.js","jsonArray/frameworks/colors/pallet/entropy_8bit.js","jsonArray/frameworks/colors/pallet/reds.js","jsonArray/frameworks/colors/Colors.js","jsonArray/frameworks/echarts/series/scatter/index.js","jsonArray/frameworks/react/ReactLibraryFramework.js","jsonArray/data_types/datetime.js","jsonArray/frameworks/echarts/series/scatter/scatterBy.js","jsonArray/data_types/format/valueToString.js","Documentation/examples/DataFrame/BasicFunctions/Slice.jsx","Documentation/examples/DataFrame/BasicFunctions/SortIndex.jsx","Documentation/examples/DataFrame/BasicFunctions/SortValues.jsx","Documentation/examples/DataFrame/BasicFunctions/Transpose.jsx","Documentation/examples/DataFrame/BasicFunctions/insert.jsx","Documentation/examples/DataFrame/BasicFunctions/replace.jsx","Documentation/examples/DataFrame/Extract/toCsv.jsx","Documentation/examples/DataFrame/ValueCounts/multipleColumns.jsx","Documentation/examples/DataFrame/config.js","Documentation/examples/DataFrame/datetime/arithmetic.jsx","Documentation/examples/DataFrame/datetime/date.jsx","Documentation/examples/DataFrame/datetime/fillDays.jsx","Documentation/examples/DataFrame/datetime/fillWeek.jsx","Documentation/examples/DataFrame/datetime/week.jsx","Documentation/examples/DataFrame/toSeries/toSeries.jsx","Documentation/examples/Echarts/Area/Simple.jsx","Documentation/examples/Echarts/Bar/HorizontalSeries.jsx","Documentation/examples/Echarts/Bar/Pareto.jsx","Documentation/examples/Echarts/Bar/Simple.jsx","Documentation/examples/Echarts/Bar/Stacked.jsx","Documentation/examples/Echarts/Bar/StackedSeries.jsx","Documentation/examples/Echarts/Bar/VerticalSeries.jsx","Documentation/examples/Echarts/Boxplot/AllSamples.jsx","Documentation/examples/Echarts/Boxplot/AllSamplesGrouped.jsx","Documentation/examples/Echarts/Boxplot/FilteredOverlay.jsx","Documentation/examples/Echarts/Boxplot/Simple.jsx","Documentation/examples/Echarts/Custom/HorizontalLine.jsx","Documentation/examples/Echarts/Custom/Selection.jsx","Documentation/examples/Echarts/Custom/Simple.jsx","Documentation/examples/Echarts/Custom/Style.jsx","Documentation/examples/Echarts/Custom/Zoom.jsx","Documentation/examples/Echarts/Custom/ZoomSlider.jsx","Documentation/examples/Echarts/Custom/ZoomVertical.jsx","Documentation/examples/Echarts/Custom/onClick.jsx","Documentation/examples/Echarts/Format/Legend.jsx","Documentation/examples/Echarts/Format/ToolboxExample.jsx","Documentation/examples/Echarts/Heatmap/Simple.jsx","Documentation/examples/Echarts/Line/ErrorBars.jsx","Documentation/examples/Echarts/Line/Highlight.jsx","Documentation/examples/Echarts/Line/Simple.jsx","Documentation/examples/Echarts/Pie/FromSeries.jsx","Documentation/examples/Echarts/Pie/Simple.jsx","Documentation/examples/Echarts/Radar/Simple.jsx","Documentation/examples/Echarts/Radar/modified.jsx","Documentation/examples/Echarts/RectGrid/Custom.jsx","Documentation/examples/Echarts/RectGrid/Simple.jsx","Documentation/examples/Echarts/Scatter/ColorBy.jsx","Documentation/examples/Echarts/Scatter/Labeled.jsx","Documentation/examples/Echarts/Scatter/Simple.jsx","Documentation/examples/Echarts/Selection/SelectionScatter.jsx","Documentation/examples/Echarts/Tooltips/tooltips.jsx","Documentation/examples/Echarts/Waterfall/Basic.jsx","Documentation/examples/Echarts/Waterfall/Completion.jsx","Documentation/examples/Echarts/config.js","Documentation/examples/Series/BasicFunctions/IndexAndValues.jsx","Documentation/examples/Series/BasicFunctions/SortValues.jsx","Documentation/examples/Series/BasicFunctions/Unique.jsx","Documentation/examples/Series/BasicFunctions/ValueCounts.jsx","Documentation/examples/Series/BasicFunctions/arithmetic.jsx","Documentation/examples/Series/BasicFunctions/duplicates.jsx","Documentation/examples/Series/BasicFunctions/insert.jsx","Documentation/examples/Series/BasicFunctions/replace.jsx","Documentation/examples/Series/BasicFunctions/toObject.jsx","Documentation/examples/Series/Echarts/Pareto.jsx","Documentation/examples/Series/Echarts/Pie.jsx","Documentation/examples/Series/Pareto/crop.jsx","Documentation/examples/Series/Table/Table.jsx","Documentation/examples/Series/config.js","Documentation/examples/Series/toDataFrame/merge.jsx","Documentation/examples/Table/Accordian/AccordianTable.jsx","Documentation/examples/Table/Filtering/ColumnFilters.jsx","Documentation/examples/Table/Header/MultiRow.jsx","Documentation/examples/Table/Header/NoHeader.jsx","Documentation/examples/Table/LazyLoading/LazyLoading.jsx","Documentation/examples/Table/MultiRow/MultiRowCol.jsx","Documentation/examples/Table/MultiRow/MultirowTable.jsx","Documentation/examples/Table/ParentFilterCol.jsx","Documentation/examples/Table/ParentSortCol.jsx","Documentation/examples/Table/SpecialContent/Checkbox.jsx","Documentation/examples/Table/Style/AlternatingStyle.jsx","Documentation/examples/Table/Style/CustomCss.jsx","Documentation/examples/Table/Style/CustomeCellColoring.jsx","Documentation/examples/Table/Style/DataDrivenColoring.jsx","Documentation/examples/Table/Style/Hyperlinking.jsx","Documentation/examples/Table/Style/RenamingColumns.jsx","Documentation/examples/Table/Style/SimpleTable.jsx","Documentation/examples/Table/Style/TableFormat.jsx","Documentation/examples/Table/config.js","Documentation/components/jsonArray.js","jsonArray/frameworks/echarts/series/pie/index.js","jsonArray/frameworks/echarts/tooltips.js","jsonArray/frameworks/echarts/axis.js","jsonArray/frameworks/echarts/options/features/axline.js","jsonArray/frameworks/echarts/options/charts/line.js","jsonArray/frameworks/echarts/options/charts/rollingAvg.js","jsonArray/frameworks/echarts/options/charts/boxplot.js","jsonArray/frameworks/echarts/options/charts/heatmap.js","jsonArray/frameworks/echarts/options/charts/scatter.js","jsonArray/frameworks/echarts/options/charts/bar.js","jsonArray/frameworks/echarts/options/charts/pareto.js","jsonArray/frameworks/echarts/options/charts/grid.js","jsonArray/frameworks/echarts/options/charts/pie/index.js","jsonArray/frameworks/echarts/options/charts/pie/fromSeries.js","jsonArray/frameworks/echarts/options/charts/radar.js","jsonArray/frameworks/echarts/options/charts/waterfall.js","jsonArray/frameworks/echarts/options/index.js","jsonArray/frameworks/echarts/options/format/Toolbox.js","jsonArray/frameworks/echarts/options/features/Selection.js","jsonArray/frameworks/echarts/options/features/DataZoom.js","jsonArray/frameworks/echarts/options/features/Highlight.js","jsonArray/frameworks/echarts/options/format/legend.js","Documentation/index.jsx","jsonArray/frameworks/fileIO/extract.js","Documentation/examples/Demo/BasicExample.jsx","Documentation/components/Example.jsx","Documentation/components/Header.jsx","Documentation/components/CodeRender.jsx","Documentation/components/Sidebar.jsx","Documentation/config.js","jsonArray/data_types/dtypes.js","jsonArray/frameworks/echarts/components.js","jsonArray/frameworks/echarts/series/grid/index.js","jsonArray/frameworks/echarts/series/pie/fromSeries.js","jsonArray/frameworks/echarts/series/radar/index.js","jsonArray/frameworks/echarts/series/features/Hline.js","jsonArray/frameworks/echarts/series/features/Vline.js","jsonArray/frameworks/echarts/series/features/Circle.jsx","jsonArray/frameworks/echarts/series/index.js","jsonArray/frameworks/echarts/series/features/ErrorBars.js","jsonArray/frameworks/echarts/series/line/rollingAvg/Standard.js","jsonArray/frameworks/echarts/series/line/rollingAvg/index.js","jsonArray/frameworks/echarts/series/line/rollingAvg/CenterWindow.js","jsonArray/frameworks/echarts/series/line/rollingAvg/TailingWindow.js","jsonArray/frameworks/react/plugins/Plugins.js","jsonArray/frameworks/react/ReactComponents.js","jsonArray/frameworks/echarts/series/line/index.js","jsonArray/frameworks/echarts/series/waterfall/components/HorizontalLines.js","jsonArray/frameworks/echarts/series/waterfall/index.js","jsonArray/frameworks/echarts/series/waterfall/completed.js","jsonArray/frameworks/react/plugins/echarts/EchartsReact.jsx","jsonArray/frameworks/react/plugins/echarts/index.jsx","jsonArray/frameworks/echarts/series/boxplot/index.js","jsonArray/frameworks/echarts/series/boxplot/scatter_overlay.js","jsonArray/frameworks/echarts/series/bar/bar.js","jsonArray/frameworks/echarts/series/bar/index.js","Documentation sync /^/.//.*$","jsonArray/frameworks/react/plugins/fileIO.jsx","index.js","Documentation/examples sync /^/.//.*$","jsonArray/frameworks/react/framework/SemanticUI.js","jsonArray/frameworks/react/plugins/Excel.jsx","jsonArray/frameworks/fileIO/fromFile.js","Documentation/examples/data sync /^/.//.*$","Documentation/examples/DataFrame sync /^/.//.*$","Documentation/examples/Echarts sync /^/.//.*$","Documentation/examples/Series sync /^/.//.*$","Documentation/examples/Table sync /^/.//.*$","Documentation/doc/DataFrame/BasicFunctions/Slice.doc","Documentation/doc/DataFrame/BasicFunctions/SortValues.doc","Documentation/doc/DataFrame/BasicFunctions/Transpose.doc","Documentation/doc/DataFrame/BasicFunctions/insert.doc","Documentation/doc/DataFrame/BasicFunctions/replace.doc","Documentation/doc/DataFrame/Extract/toCsv.doc","Documentation/doc/DataFrame/ValueCounts/multipleColumns.doc","Documentation/doc/DataFrame/datetime/arithmetic.doc","Documentation/doc/DataFrame/datetime/date.doc","Documentation/doc/DataFrame/datetime/fillDays.doc","Documentation/doc/DataFrame/datetime/fillWeek.doc","Documentation/doc/DataFrame/datetime/week.doc","Documentation/doc/DataFrame/toSeries/toSeries.doc","Documentation/doc/Demo/BasicExample.doc","Documentation/doc/Echarts/Area/Simple.doc","Documentation/doc/Echarts/Bar/HorizontalSeries.doc","Documentation/doc/Echarts/Bar/Pareto.doc","Documentation/doc/Echarts/Bar/Simple.doc","Documentation/doc/Echarts/Bar/Stacked.doc","Documentation/doc/Echarts/Bar/StackedSeries.doc","Documentation/doc/Echarts/Bar/VerticalSeries.doc","Documentation/doc/Echarts/Boxplot/AllSamples.doc","Documentation/doc/Echarts/Boxplot/AllSamplesGrouped.doc","Documentation/doc/Echarts/Boxplot/FilteredOverlay.doc","Documentation/doc/Echarts/Boxplot/Simple.doc","Documentation/doc/Echarts/Custom/HorizontalLine.doc","Documentation/doc/Echarts/Custom/Selection.doc","Documentation/doc/Echarts/Custom/Simple.doc","Documentation/doc/Echarts/Custom/Style.doc","Documentation/doc/Echarts/Custom/Zoom.doc","Documentation/doc/Echarts/Custom/ZoomSlider.doc","Documentation/doc/Echarts/Custom/ZoomVertical.doc","Documentation/doc/Echarts/Custom/onClick.doc","Documentation/doc/Echarts/Format/Legend.doc","Documentation/doc/Echarts/Format/ToolboxExample.doc","Documentation/doc/Echarts/Heatmap/Simple.doc","Documentation/doc/Echarts/Line/ErrorBars.doc","Documentation/doc/Echarts/Line/Highlight.doc","Documentation/doc/Echarts/Line/Simple.doc","Documentation/doc/Echarts/Pie/FromSeries.doc","Documentation/doc/Echarts/Pie/Simple.doc","Documentation/doc/Echarts/Radar/Simple.doc","Documentation/doc/Echarts/Radar/modified.doc","Documentation/doc/Echarts/RectGrid/Custom.doc","Documentation/doc/Echarts/RectGrid/Simple.doc","Documentation/doc/Echarts/Scatter/ColorBy.doc","Documentation/doc/Echarts/Scatter/Labeled.doc","Documentation/doc/Echarts/Scatter/Simple.doc","Documentation/doc/Echarts/Selection/SelectionScatter.doc","Documentation/doc/Echarts/Tooltips/tooltips.doc","Documentation/doc/Echarts/Waterfall/Basic.doc","Documentation/doc/Echarts/Waterfall/Completion.doc","Documentation/doc/Series/BasicFunctions/IndexAndValues.doc","Documentation/doc/Series/BasicFunctions/SortValues.doc","Documentation/doc/Series/BasicFunctions/Unique.doc","Documentation/doc/Series/BasicFunctions/ValueCounts.doc","Documentation/doc/Series/BasicFunctions/arithmetic.doc","Documentation/doc/Series/BasicFunctions/duplicates.doc","Documentation/doc/Series/BasicFunctions/insert.doc","Documentation/doc/Series/BasicFunctions/replace.doc","Documentation/doc/Series/BasicFunctions/toObject.doc","Documentation/doc/Series/Echarts/Pareto.doc","Documentation/doc/Series/Echarts/Pie.doc","Documentation/doc/Series/Pareto/crop.doc","Documentation/doc/Series/Table/Table.doc","Documentation/doc/Series/toDataFrame/merge.doc","Documentation/doc/Table/Accordian/AccordianTable.doc","Documentation/doc/Table/AccordianTable.doc","Documentation/doc/Table/AlternatingStyle.doc","Documentation/doc/Table/Checkbox.doc","Documentation/doc/Table/ColumnFilters.doc","Documentation/doc/Table/Filtering/ColumnFilters.doc","Documentation/doc/Table/Header/MultiRow.doc","Documentation/doc/Table/Header/NoHeader.doc","Documentation/doc/Table/LazyLoading.doc","Documentation/doc/Table/LazyLoading/LazyLoading.doc","Documentation/doc/Table/MultiRow/MultiRowCol.doc","Documentation/doc/Table/MultiRow/MultirowTable.doc","Documentation/doc/Table/MultiRowCol.doc","Documentation/doc/Table/MultirowTable.doc","Documentation/doc/Table/NoHeader.doc","Documentation/doc/Table/ParentFilterCol.doc","Documentation/doc/Table/ParentSortCol.doc","Documentation/doc/Table/SimpleTable.doc","Documentation/doc/Table/SpecialContent/Checkbox.doc","Documentation/doc/Table/Style/AlternatingStyle.doc","Documentation/doc/Table/Style/CustomCss.doc","Documentation/doc/Table/Style/CustomeCellColoring.doc","Documentation/doc/Table/Style/DataDrivenColoring.doc","Documentation/doc/Table/Style/Hyperlinking.doc","Documentation/doc/Table/Style/RenamingColumns.doc","Documentation/doc/Table/Style/RenamingHeaders.doc","Documentation/doc/Table/Style/SimpleTable.doc","Documentation/doc/Table/Style/TableFormat.doc","Documentation/doc/Table/TableFormat.doc","Documentation/install.py","jsonArray/frameworks/react/table/utilities/ColGroupsToCol.js","jsonArray/frameworks/react/table/header/Filter/ColumnFilter.jsx","jsonArray/frameworks/react/table/header/Cell/index.jsx","jsonArray/frameworks/react/table/header/SingleRow/ColumnRow.jsx","jsonArray/frameworks/react/table/header/SingleRow/index.jsx","jsonArray/frameworks/react/table/header/MultiRow/CategoryRow.jsx","jsonArray/frameworks/react/table/header/MultiRow/index.jsx","jsonArray/frameworks/react/table/header/DataFrameHeader.jsx","jsonArray/frameworks/react/table/header/SeriesHeader.jsx","jsonArray/frameworks/react/table/cell/coloredSquare.jsx","jsonArray/frameworks/react/table/cell/onClickFunc.jsx","jsonArray/frameworks/react/table/cell/cellType.jsx","jsonArray/frameworks/react/table/cell/booleanCircle.jsx","jsonArray/frameworks/react/table/cell/index.jsx","jsonArray/frameworks/react/table/body/Row.jsx","jsonArray/frameworks/react/table/body/SeriesRow.jsx","jsonArray/frameworks/react/table/body/AccordianRow.jsx","jsonArray/frameworks/react/table/body/MultiRow.jsx","jsonArray/frameworks/react/table/body/index.jsx","jsonArray/frameworks/react/table/Table.js"],"names":["getData","path","require","jsonArray","jsonObject","data","keys","Object","index","key","this","datetime","key_name","value_name","array","columns","undefined","i","length","push","json_object","arrayToString","tab_count","tab_space","max_width","value","json_array","max_length","value_to_string","valueToString","concat","col","col_width","j","includes","toString","dtypes","spacing","row_array","whitespace","Array","join","row","col_spacing","formatted","format_array","format_columns","format_row","jsonArray_str","console","log","strFormat","props","params","__inplace__","row_apply","r","moment","week","year","format","day","newArray","dt","to_datetime","inplace","sort_values","diffTime","Math","abs","diffDays","ceil","add","days","subtract","sum","dropna","reduce","a","b","mean","filter","Number","isNaN","max","map","min","arrayStats","forward_diff","newCol","step","rolling_average","start","end","window","type","yValues","pStep","nStep","floor","slice","DataTypes","JSON","parse","stringify","hasOwnProperty","init","indexName","Set","x","mapping","rename","Series","dtype","name","series","entries","id","indexOf","subset","forEach","s","first","last","df","obj","position","unshift","pos1","pos2","func","idx","__index__","values","isArray","DataFrame","pareto","att","paretoSeries","object","table","indexArray","temp","create_column","drop_columns","ascending","sort","df1","df2","col_left","col_right","how","on","on_right","on_left","unique","df1_rows","df2_rows","val","__groupby__","json_obj","atts","results","group","temp_keys","assign","counts","buffer","split_val","split","count","transpose","pivot_table","column","id_att","summaryType","row_val","column_val","rval","by_row","cval","by_col","temp_json","stats","col_names","convert","col_name","sep","col1","col2","combine","rcol","gcol","bcol","colorCol","toHex","rgbToHex","colorType","get_color","ordered","unique_values","param_keys","sample_index","new_col","ex_columns","enable","avgType","filename","toCsv","echartsOptions","echartsSeries","eChartsComponents","ReactComponents","fromFileLibrary","default","insert","replace","ser","toObject","dataframe","serIndex1","serIndex2","diff","uniqueIndex","returnObj","other","apply","colx","coly","Button","wrapper","Input","Image","Table","Cell","Header","HeaderCell","Row","Body","Icon","Checkbox","component","defaultValue","src","alt","propsToSeries","stacked","color","smooth","symbol","symbolSize","lineStyle","axis","z","zIndex","emphasis","barGap","labelObj","label","show","formatter","lw","normal","borderWidth","ENTROPY","ENTROPY_8BIT","REDS","opacity","color_type","invert","color_hex","convertHex","colors","step_size","max_colors","hex","parseInt","substring","int_to_color","v","round","shadeHexColor","percent","f","t","p","R","G","B","booleanColor","fill","edge","fillAndEdge","colorHex","componentToHex","c","g","scatter","groupId","coordinates","colorBy","dataIndex","fontSize","ReactLibraryFramework","self","__proto__","prototype","strftime","isoWeek","timedelta","date","pkey","scatter_by","groupby","color_value","numeric","percentage","float","string","format_float","format_int","format_object","format_boolean","format_scientific","format_percentage","format_datetime","format_string","pow","toFixed","toExponential","parseFloat","DevExample","react","semanticUI","tableName","sort_index","WEEK","YEAR","tposed","set_index","reset_index","UP16009","UP16012","AccordianTable","astype","image","VALUE","toSeries","primary","onClick","value_counts","importConfig","config","indev","localConfig","sub","fill_days","fill_weeks","SimpleScatter","pivot","options","echarts","Echarts","option","stack","width","showSymbol","areaStyle","focus","tooltip","trigger","axisPointer","backgroundColor","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","StackedScatter","bar","horizontal","ratio","Bar","stack_col","stacked_id","pivot2","append_series","AllSamples","Boxplot","allSample","overlayFilter","CATEGORY2","SimpleLine","axhline","selection","onSelect","line","echartsStyle","height","zoom","scroll","sliders","React","useState","selected","setSelected","DevelopmentExample","pie","Heatmap","errorbars","avg","rotate","xtick_padding","highlight","Line","SimplePie","QRB","FORCE_INK","DEV","SBL","pieFromSeries","radar","groups","indicator","maxValue","rectGrid","circle","radius","RectGrid","ColorByScatter","Scatter","from_DataFrame","as","waterfall","colz","Example","COUNT","serAdd","serSub","serMultiply","multiply","serDivide","divide","duplicate","ExampleComponent","1","3","5","replace_index","0","7","16","Pareto","Pie","showPercent","pareto_crop","value1","value2","CATEGORY1","ser1","ser2","merge","accordian","accordianColumns","accordianHeader","sortable","ColumnFilters","filterable","SimpleTable","columnGroups","category","showHeader","JsonArray","lazyLoading","lazyLoadingStart","lazyLoadingStep","multirow","multirowSpan","rowOnClick","alert","filters","setFilters","columnFilterOnChange","content","ParentSortColumn","sortBy","setSortBy","sortAscending","setSortAscending","columnOnClick","CheckboxTable","checkboxField","cellOnClick","alternateStyle","tdStyle","padding","CustomCellColoring","cellBackgroundColor","DataDrivenColoring","Hyperlink","columnNames","avoidLabelOverlap","labelLine","fontWeight","rich","lineHeight","align","per","borderRadius","echartsTooltip","splice","sample","echartsAxis","initialize","scale","axisLabel","units","Axline","markLine","to_category","to_date","rollingAvg","boxplot","to_value","dynamic_range","heatmap","visualMap","calculable","orient","inRange","item","tick_values","total","cumsum","minValue","hide","pieChart","RadarSeries","animation","generate_options","RollingAvg","Grid","PieFromSeries","Radar","Waterfall","dataZoom","title","restore","xAxisIndex","outOfBrush","colorAlpha","scrollZoom","filterMode","icon","showDataShadow","handleSize","handleIcon","yAxisIndex","features","local_variables","delete","top","Examples","setCategory","subcategory","setSubCategory","docType","setDocType","getConfig","fillna","inverted","style","Navbar","callback","margin","Column","maxWidth","stretched","PageContent","examples","exampleComponents","vertical","jsxDir","docDir","example","size","Item","active","Papa","browserInterface","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","csv","unparse","header","csvData","Blob","Component","showCode","setShowCode","dir","NullComponent","Group","description","visible","Controls","textAlign","CodeRender","rel_path","source","setSource","ext","syntax","fetch","then","text","circular","element","file","download","downloadFile","editorProps","$blockScrolling","Infinity","maxLines","minLines","mode","onChange","tabSize","theme","readOnly","Sidebar","menuItems","categories","cat","flat_categories","subcategories","subMenuItems","subcat","Menu","sub_categories","pointing","secondary","set_dtypes","dtype_col","String","set_label","number","toLowerCase","data_type","dtype1","dtype2","priority","temp_dtype","dtypePriority","existing","parse_column","color_col","renderItem","renderRectangle","legendHoverLink","silent","encode","y","zlevel","api","xCoor","yCoor","coord","shape","stroke","fromSeries","Hline","itemStyle","yValue","highPoint","lowPoint","children","transition","x1","y1","x2","y2","visual","border","render","Vline","xValue","Circle","cx","cy","ErrorBars","CenterWindow","Standard","showUncertainty","midStart","midEnd","TailingWindow","enabledComponents","excel","components","FileIO","echartsLibrary","HorizontalLines","y_val","pos","neg","pos_c","neg_c","tempComplete","tempIncompete","barBorderColor","posColorComplete","posColorIncomplete","negColorComplete","negColorIncomplete","CompletedWaferfall","posColor","negColor","EchartsReact","onEvents","batch","iloc","bind","Histogram","format_props","__props","Render","binning","bins","react_echarts","prepareBoxplotData","group_values","echartsData","boxData","outliers","copy_column","scatterFunc","scatter_overlay","BarPlot","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","extract","FileIOLibrary","ToCsv","buttonStyle","button","ReactDOM","getElementById","SemanticUI","SemanticUILibrary","Excel","Dropdown","buttonProps","input","inputStyle","inputProps","placeholder","th","thead","td","tr","checkbox","plottype","child_props","Form","Field","control","Select","search","clearable","multiple","d","state","fileInputRef","createRef","current","hidden","ref","event","fileHandler","target","className","files","fileObj","setState","ExcelRenderer","err","response","rows","parser","http","zlib","fromUrl","from_url","from_file","complete","from_gz_url","get","res","gunzip","createGunzip","pipe","toColumns","flat","ColumnFilter","_","uniqueId","headerCellOnClick","col_number","filterValues","Segment","raised","compact","boxShadow","basic","minHeight","fluid","colNumber","ColComponent","thProps","thStyle","ColumnRow","col_offset","colCells","table_data","trProps","trStyle","DataFrameHeader","headerrow","theadProps","theadStyle","TableRow","catCells","MultiRowHeader","toColumn","SeriesHeader","coloredSquare","preserveAspectRatio","viewBox","transform","display","overflow","strokeWidth","onClickFunc","row_idx","row_data","cellType","cellContent","componentOnClick","imageProps","imageStyle","IconProps","iconStyle","CheckboxProps","checkboxStyle","checked","booleanCircle","whiteSpace","overflowWrap","cell","cellStyle","tdProps","col_span","row_span","setSelectedRow","rowStyle","rowColor","rowBackgroundColor","selectedRow","cellContentOnly","multirow_idx","SeriesRow","__value__","AccordianRow","setVisible","accordianFunc","AccordianComponent","iconOnClick","iconColor","accordianComponent","tableStyle","accordianProps","rowSpan","colSpan","MultiRow","modProps","multirowStyle","span_len","span","TableBody","onHover","setOnHover","renderedRows","setRenderedRows","onMouseOver","onMouseOut","bodyProps","bodyStyle","SeriesTable","sortedColumn","filt"],"mappings":"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","file":"static/js/main.07f949f5.chunk.js","sourcesContent":["\r\n// retrieves data from the data repository. modularizing the data this way, makes\r\n// it possible to easily offload the data to an external location to reduce the\r\n// overall build size thus improving build and loading times\r\nexport default function getData( path ){\r\n  return require('./data/' + path)\r\n}\r\n","\r\nimport jsonArray from './jsonArray'\r\n\r\nexport default jsonArray\r\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport datetime from './data_types/datetime';\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\nexport default class jsonObject extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    const keys = Object.keys(data)\r\n\r\n    // copy over the content from the input data\r\n    for( var index in keys ){\r\n      const key = keys[index]\r\n      this[key] = data[key]\r\n    }\r\n\r\n  }\r\n\r\n  // TODO: search for all columns in the Array\r\n  get columns(){ return Object.keys(this) }\r\n  get keys(){ return Object.keys(this) }\r\n\r\n  // converts the specified key to a datetime attribute\r\n  strptime( key ){\r\n\r\n    if( !(this[key] instanceof datetime) ){\r\n      this[key] = datetime(this[key])\r\n    }\r\n    return this\r\n  }\r\n\r\n\r\n  // convert the json Object to a two dimensional json array\r\n  to_jsonArray( key_name, value_name ){\r\n\r\n    var array = []\r\n    const keys = this.columns\r\n\r\n    // set defaults for the key and value attributes\r\n    if( key_name === undefined ) key_name = 'key'\r\n    if( value_name === undefined ) value_name = 'value'\r\n\r\n    // convert the json object into a json array\r\n    for( var i=0; i < keys.length; i++ ){\r\n      array.push( {\r\n        [key_name]: keys[i],\r\n        [value_name]: this.json_object[keys[i]]\r\n      })\r\n    }\r\n\r\n    return new jsonArray(array)\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Array To String\r\n * ====================\r\n *\r\n * Converts jsonArray to an array of strings\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class arrayToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    // whitespace for each tab and the tabs between each column\r\n    this.tab_count = 1\r\n    this.tab_space = 4\r\n\r\n    this.max_width = 20\r\n\r\n    this.columns = undefined\r\n\r\n  }\r\n\r\n\r\n    // returns the length of the contents\r\n    col_width( value ){\r\n\r\n      return value.length\r\n    }\r\n\r\n\r\n\r\n    // determines the maximum width between columns\r\n    col_spacing( json_array ){\r\n\r\n      var max_length = {}\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      // determine the maximum string lenght of each column\r\n      for( var i=0; i < this.columns.length; i++ ){\r\n\r\n        var col = this.columns[i]\r\n\r\n        // determine the length of the column name string\r\n        max_length[col] = this.col_width(this.columns[i])\r\n\r\n        // cap the length of the column name length. We can skip\r\n        // processing because we are already at the max width\r\n        if( max_length[col] > this.max_width ){\r\n          max_length[col] = this.max_width\r\n          continue\r\n        }\r\n\r\n\r\n        // determine the maximum string length of the column\r\n        for( var j=0; j < json_array.length; j++ ){\r\n\r\n          // do not consider non-existing values\r\n          if( !Object.keys(json_array[j]).includes(col) ) continue\r\n\r\n          const value = value_to_string.toString(\r\n            json_array[j][col],\r\n            json_array.dtypes[col]\r\n          )\r\n\r\n          if( value.length > max_length[col] ){\r\n            max_length[col] = value.length\r\n          }\r\n\r\n          // We can skip processing because we are already at the max width\r\n          if( max_length[col] > this.max_width ) break\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return max_length\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns a list of column names in order with the proper\r\n     * whitespace added for logging\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of column names with the appropriate whitespace\r\n     */\r\n    format_columns( spacing ){\r\n\r\n      var row_array = []\r\n\r\n      // add each column name with the appropriate white space added\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        const whitespace = spacing[col] - col.length\r\n        row_array.push( new Array(whitespace + 1).join(' ') + col )\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a formatted string of the formatted cell for each row\r\n     * @param  {Array}  row     Object containing the values for each row\r\n     * @param  {Object} dtypes  Object containing the maximum length for each column\r\n     * @param  {Object} spacing maximum string length for the column\r\n     * @return {Array}         array of values with the appropriate whitespace\r\n     */\r\n    format_row( row, dtypes, spacing ){\r\n\r\n      const value_to_string = new valueToString()\r\n\r\n      var row_array = []\r\n      for( var j=0; j < this.columns.length; j++ ){\r\n\r\n        const col = this.columns[j]\r\n        var value = row[col]\r\n\r\n        var whitespace\r\n        if( value === undefined ){\r\n          value = 'nan'\r\n          whitespace = spacing[col] - 3\r\n        } else {\r\n\r\n          value = value_to_string.toString( value, dtypes[col] )\r\n          whitespace = spacing[col] - value.length\r\n        }\r\n\r\n        try{\r\n          row_array.push( new Array(whitespace + 1).join(' ') + value )\r\n        }catch{row_array.push(value)}\r\n      }\r\n\r\n      return row_array\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts the array of strings int a single array where\r\n     * each column is separated by whitespace based on the\r\n     * local white space definition\r\n     * @param  {Array} array  Array of strings\r\n     * @return {String}       String containing each array element with the desired whitespace\r\n     */\r\n    format_array( array ){\r\n      return new Array(...array).join(new Array(this.tab_space * this.tab_count).join(' '))\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a matrix of strings that have been formated based on the data\r\n     * type of each column\r\n     * @param  {Array} array  jsonArray containing the matrix to convert\r\n     * @return {String}        Matrix of strings formatted based on the column data type\r\n     */\r\n    toString( array ){\r\n\r\n      // force the input array into a json array type\r\n      var json_array = array\r\n      if(!(json_array instanceof(jsonArray))){\r\n        json_array = new jsonArray(array)\r\n      }\r\n\r\n      // extract the column names when they are not provided locally\r\n      if( this.columns === undefined ) this.columns = ['__index__'].concat(json_array.columns)\r\n\r\n      const spacing = this.col_spacing( json_array )\r\n\r\n      // seed the formatted array with the column names\r\n      var formatted = this.format_array( this.format_columns(spacing) ) + '\\r\\n'\r\n\r\n      // format the data from each row\r\n      for( var i=0; i < json_array.length; i++ ){\r\n        formatted = formatted.concat(\r\n          this.format_array( this.format_row(json_array[i], json_array.dtypes, spacing) ) + '\\r\\n'\r\n        )\r\n      }\r\n\r\n      return formatted\r\n\r\n    }\r\n\r\n\r\n    toConsole( array ){\r\n\r\n      const jsonArray_str = this.toString( array )\r\n      console.log( jsonArray_str )\r\n    }\r\n}\r\n","/**\r\n * Format\r\n * =============\r\n * Routines to convert the jsonArray into a string for visualization\r\n * purposes\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n */\r\n\r\n\r\nimport arrayToString from './arrayToString'\r\nimport valueToString from './valueToString'\r\n\r\nexport default class strFormat{\r\n\r\n  constructor( data ){\r\n    this.data = data\r\n  }\r\n\r\n\r\n  /**\r\n   * returns a string containing the jsonArray contents\r\n   * where each column is formated based on the local data\r\n   * types\r\n   * @return {String} Formatted string containing the jsonArray contents\r\n   */\r\n  get table(){\r\n    const format = new arrayToString()\r\n    return format.toString( this.data )\r\n  }\r\n\r\n  row( index ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  column( col ){\r\n    return 'not implemented'\r\n  }\r\n\r\n  /**\r\n   * Returns the formatted data for the specified cell\r\n   * @param  {int} row row number\r\n   * @param  {String} col column name\r\n   * @return {String}     formatted string representing the string value\r\n   */\r\n  value( row, col ){\r\n    const format = new valueToString()\r\n    return format.toString(\r\n      this.data[row][col],\r\n      this.data.dtypes[col]\r\n    )\r\n  }\r\n\r\n}\r\n","\r\nimport moment from 'moment'\r\nimport jsonArray from '../../jsonArray'\r\n\r\nexport default class datetime extends Object{\r\n\r\n  constructor(data, props={}) {\r\n    super()\r\n\r\n    this.data = data\r\n    this.props = props\r\n  }\r\n\r\n  /**\r\n   * Converts the date column into moment format\r\n   * @param  {String} col         Date column name\r\n   * @param  {Object} [params={}] Additional Parameters\r\n   * @return {Array}              jsonArray containing the data\r\n   */\r\n  to_datetime(col, params={}){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n    array.row_apply( r => {\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col])\r\n      return r\r\n    })\r\n\r\n    array.dtypes[col] = 'datetime'\r\n    return new jsonArray(array)\r\n  }\r\n\r\n  /**\r\n   * Converts the date column to week attributes\r\n   * @param  {String} col         Date column name\r\n   * @param  {Object} [params={}] Additional Parameters\r\n   * @return {Array}              jsonArray containing the data\r\n   */\r\n  week(col, params={}){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array.row_apply( r => {\r\n      // convert the column to a moment if it is not already\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col])\r\n      r['WEEK'] = r[col].week()\r\n      r['YEAR'] = r[col].year()\r\n      r['WEEK_LABEL'] = `${r[col].year()}-${r[col].week()}`\r\n      return r\r\n    })\r\n\r\n    // define the datatypes for the created/modified attributes\r\n    array.dtypes = {\r\n      ...array.dtypes,\r\n      ...{\r\n        [col]: 'datetime',\r\n        'WEEK_NUM': 'int',\r\n        'YEAR': 'int',\r\n        'WEEK_LABEL': 'string',\r\n      }\r\n    }\r\n\r\n    return new jsonArray(array)\r\n  }\r\n\r\n  /**\r\n   * Converts the date column to all date attributes\r\n   * @param  {String} col         Date column name\r\n   * @param  {Object} [params={}] Additional Parameters\r\n   * @return {Array}              jsonArray containing the data\r\n   */\r\n  date(col, format='YYYY-MM-DD', params={}){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array.row_apply( r => {\r\n      // convert the column to a moment if it is not already\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col], format)\r\n      r['WEEK'] = r[col].week()\r\n      r['DAY'] = r[col].format('D')\r\n      r['DAYOFWEEK'] = r[col].day()\r\n      r['MONTH'] = r[col].format('M')\r\n      r['YEAR'] = r[col].year()\r\n      r['WEEK_LABEL'] = `${r[col].year()}-${r[col].week()}`\r\n      return r\r\n    })\r\n\r\n    // define the datatypes for the created/modified attributes\r\n    array.dtypes = {\r\n      ...array.dtypes,\r\n      ...{\r\n        [col]: 'datetime',\r\n        'WEEK': 'int',\r\n        'YEAR': 'int',\r\n        'DAY': 'int',\r\n        'DAYOFWEEK': 'int',\r\n        'MONTH': 'int',\r\n        'WEEK_LABEL': 'string',\r\n      }\r\n    }\r\n\r\n    return new jsonArray(array)\r\n  }\r\n\r\n\r\n  /**\r\n   * Inserts empty objects for missing days\r\n   * @param  {String}               date column name\r\n   * @param  {Object} [params={}]   Extra Parameters\r\n   * @return {jsonArray}            JsonArray with missing weeks\r\n   */\r\n  fill_days(col, params={}){\r\n\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array = array.dt.to_datetime(col, {inplace: true})\r\n    array = array.sort_values(col )\r\n\r\n    // push the existing values into the array with empty\r\n    // objects for missing weeks\r\n    var newArray = [array[0]]\r\n    for( let i=1; i < array.length; i++ ){\r\n\r\n      const diffTime = Math.abs(array[i][col] - array[i-1][col]);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\r\n\r\n      for( let j = 1; j < diffDays; j++ ){\r\n        newArray.push( {[col]: moment(array[i-1][col]).add({days: j}) })\r\n      }\r\n\r\n      // the existing entry to the buffer\r\n      newArray.push( array[i] )\r\n    }\r\n\r\n    return new jsonArray(newArray)\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Inserts empty objects for missing weeks\r\n   * @param  {String} [week='WEEK'] Week column name. Defaults to Week\r\n   * @param  {String} [year='YEAR'] Year column mane. Defaults to YEAR\r\n   * @param  {Object} [params={}]   Extra Parameters\r\n   * @return {jsonArray}            JsonArray with missing weeks\r\n   */\r\n  fill_weeks(week='WEEK', year='YEAR', params={}){\r\n\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array = array.sort_values([week, year])\r\n\r\n\r\n    // push the existing values into the array with empty\r\n    // objects for missing weeks\r\n    var newArray = [array[0]]\r\n    for( let i=1; i < array.length; i++ ){\r\n\r\n      // add values that cross multiple years\r\n      if( array[i][year] !== array[i-1][year]){\r\n        for( let j = array[i-1][week]+1; j < 53; j++ ){\r\n          newArray.push({[week]: j, [year]: array[i-1][year]})\r\n        }\r\n\r\n        for( let j = 1; j < array[i][week]; j++ ){\r\n          newArray.push({[week]: j, [year]: array[i][year]})\r\n        }\r\n\r\n      }else{\r\n\r\n        // create entries for all missing weeks\r\n        for( let j = array[i-1][week]+1; j < array[i][week]; j++ ){\r\n          newArray.push({[week]: j, [year]: array[i][year]})\r\n        }\r\n      }\r\n\r\n      // the existing entry to the buffer\r\n      newArray.push( array[i] )\r\n    }\r\n\r\n    return new jsonArray(newArray)\r\n  }\r\n\r\n\r\n\r\n  /*************************************************************************************\r\n  *     Arithmetic functions\r\n  ************************************************************************************/\r\n\r\n  /**\r\n   * Adds to the provided date attribtue\r\n   * @param {String} col              date column name\r\n   * @param {Object} [value={days:1}] object containing the value to add to the date\r\n   * @return {jsonArray}            JsonArray with changes\r\n   */\r\n  add( col, value={days:1}, params={} ){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array.row_apply( r => {\r\n      // convert the column to a moment if it is not already\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col])\r\n      r[col].add(value)\r\n      return r\r\n    })\r\n\r\n    return new jsonArray(array)\r\n  }\r\n\r\n  /**\r\n   * Subtracts from the provided date attribtue\r\n   * @param {String} col              date column name\r\n   * @param {Object} [value={days:1}] object containing the value to subtract from the date\r\n   * @return {jsonArray}            JsonArray with changes\r\n   */\r\n  sub( col, value={days:1}, params={} ){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array.row_apply( r => {\r\n      // convert the column to a moment if it is not already\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col])\r\n      r[col].subtract(value)\r\n      return r\r\n    })\r\n\r\n    return new jsonArray(array)\r\n  }\r\n\r\n\r\n  /*************************************************************************************\r\n  *     Formatting Functions\r\n  ************************************************************************************/\r\n\r\n  /**\r\n   * formats the datetime attribute into a string format\r\n   * @param {String} col              date column name\r\n   * @param {String} format           formatting string\r\n   * @param {Object} [params={}]      additional paramters\r\n   * @return {jsonArray}            JsonArray with changes\r\n   */\r\n  format( col, format='YYYY-MM-DD', params={} ){\r\n    var array = this.data.__inplace__(params['inplace'])\r\n\r\n    array.row_apply( r => {\r\n      // convert the column to a moment if it is not already\r\n      if( !(r[col] instanceof moment) ) r[col] = moment(r[col])\r\n      r[col] = r[col].format(format)\r\n      return r\r\n    })\r\n\r\n    return new jsonArray(array)\r\n  }\r\n\r\n  /**\r\n   * formats the datetime attribute into a string format\r\n   * @param {String} col              date column name\r\n   * @param {String} format           formatting string\r\n   * @param {Object} [params={}]      additional paramters\r\n   * @return {jsonArray}            JsonArray with changes\r\n   */\r\n  strftime( col, format='YYYY-MM-DD', params={} ){\r\n    return this.format(col, format, params )\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\n\r\nexport function max(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.max(...array)\r\n}\r\n\r\nexport function min(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return Math.min(...array)\r\n}\r\n\r\nexport function sum(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return array.reduce((a,b) => a + b, 0)\r\n}\r\n\r\nexport function mean(array){\r\n  array = dropna(array)\r\n  if( array.length === 1 ) return array[0]\r\n  return sum(array) / array.length\r\n}\r\n\r\nexport function dropna(array){\r\n  return array.filter(r => (r !== undefined)&(r !== null)&(!Number.isNaN(r)) )\r\n}\r\n","/**\r\n * Matrix statistics\r\n * =================\r\n *\r\n * Basic statistical functions for an Matrix implementation\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 4, 2020\r\n *\r\n */\r\n\r\nimport * as arrayStats from './array'\r\n\r\nexport function max(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.max(data.map(row => row[col]))\r\n}\r\n\r\nexport function min(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.min(data.map(row => row[col]))\r\n}\r\n\r\nexport function sum(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.sum(data.map(row => row[col]))\r\n}\r\n\r\nexport function mean(data, col){\r\n  if( data.length === 1 ) return data[0][col]\r\n  return arrayStats.mean(data.map(row => row[col]))\r\n}\r\n\r\n\r\nexport function forward_diff(data, col, newCol, step=1){\r\n  if( newCol === undefined) newCol = col\r\n\r\n  for( let i=step; i < data.length; i++ ){\r\n    data[i][newCol] = data[i][col] - data[i-step][col]\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n\r\n// computes the rolling average for the provided column\r\nexport function rolling_average(data, col, window=7, type='center' ){\r\n\r\n\r\n  var start, end\r\n  const yValues = data.map(r => r[col])\r\n\r\n  // coompute the rolloing average where the sample of interest is\r\n  // in the middle of the window\r\n  if( type === 'center' ){\r\n\r\n    var pStep, nStep\r\n    if( window % 2  === 0){\r\n      pStep = window/2\r\n      nStep = window/2\r\n\r\n    }else{\r\n      pStep = Math.floor(window/2)\r\n      nStep = Math.floor(window/2) + 1\r\n    }\r\n\r\n\r\n    for( let i=0; i < data.length; i++ ){\r\n\r\n      start = i - nStep + 1\r\n      end = i + pStep + 1\r\n\r\n      // ensure that the statistics do not count out of bounds values\r\n      if (start < 0 ) start = 0\r\n      if (end > data.length ) end = data.length\r\n      // console.log( i, start, end, yValues.slice(start,end))\r\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,end))\r\n    }\r\n  }\r\n\r\n  if( type === 'tailing' ){\r\n\r\n    // // add nulls for the first n samples\r\n    // for( let i=0; i < window-1; i++ ){\r\n    //   data[i][`${col}_avg`] = null\r\n    //\r\n    // }\r\n    //\r\n    // for( let i=window-1; i < data.length; i++ ){\r\n    //   data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(i-window+1,i+1))\r\n    // }\r\n\r\n    // average is not accurate for the first n samples in the rolling average\r\n    for( let i=0; i < data.length; i++ ){\r\n      start = (i-window+1 < 0) ? 0 : i-window+1\r\n      data[i][`${col}_avg`] = arrayStats.mean(yValues.slice(start,i+1))\r\n    }\r\n\r\n  }\r\n\r\n  return data\r\n}\r\n","/**\r\n * JSON Array\r\n * ===============\r\n *\r\n * Extend the Array components to include various functions useful\r\n * for processing an array of JSON objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Feb 11, 2020\r\n */\r\n\r\n\r\n\r\n // import _ from 'lodash'\r\nimport jsonObject from './jsonObject'\r\n\r\nimport Series from './Series'\r\nimport DataTypes from './data_types/dtypes'\r\nimport strFormat from './data_types/format/strFormat'\r\n\r\nimport eChartsComponents from './frameworks/echarts/components'\r\nimport echartsOptions from './frameworks/echarts/options'\r\nimport echartsSeries from './frameworks/echarts/series'\r\nimport datetime from './frameworks/datetime'\r\n\r\nimport toCsv from './frameworks/fileIO/extract'\r\n\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\n\r\nimport * as stats from './statistics/matrix'\r\n\r\n\r\n\r\nexport default class jsonArray extends Array{\r\n\r\n  constructor(array=[], inplace, dtypes) {\r\n\r\n    // var dtypes = dtypes\r\n    if( dtypes === undefined ) dtypes = new DataTypes( array )\r\n    // console.log( dtypes )\r\n\r\n    // add an index column when the array is not empty\r\n    if( (array.length > 0)&(inplace!==true) ){\r\n\r\n      array = JSON.parse(JSON.stringify(array))\r\n\r\n      // when the Array is passed in as an array of arrays, covert\r\n      // it to an array of objects\r\n      if( array[0].hasOwnProperty('length') ){\r\n        for( var i=0; i < array.length; i++ ){\r\n          array[i] = {...array[i]}\r\n        }\r\n      }\r\n\r\n      const columns = Object.keys(array[0])\r\n\r\n      // create an internal index attribute when one doesn't exist\r\n      if( !columns.includes('__index__') ){\r\n        for( i=0; i < array.length; i++ ){\r\n          array[i]['__index__'] = i\r\n        }\r\n      }\r\n\r\n\r\n      // initialize the array based on the data type of the uncloned DataFrame\r\n      array = dtypes.init(array)\r\n    }\r\n\r\n    super()\r\n\r\n    // to avoid max recursion depth, we push each row separately\r\n    array.map( row => this.push(row))\r\n\r\n    // console.log( dtypes )\r\n    // dictionary containing column data types\r\n    this.dtypes = dtypes\r\n    this.indexName = '__index__'\r\n  }\r\n\r\n\r\n  // returns all columns in the jsonArray\r\n  get columns(){\r\n    var columns = []\r\n\r\n    var max_length = this.length\r\n    if( max_length > 50 ) max_length = 50\r\n\r\n    for( var i=0; i < max_length; i++ ){\r\n      columns = columns.concat(Object.keys(this[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => ![this.indexName].includes(x)))]\r\n  }\r\n\r\n  /**\r\n   * Replace the column names with those provided by the column array\r\n   * @param  {Array} columns array of column names\r\n   * @return {Array}         jsonArray with new column names\r\n   */\r\n  set columns( columns ){\r\n      const keys = this.columns\r\n\r\n      // define a mapping between the current and new column names\r\n      var mapping = {}\r\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\r\n        mapping[keys[i]] =columns[i]\r\n      }\r\n\r\n      // return a json array with the new mapping applied\r\n      return this.rename( mapping, {inplace: true} )\r\n  }\r\n\r\n  // resets the index value\r\n  reset_index(props={}){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(props['inplace'])\r\n\r\n    // extract the index name and rename when the default\r\n    var indexName = this.indexName\r\n    if( indexName === '__index__') indexName = 'index'\r\n\r\n    for( var i=0; i < array.length; i++ ){\r\n      array[i][indexName] = array[i][this.indexName]\r\n      array[i]['__index__'] = i\r\n    }\r\n\r\n    array.indexName = '__index__'\r\n\r\n    return array\r\n  }\r\n\r\n\r\n  // return all values for the specified column\r\n  values( col ){\r\n    return [...this].map(row => row[col])\r\n  }\r\n\r\n  /**\r\n   * Returns an array of index values\r\n   * @return {Array} Array of index values\r\n   */\r\n  get index(){\r\n    return [...this].map(row => row[this.indexName])\r\n  }\r\n\r\n  /**\r\n   * Returns a Series containing the data for the specified column\r\n   * @param  {string} col column name\r\n   * @return {Series}     Series containing the column data\r\n   */\r\n  col( col ){\r\n    const index = this.index\r\n    const value = [...this].map(row => row[col])\r\n    return new Series({\r\n      index: index,\r\n      value: value,\r\n      dtype: this.dtypes[col],\r\n      name: col\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Combines the column series with the local DataFrame\r\n   * @param {Series} series Series containing data for a single column\r\n   */\r\n  set_col( series, params={} ){\r\n    // duplicate the jsonArray\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // retrieve index and convert to string type to match the\r\n    // index from the Series\r\n    var index = this.index.map( row => row.toString() )\r\n\r\n    for (var [key, value] of Object.entries(series.data)) {\r\n      var id = index.indexOf(key)\r\n\r\n      // extend the DataFrame with a new row containing the\r\n      // sample with an unmatched id\r\n      if( id === -1 ){\r\n        array.push({\r\n          [series.name]: value,\r\n          __index__: key\r\n        })\r\n        continue\r\n      }\r\n\r\n      // overwrite existing or create new entries for the value\r\n      array[id][series.name] = value\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /// returns a jsonArray with the specified columns\r\n  selectColumns( columns ){\r\n    var subset = []\r\n    this.forEach( r => {\r\n      var row = {}\r\n      columns.forEach(s => row[s] = r[s])\r\n      subset.push(row)\r\n    })\r\n    return new jsonArray(subset)\r\n  }\r\n\r\n  /**\r\n   * Standard js Slice that returns the data as a jsonArrayDocs\r\n   * @param  {Integer} first       first index\r\n   * @param  {Integer} last        Last index\r\n   * @param  {Object} [params={}] Additional Parameters\r\n   * @return {Array}             Sliced jsonArray\r\n   */\r\n  slice(first, last, params={} ){\r\n    var array = [...this].slice(first, last)\r\n    return new jsonArray(array)\r\n  }\r\n\r\n  // duplication of conact but with pandas syntax\r\n  append( df ){\r\n    return this.concat(df)\r\n  }\r\n\r\n  /**\r\n   * appends the existing DataFrame with the provided DataFrame\r\n   * @param  {Array} df jsonArray\r\n   * @return {Array}    jsonArray with appended bojects\r\n   */\r\n  concat( df ){\r\n    return new jsonArray([...this].concat(df))\r\n  }\r\n\r\n\r\n  /**\r\n   * inserts an object into the array based on the specified\r\n   * position\r\n   * @param  {Object} obj           object to insert\r\n   * @param  {Number} [position=0] array position\r\n   * @param  {Object} [params={}]  parameters\r\n   * @return {jsonArray}           jsonArray with the added object\r\n   */\r\n  insert( obj, position=0, params={} ){\r\n    // duplicate the jsonArray\r\n    var array = [...this]\r\n\r\n    // insert at the beginning of the array\r\n    if( position === 0 ){\r\n      array.unshift( obj)\r\n      return new jsonArray(array)\r\n    }\r\n\r\n    // insert at the end of the array\r\n    if( position >= array.length ){\r\n      array.push( obj)\r\n      return new jsonArray(array)\r\n    }\r\n\r\n    // insert in the middle of the array\r\n    const pos1 = array.slice(0, position)\r\n    const pos2 = array.slice(position, array.length)\r\n\r\n    return new jsonArray( pos1.concat([obj]).concat(pos2) )\r\n  }\r\n\r\n\r\n  /**\r\n   * Applies a given function to a column and returns a DataFrame\r\n   * with the results. The results can be written inplace or a nedw\r\n   * column created when specified as a parameter\r\n   * @param  {string} col     column name\r\n   * @param  {function} func  function to apply to the column\r\n   * @param  {string} newCol  when provided a new column is produced\r\n   * @return {[type]}      [description]\r\n   */\r\n  apply( col, func, newCol ){\r\n\r\n    if( newCol === undefined ) newCol = col\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][newCol] = func(this[i][col])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * cretes a new column by applying the provided function to each row\r\n   * @param  {string} col     name of the column to create\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   create_column( col, func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][col] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * applies the provided function to each row\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n   row_apply( func){\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i] = func(this[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n\r\n  // returns the values of the data at the specified index\r\n  loc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( typeof idx == \"object\" ){\r\n      return  new jsonArray([...this].filter(row => idx.includes(row.__index__) ))\r\n    }\r\n\r\n    // return the row after it has been converted to a series\r\n    if( props.Series === true ){\r\n      const index = this.columns\r\n      const value = Object.values([...this].filter(row => row.__index__ === idx))\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n\r\n      return [...this].filter(row => row.__index__ === idx )\r\n  }\r\n\r\n  // return the values of the data at the relative row number\r\n  iloc( idx, props={Series:true} ){\r\n\r\n    // return a DataFrame when a list of index are proived\r\n    if( Array.isArray(idx) ){\r\n      var array = []\r\n      for( var i=0; i < idx.length; i++ ){\r\n        array.push( this[idx[i]] )\r\n      }\r\n      return new jsonArray(array)\r\n    }\r\n\r\n    if( props.Series === true ){\r\n      const index = Object.keys(this[idx])\r\n      const value = Object.values(this[idx])\r\n      return new Series({index: index, value: value, dtypes: this.dtypes})\r\n    }\r\n\r\n    return this[idx]\r\n  }\r\n\r\n  /**\r\n   * overwrites the local index column with the provided column\r\n   * @param {String} col Column name\r\n   */\r\n  set_index( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the current index\r\n    for( var i=0; i < array.length; i ++ ){\r\n      delete array[i][array.indexName]\r\n    }\r\n\r\n    // replace the index name with the given column\r\n    array.indexName = col\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Returns a single column as a Series Object\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] additional parameters\r\n   * @return {[type]}             [description]\r\n   */\r\n  toSeries( col, params={}  ){\r\n    return new Series({DataFrame: this, name: col})\r\n  }\r\n\r\n  /**\r\n   * duplicate of pandas count values with the ability to pass in a\r\n   * single or multiple columns\r\n   * @type {strFormat}\r\n   */\r\n  value_counts( columns, params={} ){\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // ensure that the columns are provided as an array\r\n    if(typeof columns === 'string') columns = [columns]\r\n\r\n    // initialize the pareto array\r\n    var pareto = {}\r\n    columns.forEach(att => pareto[att] ={})\r\n\r\n    // loop through each value and count the occurances\r\n    array.forEach( row => {\r\n      columns.forEach( att => {\r\n\r\n        // create a buffer for the split attribute when one does not exist\r\n        if( !Object.keys(pareto[att]).includes(row[att]) ){\r\n          pareto[att][row[att]] = 0\r\n        }\r\n\r\n        // increment the pareto value\r\n        pareto[att][row[att]] = pareto[att][row[att]] + 1\r\n\r\n      })\r\n    })\r\n\r\n    // convert the pareto(s) to series\r\n    var  paretoSeries = {}\r\n    for (const [key, value] of Object.entries(pareto)) {\r\n      paretoSeries[key] = new Series({object:value, name:key})\r\n    }\r\n\r\n    return paretoSeries\r\n\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Converts the contents of the jsonArray into a formatted string\r\n   * where the columns are equally spaced apart and the values are\r\n   * formatted based on the internal data type\r\n   * @return {String} jsonArray contents formatted as a string\r\n   */\r\n  to_string(){\r\n    const format = new strFormat(this)\r\n    return format.table\r\n  }\r\n\r\n  /**\r\n   * returns the strFormat class used to format matrix components into\r\n   * strings such as single columns, rows, values, etc.\r\n   * @return {class} strFormat class with the current jsonArray contents\r\n   */\r\n  get strFormat(){\r\n    return new strFormat(this)\r\n  }\r\n\r\n  // sorts the DataFrame based on the values in the index array\r\n  sort_index( indexArray, props={} ){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(props['inplace'])\r\n\r\n    var temp = array.create_column('__temp__', r => indexArray.indexOf(r[array.indexName]) )\r\n\r\n    temp = temp.sort_values('__temp__')\r\n\r\n    return temp.drop_columns(['__temp__'], {inplace:true})\r\n\r\n  }\r\n\r\n\r\n  // sorts the json array by the provided column\r\n  sort_values( col, ascending=true){\r\n\r\n    var array\r\n\r\n    // sort the jsonArray based on the column array in order of occurance\r\n    if( col instanceof Array ){\r\n      for( let i=0; i < col.length; i++ ){\r\n        array = this.sort_values(col[i])\r\n      }\r\n      return new jsonArray( array )\r\n    }\r\n\r\n    //sort the table based on the ascending flag\r\n    if( ascending === true ){\r\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\r\n\r\n    }else{\r\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Merge two DataFrames together\r\n   * @param  {Array} json_array           DataFrame to be merged\r\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\r\n   * @param  {string} on                   index (col) to use for merging\r\n   * @return {Array}                      DataFrame containing the merged columns\r\n   */\r\n  merge( json_array, params={how:'left', on:'__index__'}  ){\r\n\r\n    var array = []\r\n    var df1, df2, index, a, b\r\n    // var primary_col, secondary_col, value\r\n\r\n    var col_left, col_right\r\n\r\n    // determine the columns to use for merging the left/right\r\n    // DataFrames based on the specified parameters\r\n    if( params.on !== undefined ){\r\n      col_left = params.on\r\n      col_right = params.on\r\n    }\r\n    if( params.on_right !== undefined ) col_right = params.on_right\r\n    if( params.on_left !== undefined ) col_left = params.on_left\r\n\r\n\r\n    // determine the merging criteria\r\n    switch( params.how ){\r\n      case 'left':\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n\r\n      case 'right':\r\n        df1 = [...json_array]\r\n        df2 = [...this]\r\n        // primary_col = col_right\r\n        // secondary_col = col_left\r\n        index = json_array.unique(col_right)\r\n        break;\r\n\r\n      // default to merge on left\r\n      default:\r\n        df1 = [...this]\r\n        df2 = [...json_array]\r\n        // primary_col = col_left\r\n        // secondary_col = col_right\r\n        index = this.unique(col_left)\r\n        break;\r\n    }\r\n\r\n    // var lookup = {}\r\n    // for( a = 0; a < df2.length; a++ ){\r\n    //   value = df2[a][secondary_col]\r\n    //\r\n    //   const keys = Object.keys(lookup)\r\n    //   if( keys.includes(value) ){\r\n    //     lookup[value].push( df2[a] )\r\n    //   }else{\r\n    //     lookup[value] = [df2[a]]\r\n    //   }\r\n    // }\r\n    //\r\n    // // pull the rows corresponding to the provided index value\r\n    // for( var a=0; a < df1.length; a++ ){\r\n    //   value = df1[a][secondary_col]\r\n    //\r\n    //   const lookupVal = lookup[value ]\r\n    //\r\n    //   // merge rows with similar index values (intersection). Create\r\n    //   // multiple rows when duplicate index values are present\r\n    //   if( lookupVal.length > 0 ){\r\n    //     for( b=0; b < lookupVal.length; b++ ){\r\n    //       array.push({...lookupVal[b], ...df1[a]})\r\n    //     }\r\n    //   }\r\n    //\r\n    //   // add the rows that have no overlap\r\n    //   if( lookupVal.length === 0  ){\r\n    //     array.push(df1[a])\r\n    //   }\r\n    //\r\n    // }\r\n\r\n    // pull the rows corresponding to the provided index value\r\n    for( var i=0; i < index.length; i++ ){\r\n      const value = index[i]\r\n      const df1_rows = df1.filter(r => r[col_left] === value)\r\n      const df2_rows = df2.filter(r => r[col_right] === value)\r\n\r\n      // merge rows with similar index values (intersection). Create\r\n      // multiple rows when duplicate index values are present\r\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n          for( b=0; b < df2_rows.length; b++ ){\r\n            array.push({...df2_rows[b], ...df1_rows[a]})\r\n          }\r\n        }\r\n      }\r\n\r\n      // add the rows that have no overlap\r\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\r\n        for( a=0; a < df1_rows.length; a++ ){\r\n            array.push(df1_rows[a])\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    return new jsonArray( array, true )\r\n\r\n  }\r\n\r\n  /**\r\n   * Replaces undefined data with a given value. The values\r\n   * can be assigned globally or by column\r\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\r\n   *                              Values can be assigne by column, by providing a value\r\n   *                              per colum in the parameter dictionary\r\n   * @return {Array}             DataFrame with missing values replaed\r\n   */\r\n  fillna( params={} ){\r\n\r\n    // duplicate the array to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    var i, j, columns, col, val\r\n\r\n    // fill missing values with unique values per column\r\n    // This assumes that the input is an object with a\r\n    // value for each column name\r\n    if( typeof params === 'object'){\r\n      columns = Object.keys(params)\r\n\r\n      // nothing to do when no inputs are provided\r\n      if( columns.length === 0) return array\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          val = params[col]\r\n          if( array[i][col] === undefined ) array[i][col] = val\r\n          if( array[i][col] === null ) array[i][col] = val\r\n          if( array[i][col] === '' ) array[i][col] = val\r\n          // if( isNaN(array[i][col]) ) array[i][col] = val\r\n        }\r\n      }\r\n\r\n    }else{\r\n\r\n      // fill all missing values with the same value\r\n      columns = array.columns\r\n\r\n      for( i=0; i < array.length; i ++ ){\r\n        for( j=0; j < columns.length; j++ ){\r\n          col = columns[j]\r\n          if( array[i][col] === undefined ) array[i][col] = params\r\n          if( array[i][col] === null ) array[i][col] = params\r\n          // if( isNaN(array[i][col]) ) array[i][col] = params\r\n        }\r\n      }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n\r\n\r\n\r\n  // filters the json array based on the column and the provided value.\r\n  // The value can be either a single variable or an array\r\n  filter_column( col, value ){\r\n\r\n    if( Array.isArray(value) ){\r\n      return new jsonArray(\r\n        [...this].filter(row => value.includes(row[col])),\r\n        false,\r\n        this.dtypes\r\n       )\r\n    }else{\r\n      return new jsonArray(\r\n        [...this].filter(row => row[col] === value ),\r\n        false,\r\n        this.dtypes\r\n      )\r\n    }\r\n  }\r\n\r\n  concat( array ){ return new jsonArray( [...this].concat(array)) }\r\n\r\n  filter( func ){\r\n    return new jsonArray( [...this].filter(func), false, this.dtypes )\r\n  }\r\n\r\n  map( func ){\r\n    return [...this].map(func)\r\n  }\r\n\r\n  groupby( col ){\r\n    var dtypes = this.dtypes\r\n    dtypes['json_obj'] = 'jsonArray'\r\n\r\n    return new jsonArray( this.__groupby__( this, col ), true, dtypes )\r\n  }\r\n\r\n\r\n  __groupby__( json_obj, atts, keys ){\r\n\r\n    // append the keys with the json object\r\n    if( atts.length === 0 ){\r\n      keys['json_obj'] = new jsonArray(json_obj)\r\n      keys['count'] = json_obj.length\r\n      return keys\r\n    }\r\n\r\n    // initial conditions for keys\r\n    if( keys === undefined ){ keys = {} }\r\n\r\n    var results = []\r\n\r\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\r\n    const values = json_obj.unique(atts[0], true)\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      const group = json_obj.filter( row => row[atts[0]] === val )\r\n\r\n      // deep copy the keys and append with the current key\r\n      var temp_keys = Object.assign({}, keys)\r\n      temp_keys[atts[0]] = values[i]\r\n\r\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  count_values( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var counts = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      const val = values[i]\r\n      if( !unique.includes(val) ){\r\n        unique.push(val)\r\n        counts[val] = 0\r\n      }\r\n      counts[val]++\r\n    }\r\n\r\n    // map the unique object count back to a flat object\r\n    var buffer = []\r\n    for( i=0; i < unique.length; i++ ){\r\n      const split_val = unique[i].split(',')\r\n\r\n      //\r\n      const obj = {count: counts[unique[i]]}\r\n      for( var j=0; j < split_val.length; j++ ){\r\n        obj[columns[j]] = split_val[j]\r\n      }\r\n\r\n      buffer.push( obj )\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n\r\n\r\n  // Drops duplicates based on the specified column names. Only\r\n  // the first occurance is kept. Other duplicate management must\r\n  // be implemented\r\n  drop_duplicates( columns=[]){\r\n\r\n    if( columns.length === 0 ) columns = this.columns\r\n\r\n    const values = this.map(r => columns.map(s => r[s]).toString())\r\n\r\n    // create a buffer to hold the unique values\r\n    // and the rows corresponding to the unique values\r\n    var unique = []\r\n    var buffer = []\r\n\r\n    // track the unique values and only add the row to\r\n    // the buffer when it's value is unique\r\n    for( var i=0; i < values.length; i++ ){\r\n      if( !unique.includes(values[i]) ){\r\n          unique.push( values[i] )\r\n          buffer.push( this[i] )\r\n      }\r\n    }\r\n\r\n    return new jsonArray( buffer, true  )\r\n  }\r\n\r\n\r\n  /**\r\n   * Transpose Alias\r\n   * @param  {Object} [props={}] user provided parameters\r\n   * @return {Object}            jsonArray containing the tranposed DataFrame\r\n   */\r\n  T(props={}){\r\n    return this.transpose(props)\r\n  }\r\n\r\n\r\n  /**\r\n   * Tranposes DataFrame i.e. converts the columns to rows and vice-versa\r\n   * @param  {Object} [props={}] user provided parameters\r\n   * @return {Object}            jsonArray containing the tranposed DataFrame\r\n   */\r\n  transpose(props={}){\r\n\r\n    const columns = this.columns\r\n    const index = this.index\r\n\r\n    // loop through each column and row and store the\r\n    // transposed results into a dictionary\r\n    var temp = {}\r\n    for( let i=0; i < this.length; i++){\r\n      columns.forEach(col => {\r\n        const id = index[i]\r\n        const value = this[i][col]\r\n\r\n        if( col !== this.indexName ){\r\n          if( temp[col] === undefined ) temp[col] = {'__index__': col}\r\n          temp[col][id] = value\r\n        }\r\n\r\n      })\r\n    }\r\n\r\n    // convert the object with transposed data into a jsonArray\r\n    var array = []\r\n    Object.values(temp).forEach(row => array.push(row))\r\n\r\n    return new jsonArray( array )\r\n\r\n  }\r\n\r\n\r\n  pivot( columns ){\r\n\r\n    var pivot_table = []\r\n\r\n    if( columns === undefined ) columns = this.columns\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {column: columns[i]}\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < this.length; j++ ){\r\n        temp[j] = this[j][columns[i]]\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n\r\n  // converts a matrix into a flatten table (opposite of pivot table)\r\n  flatten( id_att = '__index__' ){\r\n\r\n    // extract a list of column names\r\n    const columns = this.columns\r\n\r\n    var table = []\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      const row = this[i]\r\n\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n\r\n        // avoid a duplicate entry as the id attribute\r\n        if( col === id_att ) continue\r\n\r\n        table.push({\r\n          column: col,\r\n          row: row[id_att],\r\n          value:  row[col]\r\n        })\r\n      }\r\n    }\r\n\r\n    return new jsonArray( table, true )\r\n\r\n  }\r\n\r\n  // creates a pivot table based on the specified row and column.\r\n  // The summary type is used to compute the value of the pivot.\r\n  pivot_table( row, column, summaryType='count', value=undefined ){\r\n\r\n    var pivot_table = []\r\n\r\n    const row_val = this.unique( row )\r\n    const column_val = this.unique( column )\r\n\r\n\r\n    for( var i=0; i < row_val.length; i++ ){\r\n      // initialize the row to contain the column name\r\n      var temp = {row: row_val[i]}\r\n\r\n      const rval = row_val[i]\r\n      // const by_row = this.filter( r => r[row] === rval )\r\n      const by_row = [...this].filter( r => r[row] === rval )\r\n\r\n      // add the column value for each row\r\n      for( var j=0; j < column_val.length; j++ ){\r\n\r\n        const cval = column_val[j]\r\n        // const by_col = by_row.filter( r => r[column] === cval )\r\n        const by_col = [...by_row].filter( r => r[column] === cval )\r\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\r\n        // console.log( by_col )\r\n\r\n        var temp_json\r\n        switch( summaryType ){\r\n          // returns the number of rows for the current split\r\n          case 'count':\r\n            temp[column_val[j]] = by_col.length\r\n            break;\r\n\r\n          // returns the number of unique values for the current split\r\n          case 'unique':\r\n            // set defaults for missing parameter values\r\n            if( value === undefined ) value = '__index__'\r\n\r\n            temp_json = new jsonArray( by_col )\r\n            temp[column_val[j]] = temp_json.unique( value ).length\r\n            break;\r\n\r\n          case 'sum':\r\n            temp[column_val[j]] = stats.sum( by_col, value)\r\n            break;\r\n\r\n          case 'mean':\r\n            temp[column_val[j]] = stats.mean( by_col, value)\r\n            break;\r\n\r\n          case 'func':\r\n            temp_json = new jsonArray( by_col )\r\n            temp[column_val[j]] = value( temp_json )\r\n            break;\r\n\r\n          default:\r\n            temp[column_val[j]] = by_col.length\r\n            break\r\n        }\r\n\r\n      }\r\n\r\n      // add the results to the final pivot table\r\n      pivot_table.push( temp )\r\n    }\r\n\r\n    return new jsonArray(pivot_table, true )\r\n  }\r\n\r\n  /**\r\n   * convert the column data type based on the mapping\r\n   * @param  {Object} [columns={}] object containing the mapping between columns and data type\r\n   * @param  {Object} [params={}]  parameter object\r\n   * @return {Array}              jsonArray containing the mapped columns\r\n   */\r\n  astype( columns={}, params={} ){\r\n\r\n    var inplace = true\r\n    if( params.inplace !== undefined ) inplace = params.inplace\r\n\r\n    var array = this.__inplace__(inplace)\r\n\r\n    // convert all columns based on the specified data types\r\n    const col_names = Object.keys(columns)\r\n    for( var i=0; i < col_names.length; i++ ){\r\n      const col = col_names[i]\r\n      array = array.dtypes.convert(array, col, columns[col], params)\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  // converts the specified column into a date string\r\n  strftime( col, format='YYYY-MM-DD', params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'strftime', params)\r\n  }\r\n\r\n  // converts the specified column into a\r\n  strptime( col, params={} ){\r\n    var array = this.__inplace__(params['inplace'])\r\n    return array.dtypes.convert(array, col, 'datetime', params)\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a new column by merging the content from the columns\r\n   * specified in the columns attribute\r\n   * @param  {array} columns  array of column names\r\n   * @param  {String} col_name Name of the resulting column\r\n   * @param  {String} [sep='   ']            string delimiter\r\n   * @return {OBJECT}          jsonArray with the new column\r\n   */\r\n  combine( columns, col_name, sep=' ', params={} ){\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      // seed the value with the value from the first column\r\n      var temp = this[i][columns[0]]\r\n\r\n      for( var j=1; j < columns.length; j++ ){\r\n        temp = temp + sep + this[i][columns[j]]\r\n      }\r\n\r\n      array[i][col_name] = temp\r\n    }\r\n\r\n    array.dtypes[col_name] = 'string'\r\n    return array\r\n  }\r\n\r\n  combine_columns( col1, col2, col_name, sep=' ' ){\r\n    // creates a new column by merging the content of col 1 and 2 to\r\n    // form a new column\r\n    console.log( 'this function is deprecated: see combine')\r\n    return this.combine([col1, col2], col_name, sep )\r\n  }\r\n\r\n  to_jsonObject( key, value ){\r\n    // Converts the jsonArray into a jsonObject with following\r\n    // columns for the key and values\r\n\r\n    var object = {}\r\n    for( var i=0; i < this.length; i++ ){\r\n      object[this[i][key]] = this[i][value]\r\n    }\r\n\r\n    return new jsonObject( object )\r\n  }\r\n\r\n  /**\r\n   * creates a single column with the hex color string based\r\n   * on the RGB color values taken from separate columns\r\n   * @param  {string} rcol red color column\r\n   * @param  {string} gcol green color column\r\n   * @param  {string} bcol blue color column\r\n   * @return {[type]}      [description]\r\n   */\r\n  to_rgb( rcol, gcol, bcol, colorCol='rgb'){\r\n    const toHex = require('./frameworks/colors/Colors').rgbToHex\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i][colorCol] = toHex( this[i][rcol], this[i][gcol], this[i][bcol])\r\n    }\r\n\r\n    this.dtypes[colorCol] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * converts the column value into a color\r\n   * @param  {string} col color column\r\n   * @param  {string} colorType color label\r\n   */\r\n  to_color( col, colorType='entropy_8bit'){\r\n    const get_color = require('./frameworks/colors/Colors').get_color\r\n\r\n    for( var i=0; i < this.length; i++ ){\r\n      this[i]['color'] = get_color( this[i][col], colorType)\r\n    }\r\n\r\n    this.dtypes['color'] = 'hexcolor'\r\n    return this\r\n  }\r\n\r\n\r\n  unique( col, ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    // filter the undefined values from unique\r\n    var values = [...this]\r\n      .map(row => row[col])\r\n      .filter(row => row !== undefined)\r\n\r\n    // remove duplicates by forcing to a set\r\n    var unique_values = [...new Set(values)]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtypes[col] === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        switch( typeof unique_values[0] ){\r\n          case \"string\":\r\n            return unique_values.sort()\r\n\r\n          case \"boolean\":\r\n            return unique_values.sort()\r\n\r\n          default :\r\n            try{\r\n              unique_values = unique_values.map( x => +x)\r\n              unique_values = unique_values.sort(function(a,b){return a - b})\r\n            }catch{\r\n              // default to the standard sort\r\n              unique_values.sort()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Applies a threshold to the specified column\r\n   * @param  {function} func     function used to partition dataset\r\n   * @param  {string} res_col   column name containing the results\r\n   * @return {Array}            jsonArray containing res_col\r\n   */\r\n  label( func, params={} ){\r\n\r\n    const param_keys = Object.keys(params)\r\n\r\n    // set defaults for missing parameter values\r\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\r\n    if( !param_keys.includes('value') ) params['value'] = true\r\n    if( !param_keys.includes('default') ) params['default'] = false\r\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\r\n\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n\r\n    // identify all samples identified by the rule\r\n    const sample_index = array.filter( func ).map( row => row.__index__ )\r\n\r\n    // create a boolean label, where parts in the sample set are true\r\n    for( var i=0; i < array.length; i ++ ){\r\n\r\n      // extract a list of columns name for the given row\r\n      const columns = Object.keys( array[i] )\r\n\r\n      // the value is true when it is included in the sample set\r\n      if( sample_index.includes( array[i].__index__ ) ){\r\n        array[i][params['output_col']] = params['value']\r\n        continue\r\n      }\r\n\r\n      // set the default value when no value exists\r\n      if( !columns.includes(params['output_col']) ){\r\n        array[i][params['output_col']] = params['default']\r\n        continue\r\n      }\r\n\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Copies the content from one column to a new column. This is\r\n   * non destructive, so if the column already exists, only the\r\n   * missing data will be copied over\r\n   * @param  {String} col     original column name\r\n   * @param  {String} new_col new column name\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  copy_column( col, new_col, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n      const columns = Object.keys(array[i] )\r\n\r\n      if(!columns.includes( new_col) ){\r\n        array[i][new_col] = array[i][col]\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns a DataFrame containing only the specified column\r\n   * and the index\r\n   * @param  {array} columns array of column names\r\n   * @return {array}         json array containing the specified columns\r\n   */\r\n  select_columns( columns ){\r\n\r\n    var array = []\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < this.length; i++ ){\r\n\r\n      var row = {__index__: this[i].__index__}\r\n      // copy the specified columns for each row\r\n      for( var j=0; j < columns.length; j++ ){\r\n        const col = columns[j]\r\n        row[col] = this[i][col]\r\n      }\r\n\r\n      array.push( row )\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n  /**\r\n   * Drops columns from the DataFrame\r\n   * @param  {String or Array} columns String or Array of column names\r\n   * @return {OBJECT}         JsonArray without the specified columns\r\n   */\r\n  drop_columns( columns, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      // delete the specified column when of string type\r\n      if( typeof columns === 'string' ){\r\n        delete array[columns]\r\n\r\n      // when a list is provided, delete all columns in the string\r\n      }else{\r\n\r\n        for( var j=0; j < columns.length; j++ ){\r\n          delete array[i][columns[j]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * renames columns\r\n   * @param  {object} mapping object containing the existing column name and new column name\r\n   * @return {object}         json array with the new column naming\r\n   */\r\n  rename( mapping, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const columns = Object.keys( mapping )\r\n\r\n    // rename the specified columns\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      const ex_columns = Object.keys( array[i] )\r\n\r\n      // create a new column based on the mapping and delete\r\n      // the existing one (taht was replaced)\r\n      for( var j=0; j < columns.length; j++ ){\r\n        // only replace the column when data exists for that column\r\n        if( ex_columns.includes(columns[j]) ){\r\n          const new_col = mapping[columns[j]]\r\n          array[i][new_col] = array[i][columns[j]]\r\n\r\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\r\n          delete array[i][columns[j]]\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n  /**\r\n   * replaces the values in the specified column with the given value\r\n   * based on the mapping\r\n   * @param  {String} col     original column name\r\n   * @param  {Object} mapping Object containing the value mapping\r\n   * @return {Object}         jsonArray with the new column added\r\n   */\r\n  replace( col, mapping={}, params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    const newCol = (params.newCol === undefined) ? col : params.newCol\r\n\r\n    const values = Object.keys( mapping )\r\n\r\n    // delete the specified column(s) from the DataFrame\r\n    for( var i = 0; i < array.length; i++ ){\r\n\r\n      // do not perform mapping when no data nor the mapping exists\r\n      if(array[i] === undefined ) continue\r\n\r\n      // copy the original content when there's not mapping\r\n      if(!values.includes(array[i][col])){\r\n        array[i][newCol] = array[i][col]\r\n        continue\r\n      }\r\n\r\n      array[i][newCol] = mapping[array[i][col]]\r\n\r\n    }\r\n\r\n    return new jsonArray( array )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the data object. When enable is true, the original\r\n   * jsonArray is returned so the values are modified directly. Otherwise\r\n   * the jsonArray is cloned to avoid mutation of the original object\r\n   *\r\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\r\n   * @return {Object}             current jsonArray content\r\n   */\r\n  __inplace__( enable=false ){\r\n\r\n    // clone the local copy to avoid mutation when inplace is disabled\r\n    if( enable ) return this\r\n\r\n    return new jsonArray( this )\r\n  }\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  max(col){ return stats.max(this, col)  }\r\n  min(col){ return stats.min(this, col)  }\r\n  sum(col){ return stats.sum(this, col)  }\r\n  mean(col){ return stats.mean(this, col)  }\r\n  forward_diff(col, newCol, step=1){ return stats.forward_diff(this, col, newCol, step)  }\r\n  rolling_average(col, window=1, avgType){ return stats.rolling_average(this, col, window, avgType)  }\r\n  stats(){ return stats  }\r\n\r\n\r\n\r\n  toCsv(filename){ toCsv(this, filename ) }\r\n  // max(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.max(...this.map(row => row[col])) }\r\n  // min(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return Math.min(...this.map(row => row[col])) }\r\n  // sum(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.map(row => row[col]).reduce((a,b) => a + b, 0) }\r\n  // mean(col){\r\n  //   if( this.length === 1 ) return this[0][col]\r\n  //   return this.sum(col) / this.length }\r\n\r\n  /********************************************************************************\r\n  *  ECharts json array interface\r\n  *  ===============================\r\n  *  Interface that returns echarts series objects for plotting\r\n  ********************************************************************************/\r\n\r\n\r\n  get dt(){ return new datetime( this ) }\r\n\r\n  // /**\r\n  //  * echarts line plot data formatter\r\n  //  * @param  {stringi} col  column name\r\n  //  * @return {object}      echarts data series object\r\n  //  */\r\n  get echartsOptions( ){ return new echartsOptions( this ) }\r\n  get echartsSeries( ){ return new echartsSeries( this ) }\r\n\r\n  get echarts( ){ return new eChartsComponents( this ) }\r\n\r\n  get react(){ return new ReactComponents(this) }\r\n\r\n  get fileIO(){\r\n    const fromFileLibrary = require('./frameworks/fileIO/fromFile').default\r\n    return new fromFileLibrary(this)\r\n  }\r\n}\r\n","/**\r\n * JSON Object\r\n * ===============\r\n *\r\n * Class that aggregates common functions performed\r\n * on json objects\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 29, 2020\r\n */\r\n\r\n\r\nimport DataTypes from './data_types/dtypes';\r\n\r\nimport ReactComponents from './frameworks/react/ReactComponents'\r\nimport eChartsComponents from './frameworks/echarts/components'\r\nimport echartsOptions from './frameworks/echarts/options'\r\nimport echartsSeries from './frameworks/echarts/series'\r\n\r\nimport jsonArray from './jsonArray'\r\n\r\n\r\n\r\nexport default class Series extends Array {\r\n\r\n  constructor(props={}) {\r\n    super()\r\n\r\n    const keys = Object.keys(props)\r\n\r\n    var array = []\r\n\r\n\r\n    this.name = props.name\r\n    if( this.name === undefined ) this.name = 'value'\r\n\r\n\r\n    if( keys.includes('index') & keys.includes('value') ){\r\n      for( var i=0; i < props.value.length; i++ ){\r\n        array.push( {__index__: props.index[i],  value: props.value[i]} )\r\n      }\r\n    }\r\n\r\n    if( keys.includes('object') ){\r\n      const keys = Object.keys(props.object)\r\n      for( i=0; i < keys.length; i++ ){\r\n        array.push( {__index__: keys[i],  value: props.object[keys[i]]} )\r\n      }\r\n    }\r\n\r\n    if( keys.includes('Series') ){\r\n      props.Series.forEach(obj => {\r\n        this.push( {__index__: obj.__index__,  value: obj['value']} )\r\n      })\r\n    }\r\n\r\n    if( keys.includes('DataFrame') ){\r\n      props.DataFrame.forEach(obj => {\r\n        this.push( {__index__: obj.__index__,  value: obj[props.name]} )\r\n      })\r\n      this.name = props.name\r\n    }\r\n\r\n    // allow for mixed datatype, referenced by the keys.\r\n    // This is only applicable when the data types are provided.\r\n    // Otherwise, it is assumed that the data is from a single\r\n    // data type which will be parsed out\r\n    if( props.dtype !== undefined ){\r\n      this.dtype = props.dtype\r\n      this.dtype = 'mixed'\r\n\r\n    }else{\r\n      this.dtype = props.dtype\r\n\r\n      // parse the data type from the data when one is not provided\r\n      if( this.dtype === undefined ){\r\n        this.dtype = new DataTypes(array)\r\n        this.dtype.init(array)\r\n      }\r\n\r\n    }\r\n\r\n    array.map( row => this.push(row))\r\n\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * returns an array of index values in order\r\n   * @return {Array} index values in order\r\n   */\r\n  get index(){\r\n    return this.map(r => r.__index__)\r\n  }\r\n\r\n  /**\r\n   * returns an array of values in order\r\n   * @return {Array} values in order\r\n   */\r\n  get values(){\r\n    return this.map(r => r['value'])\r\n  }\r\n\r\n  /**\r\n   * Overwrites the index with the provided array\r\n   * @param  {Array} values Array of index values\r\n   */\r\n  set index( values ){\r\n    this.insert( values, '__index__')\r\n  }\r\n\r\n  /**\r\n   * Overwrites the index with the provided array\r\n   * @param  {Array} values Array of index values\r\n   */\r\n  set values( values ){\r\n    this.insert( values, 'value')\r\n  }\r\n\r\n  /**\r\n   * Replaces the Series values with the\r\n   * @param  {Array} values Array of index values\r\n   */\r\n  insert( values, col='value' ){\r\n    for( let i=0; i < values.length; i++ ){\r\n      this[i][col] = values[i]\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * replaces the index based on values in the mapping object\r\n   * @param  {Object} mapping Object containing the value mapping\r\n   * @return {Object}         Series with the mapped index\r\n   */\r\n  replace_index( mapping, params={}){\r\n    return this.replace(mapping, '__index__', params)\r\n  }\r\n\r\n  /**\r\n   * replaces the values based on values in the mapping object\r\n   * @param  {String} col     original column name\r\n   * @param  {Object} mapping Object containing the value mapping\r\n   * @return {Object}         Series with the mapped values\r\n   */\r\n  replace( mapping={}, col='value', params={} ){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var ser = this.__inplace__(params['inplace'])\r\n\r\n    const keys = Object.keys( mapping )\r\n\r\n    for( let i = 0; i < ser.length; i++ ){\r\n      const value = ser[i][col].toString()\r\n\r\n      // replace the value based on the mapping when it exists\r\n      if( keys.includes(value) ){\r\n        ser[i][col] = mapping[value]\r\n      }\r\n    }\r\n\r\n    return ser\r\n  }\r\n\r\n  /**\r\n   * converts the Series data into an objects\r\n   * @return {Object} Object containing the series data\r\n   */\r\n  toObject(){\r\n    var obj = {}\r\n    this.forEach(r=> obj[r.__index__] = r.value)\r\n\r\n    return obj\r\n  }\r\n\r\n  /**\r\n   * applies the provided function to each row\r\n   * @param  {function} func  function to apply to the column\r\n   */\r\n  apply( func, params={}){\r\n\r\n    // clone the local copy to avoid mutation\r\n    var ser = this.__inplace__(params['inplace'])\r\n\r\n    for( var i=0; i < ser.length; i++ ){\r\n      ser[i]['value'] = func(ser[i]['value'])\r\n    }\r\n\r\n    return ser\r\n  }\r\n\r\n\r\n  merge( ser, params={} ){\r\n    // clone the local copy to avoid mutation\r\n    var array = this.__inplace__(params['inplace'])\r\n\r\n    // generate object mapping the index to value\r\n    const mapping = ser.toObject()\r\n\r\n    // merge left i.e. merge based on the host index values\r\n    var dataframe = []\r\n    for( let i=0; i < array.length; i++ ){\r\n      // set null instead of undefined so the entry does not get overwritten\r\n      var value = mapping[array[i].__index__]\r\n      if( value === undefined ) value = null\r\n\r\n      dataframe.push({\r\n        __index__: array[i].__index__,\r\n        [this.name]: array[i].value,\r\n        [ser.name]: value\r\n      })\r\n    }\r\n\r\n\r\n    // fill values that weren't included in the host index\r\n    const serIndex1 = this.index\r\n    const serIndex2 = ser.index\r\n    const diff = [...new Set(serIndex2.filter(x => !serIndex1.includes(x)))]\r\n\r\n    for( let i=0; i < diff.length; i++ ){\r\n      dataframe.push({\r\n        __index__: diff[i],\r\n        [this.name]: null,\r\n        [ser.name]: mapping[diff[i]]\r\n      })\r\n    }\r\n\r\n    return new jsonArray(dataframe)\r\n  }\r\n\r\n\r\n  // // copies the local data removes all metadata elements\r\n  // get data(){\r\n  //   var data = {...this}\r\n  //   delete data.dtype\r\n  //   delete data.dtypes\r\n  //   delete data.name\r\n  //\r\n  //   return data\r\n  // }\r\n  //\r\n  //\r\n  // /**\r\n  //  * Discretizes (bins) the values for a specific column\r\n  //  * based on the users specifications\r\n  //  * @param  {String} col         Column name\r\n  //  * @param  {Object} [params={}] parameters to define the binning\r\n  //  * @return {Object}             jsonArray containing the binning results\r\n  //  */\r\n  // binning( params={} ){\r\n  //\r\n  //   // placeholder for the bins\r\n  //   var bins = [];\r\n  //\r\n  //   // extract the parameters\r\n  //   const param_keys = Object.keys(params)\r\n  //\r\n  //   const min = this.min\r\n  //\r\n  //   // set defaults when none are provided\r\n  //   if( !param_keys.includes('bins') ) params['bins'] = 10\r\n  //   if( !param_keys.includes('interval') ){\r\n  //     const max = this.max\r\n  //     params['interval'] = (max-min)/params['bins']\r\n  //   }\r\n  //\r\n  //\r\n  //   //Setup Bins\r\n  //   for(var i = 0; i < params['bins']; i++ ){\r\n  //     bins.push({\r\n  //       binNum: i,\r\n  //       value: min + i*params['interval'],\r\n  //       max: min + (i+1)*params['interval'],\r\n  //       count: 0\r\n  //     })\r\n  //   }\r\n  //\r\n  //   //Loop through data and add to bin's count\r\n  //   for (i = 0; i < this.values.length; i++){\r\n  //     var item = this.values[i];\r\n  //\r\n  //     for (var j = 0; j < bins.length; j++){\r\n  //       var bin = bins[j];\r\n  //\r\n  //       // condition logic to account for the first step\r\n  //       // to include the minimum value\r\n  //       var logic = item > bin.value && item <= bin.max\r\n  //       if( j === 0) logic = item >= bin.value && item <= bin.max\r\n  //\r\n  //       if(logic){\r\n  //         bin.count++;\r\n  //         break\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //\r\n  //   return new jsonArray( bins )\r\n  // }\r\n  //\r\n\r\n\r\n  // sorts the json array by the provided column\r\n  sort_values( ascending=true, params={}){\r\n\r\n    var ser = this.__inplace__(params['inplace'])\r\n\r\n    //sort the table based on the ascending flag\r\n    if( ascending === true ){\r\n      ser = this.sort((a, b) => a['value'] > b['value'] ? 1 : -1 )\r\n\r\n    }else{\r\n      ser = this.sort((a, b) => a['value'] < b['value'] ? 1 : -1 )\r\n    }\r\n\r\n    return ser\r\n  }\r\n\r\n\r\n  /**\r\n   * Counts the number of occurences for each unique value in the\r\n   * specified column and returns a jsonArray of the statistics\r\n   * @param  {String} col         Column name\r\n   * @param  {Object} [params={}] parameters to define the binning\r\n   * @return {Object}             jsonArray containing the binning results\r\n   */\r\n  value_counts(){\r\n\r\n    // placeholder for the results\r\n    var pareto = {};\r\n\r\n    // loop through each value and count the occurances\r\n    this.forEach( row => {\r\n      const value = row['value']\r\n\r\n      // create a buffer for the split attribute when one does not exist\r\n      if( !Object.keys(pareto).includes(value) ) pareto[value] = 0\r\n\r\n      // increment the pareto value\r\n      pareto[value] = pareto[value] + 1\r\n\r\n    })\r\n\r\n    return new Series({object: pareto})\r\n\r\n  }\r\n\r\n  duplicates(type='drop'){\r\n\r\n    // placeholder to track the unique value per unique index\r\n    var uniqueIndex = {};\r\n\r\n    // loop through each index and append the array of values\r\n    this.forEach( row => {\r\n      const index = row['__index__']\r\n\r\n      // create an empty array when the index does not exist\r\n      if( !Object.keys(uniqueIndex).includes(index) ) uniqueIndex[index] = []\r\n\r\n      // append the value array\r\n      uniqueIndex[index].push( row['value'] )\r\n    })\r\n\r\n\r\n    // generate the return object based on the specified type\r\n    var returnObj = {}\r\n    for (const [key, value] of Object.entries(uniqueIndex)) {\r\n      // drop all but the first instance\r\n      if( type === 'drop' ) returnObj[key] = value[0]\r\n\r\n      // sum all entries in the array\r\n      if( type === 'sum') returnObj[key] = value.reduce((a,b) => a + b, 0)\r\n\r\n      // sum all entries in the array\r\n      if( type === 'mean') returnObj[key] = value.reduce((a,b) => a + b, 0)/value.length\r\n\r\n    }\r\n\r\n    return new Series({object: returnObj, name: this.name})\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the number of occurences for each unique value\r\n   * @param  {Boolean} [ordered=false] When True, the unique values are returned in sorted order\r\n   * @return {Array}                   Array of unique values\r\n   */\r\n  unique( ordered=false ){\r\n    // return all unique values for the specified column. When\r\n    // ordered is set to true, these values are sorted.\r\n\r\n    var unique_values = [...new Set([...this.values])]\r\n\r\n    // When the column is an array type, concatinate all array values\r\n    if( this.dtype === 'array'){\r\n      var temp = []\r\n      for( var i=0; i < unique_values.length; i++ ){\r\n        if(unique_values[i] === undefined) continue\r\n        temp = temp.concat(unique_values[i])\r\n      }\r\n\r\n      // overwrite the unique values with the concatinated values\r\n      unique_values = [...new Set(temp)]\r\n    }\r\n\r\n    if( ordered === true ){\r\n        // try to conver the values to numbers prior to sorting.\r\n        // use a non standard sorting to get the values sorted properly\r\n\r\n        // order string type\r\n        if( this.dtype === 'string' ){\r\n          return unique_values.sort()\r\n        }\r\n\r\n        try{\r\n          unique_values = unique_values.map( x => +x)\r\n          unique_values = unique_values.sort(function(a,b){return a - b})\r\n        }catch{\r\n          // default to the standard sort\r\n          unique_values.sort()\r\n        }\r\n    }\r\n\r\n    return unique_values\r\n  }\r\n\r\n  /**\r\n   * Crops a pareto by removing the last entries and adding an other\r\n   * entry to represent the removed values\r\n   * @param  {Integer}  count            Number of samples to include in the pareto\r\n   * @param  {Boolean} [ascending=true] When true, the pareto is sorted in ascending order\r\n   * @param  {Object}  [params={}]      Additional parameters\r\n   * @return {Series}                   Cropped Series\r\n   */\r\n  pareto_crop( count, ascending=false, params={}){\r\n\r\n    // order the values in the pareto\r\n    var array = this.sort_values(ascending)\r\n\r\n    // compute the sum of all samples cropped out\r\n    var other = array.slice(count, array.length)\r\n      .map(r => r['value'])\r\n      .reduce((a,b) => a + b, 0)\r\n\r\n    var pareto = array.slice(0,count).concat({__index__: 'other', value: other})\r\n\r\n    return new Series({Series:pareto, name: this.name})\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * returns the Series object. When enable is true, the original\r\n   * Series is returned so the values are mutatable. Otherwise\r\n   * the Series is cloned to avoid mutation of the original object\r\n   *\r\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\r\n   * @return {Object}             current jsonArray content\r\n   */\r\n  __inplace__( enable=false ){\r\n\r\n    // clone the local copy to avoid mutation when inplace is disabled\r\n    if( enable === true ) return this\r\n\r\n    return new Series({Series:this, name: this.name})\r\n  }\r\n\r\n\r\n\r\n  /********************************************************************************\r\n  *  Math Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  get max(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.max(...this.values)\r\n  }\r\n\r\n  get min(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return Math.min(...this.values)\r\n  }\r\n\r\n  get sum(){\r\n    if( this.values.length === 1 ) return this.values[0]\r\n    return this.values.reduce((a,b) => a + b, 0)\r\n  }\r\n\r\n  get mean(){\r\n    if( this.values.length === 1 ) return this[0]\r\n    return this.sum / this.values.length\r\n  }\r\n\r\n  /********************************************************************************\r\n  *  Arithmetic Functions\r\n  *  ===============================\r\n  *  Interface for computing common statistical functions\r\n  ********************************************************************************/\r\n  add( value, params={} ){ return this.apply(r => r + value, params) }\r\n  sub( value, params={} ){ return this.apply(r => r - value, params) }\r\n  multiply( value, params={} ){ return this.apply(r => r * value, params) }\r\n  divide( value, params={} ){ return this.apply(r => r / value, params) }\r\n\r\n  //\r\n  //\r\n  // /**\r\n  //  * Applies the function using the variable and the local series\r\n  //  * as inputs. this is intended for arithmetic Functions\r\n  //  * @param  {mixed} variable variable or series\r\n  //  * @param  {function} func     function to apply on the local and variable data\r\n  //  * @return {Series}            Series containing the resuting data\r\n  //  */\r\n  // compute(variable, func){\r\n  //\r\n  //   var data = {...this}\r\n  //\r\n  //   var obj = Number(variable)\r\n  //\r\n  //   var key, value\r\n  //\r\n  //   // apply the function on the objects sharing the same key\r\n  //   if( isNaN(obj) ){\r\n  //\r\n  //     for ([key, value] of Object.entries(variable)) {\r\n  //       var val = data[key]\r\n  //       if( val === undefined ) val = 0\r\n  //       data[key] = func( val, value)\r\n  //     }\r\n  //\r\n  //   // perform the function using the object value directly\r\n  //   }else{\r\n  //     for ([key, value] of Object.entries(data)) {\r\n  //       data[key] = func( value, obj)\r\n  //     }\r\n  //   }\r\n  //\r\n  //   // return the data as a series\r\n  //   return new Series({\r\n  //     object: data,\r\n  //     dtype: this.dtype,\r\n  //     dtypes: this.dtypes,\r\n  //     name: this.name,\r\n  //   })\r\n  // }\r\n  //\r\n  // /**\r\n  //  * Performs addition on the local Series with the variable\r\n  //  * data. The variable can be an integer, string, or another\r\n  //  * series object. When a Series is given, the data is added\r\n  //  * based on the index\r\n  //  * @param  {mixed} variable input data (supports mixed type)\r\n  //  * @return {Series}         Series containing the results\r\n  //  */\r\n  // add( variable ){\r\n  //   return this.compute( variable, (x, y) => {return x + y} )\r\n  // }\r\n  //\r\n  // /**\r\n  //  * Performs subtraction on the local Series with the variable\r\n  //  * data. The variable can be an integer, string, or another\r\n  //  * series object. When a Series is given, the data is added\r\n  //  * based on the index\r\n  //  * @param  {mixed} variable input data (supports mixed type)\r\n  //  * @return {Series}         Series containing the results\r\n  //  */\r\n  // sub( variable ){\r\n  //   return this.compute( variable, (x, y) => {return x - y} )\r\n  // }\r\n  //\r\n  // /**\r\n  //  * Performs multiplication on the local Series with the variable\r\n  //  * data. The variable can be an integer, string, or another\r\n  //  * series object. When a Series is given, the data is added\r\n  //  * based on the index\r\n  //  * @param  {mixed} variable input data (supports mixed type)\r\n  //  * @return {Series}         Series containing the results\r\n  //  */\r\n  // multiply( variable ){\r\n  //   return this.compute( variable, (x, y) => {return x * y} )\r\n  // }\r\n  //\r\n  // /**\r\n  //  * Performs division on the local Series with the variable\r\n  //  * data. The variable can be an integer, string, or another\r\n  //  * series object. When a Series is given, the data is added\r\n  //  * based on the index\r\n  //  * @param  {mixed} variable input data (supports mixed type)\r\n  //  * @return {Series}         Series containing the results\r\n  //  */\r\n  // divide( variable ){\r\n  //   return this.compute( variable, (x, y) => {return x/y} )\r\n  // }\r\n  //\r\n  // get react(){ return new ReactComponents(this) }\r\n\r\n  // /**\r\n  //  * echarts line plot data formatter\r\n  //  * @param  {stringi} col  column name\r\n  //  * @return {object}      echarts data series object\r\n  //  */\r\n  get echartsOptions( ){ return new echartsOptions( this ) }\r\n  get echartsSeries( ){ return new echartsSeries( this ) }\r\n  get echarts( ){ return new eChartsComponents( this ) }\r\n\r\n  get react(){\r\n    const props = {colx: '__index__', name: '__index__', coly: 'value', col: 'value' }\r\n    return new ReactComponents(this, props) }\r\n\r\n}\r\n","/**\r\n * Components\r\n * ==============\r\n *\r\n * standard html components are wrapped in order to provide\r\n * the ability to leverage an existing framework when specified.\r\n * Defaults to using the standard html components\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 25, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nexport function Button(props){\r\n  return wrapper( props, 'button' )\r\n}\r\n\r\nexport function Input(props){\r\n  return wrapper( props, 'input' )\r\n}\r\n\r\nexport function Image(props){\r\n  return wrapper( props, 'img' )\r\n}\r\n\r\nexport function Table(props){\r\n  return wrapper( props, 'table' )\r\n}\r\n\r\nexport function Cell(props){\r\n  return wrapper( props, 'td' )\r\n}\r\n\r\nexport function Header(props){\r\n  return wrapper( props, 'thead' )\r\n}\r\n\r\nexport function HeaderCell(props){\r\n  return wrapper( props, 'th' )\r\n}\r\n\r\nexport function Row(props){\r\n  return wrapper( props, 'tr' )\r\n}\r\n\r\nexport function Body(props){\r\n  return wrapper( props, 'body' )\r\n}\r\n\r\nexport function Icon(props){\r\n  return wrapper( props, 'icon' )\r\n}\r\n\r\nexport function Checkbox(props){\r\n  return wrapper( props, 'checkbox' )\r\n}\r\n\r\nfunction wrapper( props, type ){\r\n\r\n  if( props.component === undefined ){\r\n    switch( type ){\r\n      case 'button':\r\n        return <button {...props}>{props.defaultValue}</button>\r\n\r\n      case 'input':\r\n        return <input {...props}>{props.defaultValue}</input>\r\n\r\n      case 'checkbox':\r\n        return <input {...props} type=\"checkbox\" >{props.defaultValue}</input>\r\n\r\n      case 'img':\r\n        return <img\r\n          src={props.defaultValue}\r\n          alt=''\r\n          {...props} />\r\n\r\n      case 'table':\r\n        return <table {...props}>{props.defaultValue}</table>\r\n\r\n      case 'td':\r\n        return <td {...props}>{props.defaultValue}</td>\r\n\r\n      case 'tr':\r\n        return <tr {...props}>{props.defaultValue}</tr>\r\n\r\n      case 'th':\r\n        return <th {...props}>{props.defaultValue}</th>\r\n\r\n      case 'body':\r\n        return <tbody {...props}>{props.defaultValue}</tbody>\r\n\r\n      case 'thead':\r\n        return <thead {...props}>{props.defaultValue}</thead>\r\n\r\n      case 'icon':\r\n        return <i {...props}>{props.defaultValue}</i>\r\n\r\n      default:\r\n        console.log( 'default type', type)\r\n        return <div {...props}>{props.defaultValue}</div>\r\n\r\n\r\n    }\r\n  }\r\n\r\n  return(\r\n    <props.component\r\n      {...props}\r\n      component={undefined}\r\n      >\r\n      {props.defaultValue}\r\n    </props.component>\r\n  )\r\n}\r\n","\r\n// Standardize method to map prop variables to series to\r\n// avoid multiple changes in multiple files\r\nexport default function propsToSeries(props, Series){\r\n\r\n    if( props.name !== undefined ) Series['name'] = props.name\r\n    if( props.stacked !== undefined ) Series['stack'] = props.stacked\r\n    if( props.color !== undefined ) Series['color'] = props.color\r\n    if( props.smooth !== undefined ) Series['smooth'] = props.smooth\r\n    if( props.symbol !== undefined ) Series['symbol'] = props.symbol\r\n    if( props.symbolSize !== undefined ) Series['symbolSize'] = props.symbolSize\r\n    if( props.lineStyle !== undefined ) Series['lineStyle'] = props.lineStyle\r\n    if( props.axis !== undefined ) Series['yAxisIndex'] = props.axis\r\n    if( props.z !== undefined ) Series['z'] = props.z\r\n    if( props.zIndex !== undefined ) Series['zlevel'] = props.zIndex\r\n    if( props.emphasis !== undefined ) Series['emphasis'] = props.emphasis\r\n\r\n    // barplot props\r\n    if( props.barGap !== undefined ) Series['barGap'] = props.barGap\r\n\r\n    if( props.labelObj !== undefined ) Series['label'] = props.labelObj \r\n    if( props.label !== undefined ){\r\n      Series['label'] = {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: props.label\r\n      }\r\n      Series['showSymbol'] = true\r\n    }\r\n    if( props.lw !== undefined ) Series['itemStyle'] = {normal: {borderWidth:props.lw}}\r\n\r\n    return Series\r\n}\r\n","\r\nexport const ENTROPY = [\r\n  \"#363388\",\r\n  \"#87ea00\",\r\n  \"#011fc3\",\r\n  \"#4cdf21\",\r\n  \"#3e0eba\",\r\n  \"#00d226\",\r\n  \"#692dda\",\r\n  \"#9bf94f\",\r\n  \"#3445ee\",\r\n  \"#a6db00\",\r\n  \"#714ffc\",\r\n  \"#82fc5f\",\r\n  \"#a227dd\",\r\n  \"#66ff72\",\r\n  \"#9335e6\",\r\n  \"#76c900\",\r\n  \"#023cda\",\r\n  \"#cef036\",\r\n  \"#da37ec\",\r\n  \"#2bff88\",\r\n  \"#c400c4\",\r\n  \"#00aa0a\",\r\n  \"#c454ff\",\r\n  \"#02c744\",\r\n  \"#dd55ff\",\r\n  \"#c0f346\",\r\n  \"#7d5dff\",\r\n  \"#f0d600\",\r\n  \"#0146ce\",\r\n  \"#a3c700\",\r\n  \"#50199f\",\r\n  \"#b0f55d\",\r\n  \"#c800b5\",\r\n  \"#02df7f\",\r\n  \"#ff5ff8\",\r\n  \"#00a52e\",\r\n  \"#da00b1\",\r\n  \"#95f980\",\r\n  \"#9e00a3\",\r\n  \"#5ba400\",\r\n  \"#566dff\",\r\n  \"#bdc400\",\r\n  \"#0032a9\",\r\n  \"#eabf00\",\r\n  \"#7371ff\",\r\n  \"#eee652\",\r\n  \"#0161e1\",\r\n  \"#deeb5b\",\r\n  \"#69028a\",\r\n  \"#9cf78f\",\r\n  \"#ea00b0\",\r\n  \"#01dd93\",\r\n  \"#fc00ab\",\r\n  \"#02f3b9\",\r\n  \"#c600a0\",\r\n  \"#6ffba9\",\r\n  \"#e90096\",\r\n  \"#01ae56\",\r\n  \"#ec70ff\",\r\n  \"#348900\",\r\n  \"#c47cff\",\r\n  \"#7ca500\",\r\n  \"#3682ff\",\r\n  \"#ffc530\",\r\n  \"#0261d6\",\r\n  \"#d5b200\",\r\n  \"#0144ab\",\r\n  \"#bab100\",\r\n  \"#258bff\",\r\n  \"#ea9f00\",\r\n  \"#0287ed\",\r\n  \"#f17f00\",\r\n  \"#01459b\",\r\n  \"#ceee6f\",\r\n  \"#7b007a\",\r\n  \"#5cfbc9\",\r\n  \"#fa0085\",\r\n  \"#019136\",\r\n  \"#ff57cd\",\r\n  \"#217500\",\r\n  \"#ff72e7\",\r\n  \"#00781d\",\r\n  \"#f38aff\",\r\n  \"#5b8700\",\r\n  \"#a68dff\",\r\n  \"#849600\",\r\n  \"#592282\",\r\n  \"#ffd760\",\r\n  \"#8b007a\",\r\n  \"#00e8c3\",\r\n  \"#ff2236\",\r\n  \"#02eadc\",\r\n  \"#ff312a\",\r\n  \"#00ebfd\",\r\n  \"#ff3f20\",\r\n  \"#00e9ec\",\r\n  \"#dd0018\",\r\n  \"#2be2ff\",\r\n  \"#ff3d3f\",\r\n  \"#5ff7f6\",\r\n  \"#f4005e\",\r\n  \"#01ad68\",\r\n  \"#e60072\",\r\n  \"#6bf8de\",\r\n  \"#cc002f\",\r\n  \"#00d1d3\",\r\n  \"#c32c00\",\r\n  \"#02ccf4\",\r\n  \"#d94a00\",\r\n  \"#4ab0ff\",\r\n  \"#ec6500\",\r\n  \"#6ea0ff\",\r\n  \"#d59f00\",\r\n  \"#005fad\",\r\n  \"#ffa72c\",\r\n  \"#007bc3\",\r\n  \"#ff772d\",\r\n  \"#00a4d7\",\r\n  \"#ce7600\",\r\n  \"#8aa8ff\",\r\n  \"#c19900\",\r\n  \"#dd91ff\",\r\n  \"#356b00\",\r\n  \"#ff4fa7\",\r\n  \"#016e30\",\r\n  \"#ff4f92\",\r\n  \"#005312\",\r\n  \"#ff95e9\",\r\n  \"#245200\",\r\n  \"#b69aff\",\r\n  \"#838600\",\r\n  \"#6f156a\",\r\n  \"#b5f19c\",\r\n  \"#af006a\",\r\n  \"#9af4c1\",\r\n  \"#da005a\",\r\n  \"#00a484\",\r\n  \"#ff4369\",\r\n  \"#00b1a4\",\r\n  \"#ae002c\",\r\n  \"#5cceff\",\r\n  \"#9d2300\",\r\n  \"#73c2ff\",\r\n  \"#c66800\",\r\n  \"#0185bf\",\r\n  \"#ffc24b\",\r\n  \"#293a79\",\r\n  \"#f4e379\",\r\n  \"#572a73\",\r\n  \"#f5e285\",\r\n  \"#79035b\",\r\n  \"#d0eb9c\",\r\n  \"#91005b\",\r\n  \"#019069\",\r\n  \"#ae004f\",\r\n  \"#a0f1e0\",\r\n  \"#9d0012\",\r\n  \"#02b0b8\",\r\n  \"#ff6c4c\",\r\n  \"#00abc4\",\r\n  \"#ff8e3d\",\r\n  \"#016398\",\r\n  \"#ffa548\",\r\n  \"#005174\",\r\n  \"#b48200\",\r\n  \"#8fbbff\",\r\n  \"#ad5000\",\r\n  \"#028aab\",\r\n  \"#ff6362\",\r\n  \"#007548\",\r\n  \"#ff658c\",\r\n  \"#005629\",\r\n  \"#e8a9ff\",\r\n  \"#948500\",\r\n  \"#c8adff\",\r\n  \"#6f7300\",\r\n  \"#ffb7fc\",\r\n  \"#184817\",\r\n  \"#ff8ecd\",\r\n  \"#344700\",\r\n  \"#f8c4ff\",\r\n  \"#575900\",\r\n  \"#b8b9ff\",\r\n  \"#9d3500\",\r\n  \"#aeebfe\",\r\n  \"#aa003b\",\r\n  \"#aeedea\",\r\n  \"#92002d\",\r\n  \"#baecd9\",\r\n  \"#980050\",\r\n  \"#018d81\",\r\n  \"#ff6c74\",\r\n  \"#029195\",\r\n  \"#ff7e5c\",\r\n  \"#00667f\",\r\n  \"#ff9158\",\r\n  \"#00535b\",\r\n  \"#ffa466\",\r\n  \"#204259\",\r\n  \"#fede92\",\r\n  \"#572e65\",\r\n  \"#ffd08b\",\r\n  \"#323e5c\",\r\n  \"#ffa173\",\r\n  \"#074648\",\r\n  \"#ff808c\",\r\n  \"#00523c\",\r\n  \"#ff8cb3\",\r\n  \"#2f4513\",\r\n  \"#fbd6fb\",\r\n  \"#822f00\",\r\n  \"#c1e6ff\",\r\n  \"#86003d\",\r\n  \"#e6e4ad\",\r\n  \"#701f49\",\r\n  \"#dbe6c4\",\r\n  \"#7c112f\",\r\n  \"#c9e7ec\",\r\n  \"#791a1f\",\r\n  \"#e0dffc\",\r\n  \"#682e03\",\r\n  \"#d5cfff\",\r\n  \"#975d00\",\r\n  \"#016b72\",\r\n  \"#ff9493\",\r\n  \"#016252\",\r\n  \"#ffaed5\",\r\n  \"#7b6a00\",\r\n  \"#4c3752\",\r\n  \"#ffba84\",\r\n  \"#164738\",\r\n  \"#ff9e8a\",\r\n  \"#294529\",\r\n  \"#ffbec1\",\r\n  \"#4c3d02\",\r\n  \"#f7dbdd\",\r\n  \"#55390b\",\r\n  \"#e0e2de\",\r\n  \"#6d291d\",\r\n  \"#f4dec0\",\r\n  \"#6a2937\",\r\n  \"#ffd8b0\",\r\n  \"#3b3e4d\",\r\n  \"#ffc999\",\r\n  \"#563548\",\r\n  \"#ffd1c3\",\r\n  \"#43401e\",\r\n  \"#ffb3a3\",\r\n  \"#413f30\",\r\n  \"#854c00\",\r\n  \"#443d3b\",\r\n  \"#755000\",\r\n  \"#59343c\",\r\n  \"#695800\",\r\n  \"#543830\",\r\n  \"#60331a\"\r\n]\r\n","\r\nexport const ENTROPY_8BIT = [\r\n    '#0082c8',\t//\tBlue\t1\r\n    '#FF0000',\t//\tRed\t    2\r\n    '#3cb44b',\t//\tGreen\t3\r\n    '#f58231',\t//\tOrange\t4\r\n    '#911eb4',\t//\tPurple\t5\r\n    '#ffe119',\t//\tYellow\t6\r\n    '#46f0f0',\t//\tCyan\t7\r\n    '#f032e6',\t//\tMagenta\t8\r\n    '#d2f53c',\t//\tLime\t9\r\n    '#fabebe',\t//\tPink\t10\r\n    '#008080',\t//\tTeal\t11\r\n    '#e6beff',\t//\tLavender\t12\r\n    '#aa6e28',\t//\tBrown\t13\r\n    '#fffac8',\t//\tBeige\t14\r\n    '#800000',\t//\tMaroon\t15\r\n    '#aaffc3',\t//\tMint\t16\r\n    '#808000',\t//\tOlive\t17\r\n    '#ffd8b1',\t//\tCoral\t18\r\n    '#000080',\t//\tNavy\t19\r\n    '#808080',\t//\tGrey\t20\r\n    '#FFFFFF',\t//\tWhite\t21\r\n    '#000000',\t//\tBlack\t22\r\n    ]\r\n","\r\nexport const  REDS = [\r\n  '#ff0000', '#ff1900', '#ff2700', '#ff3100', '#ff3900',\r\n  '#ff4000', '#ff4700', '#ff4d00', '#ff5200', '#ff5800',\r\n  '#ff5d00', '#ff6101', '#ff6602', '#ff6a04', '#ff6e05',\r\n  '#ff7207', '#ff7609', '#ff7a0c', '#ff7e0e', '#ff8110',\r\n  '#ff8513', '#ff8815', '#ff8c17', '#ff8f19', '#ff921c',\r\n  '#ff951e', '#ff9820', '#ff9b23', '#ff9e25', '#ffa127',\r\n  '#ffa42a', '#ffa62c', '#ffa92f', '#ffac31', '#ffae34',\r\n  '#ffb136', '#ffb338', '#ffb63b', '#ffb83d', '#ffba40',\r\n  '#ffbd43', '#ffbf45', '#ffc148', '#ffc34a', '#ffc54d',\r\n  '#ffc850', '#ffca52', '#ffcc55', '#ffce58', '#ffcf5a',\r\n  '#ffd15d', '#ffd360', '#ffd563', '#ffd765', '#ffd868',\r\n  '#ffda6b', '#ffdc6e', '#ffdd71', '#ffdf74', '#ffe077',\r\n  '#ffe27a', '#ffe37d', '#ffe580', '#ffe683', '#ffe786',\r\n  '#ffe989', '#ffea8c', '#ffeb8f', '#ffec92', '#ffee95',\r\n  '#ffef99', '#fff09c', '#fff19f', '#fff2a2', '#fff3a6',\r\n  '#fff4a9', '#fff5ac', '#fff5b0', '#fff6b3', '#fff7b6',\r\n  '#fff8ba', '#fff8bd', '#fff9c1', '#fffac4', '#fffac8',\r\n  '#fffbcb', '#fffbcf', '#fffcd2', '#fffcd6', '#fffdd9',\r\n  '#fffddd', '#fffee1', '#fffee4', '#fffee8', '#fffeec',\r\n  '#fffff0', '#fffff3', '#fffff7', '#fffffb', '#ffffff',]\r\n","/**\r\n * Colors\r\n * ======\r\n *\r\n * Description\r\n * -----------\r\n * Routiens for generating colors based on a given index\r\n *\r\n */\r\n\r\nimport {ENTROPY} from './pallet/entropy_pallet'\r\nimport {ENTROPY_8BIT} from './pallet/entropy_8bit'\r\nimport {REDS} from './pallet/reds'\r\n\r\n\r\n\r\n\r\nexport function color( index, opacity, color_type='entropy', min=null, max=null, invert=true){\r\n  const color_hex = get_color( index, color_type, min, max, invert )\r\n\r\n  return convertHex(color_hex, opacity)\r\n}\r\n\r\n//\r\n /**\r\n  * returns the color at the specified index. Round robbin selection implemented\r\n  * @param  {Int} index                  color index\r\n  * @param  {String} [color_type='entropy'] color type definition\r\n  * @return {String}                        hex color string\r\n  */\r\n function get_color( index, color_type='entropy', min=null, max=null, invert=true ){\r\n\r\n   //select the color type. Default to entropy\r\n   var colors = ENTROPY\r\n   if( color_type === 'entropy' ){colors = ENTROPY}\r\n   if( color_type === 'entropy_8bit' ){colors = ENTROPY_8BIT}\r\n   if( color_type === 'reds' ){colors = REDS}\r\n\r\n   const max_colors = colors.length - 1\r\n\r\n   var step_size\r\n   var val = index\r\n\r\n   if( max !== null) {\r\n\r\n     //default the color range assuming there is no minum value\r\n     // var step_size = max_colors/max\r\n     // var val = max_colors - Math.floor((index*step_size))\r\n     // if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     //\r\n     //change the scale and color range when a minimum value exists\r\n    if( min !== null ){\r\n       step_size = max_colors/(max - min + 1)\r\n\r\n       //determine the color value\r\n       val = max_colors - Math.floor((index*step_size)-min)\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)-min) }\r\n\r\n     //scale the colors when there is no minimum value\r\n     }else{\r\n       step_size = max_colors/max\r\n       val = max_colors - Math.floor((index*step_size))\r\n       if( invert ){ val = max_colors - Math.floor((index*step_size)) }\r\n     }\r\n\r\n     //set an upper and lower bound to avoid accessing outside of the array\r\n     if( val > max_colors ){ val = max_colors }\r\n     if( val < 0 ){ val = 0}\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   // for continuous color schemes, cap the positive and negative sizes of th\r\n   // array\r\n   if( color_type === 'reds' ){\r\n\r\n     val = max_colors-index\r\n\r\n     // Invert the color scheme and check to ensure the highside\r\n     // doesn't run off the negative side of the array\r\n     if( invert === true ){\r\n       if( val < 0 ){ val = 0}\r\n       return colors[val]\r\n     }\r\n\r\n     if( val > max_colors ){ val = max_colors }\r\n\r\n     return colors[val]\r\n   }\r\n\r\n\r\n   return colors[val%colors.length]\r\n }\r\n\r\n\r\nexport function convertHex(hex,opacity){\r\n    hex = hex.replace('#','');\r\n    const r = parseInt(hex.substring(0,2), 16);\r\n    const g = parseInt(hex.substring(2,4), 16);\r\n    const b = parseInt(hex.substring(4,6), 16);\r\n\r\n    return 'rgba('+r+','+g+','+b+','+opacity/100+')';\r\n\r\n}\r\n\r\n\r\n function int_to_color(v, min=0, max=100) {\r\n   v = 100*((v-min) / (max - min)) - 1\r\n   v = Math.max(0, v)\r\n   return REDS[Math.round(v)]\r\n }\r\n\r\n function shadeHexColor(color, percent) {\r\n   // changes the color by a percent. positive percentage are lighter and negative are darker\r\n   var f = parseInt(color.slice(1),16)\r\n   var t = percent<0?0:255\r\n   var p = percent<0?percent*-1:percent\r\n   var R = f>>16\r\n   var G = (f>>8) & 0x00FF\r\n   var B = f&0x0000FF\r\n\r\n   return \"#\"+( 0x1000000+(Math.round((t-R)*p)+R) *\r\n                0x10000+(Math.round((t-G)*p)+G) *\r\n                0x100+(Math.round((t-B)*p)+B))\r\n                .toString(16)\r\n                .slice(1);\r\n }\r\n\r\n\r\n/**\r\n * returns and object containing the fill and edge color based on a boolean value\r\n */\r\nexport function booleanColor( value ){\r\n\r\n  var fill, edge\r\n\r\n  switch( value ){\r\n    case true :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case false :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 0 :\r\n      fill = '#00FF00'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case 1 :\r\n      fill = '#FF0000'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -1 :\r\n      fill = '#B0B0B0'\r\n      edge = shadeHexColor( fill, -0.5)\r\n      break\r\n\r\n    case -2 :\r\n      fill = '#000000'\r\n      edge = shadeHexColor( fill, 0.5)\r\n      break\r\n\r\n    default :\r\n      fill = 'white'\r\n      edge = 'black'\r\n      break\r\n  }\r\n\r\n  return {\r\n    fill: fill,\r\n    edge: edge\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * lightens the fill color and darkens the edge color to\r\n * create a nice contrast between edge and fill\r\n * @param  {hex color} colorHex hex color value\r\n * @return {object}          object containing the edge and fill colors\r\n */\r\nexport function fillAndEdge( colorHex ){\r\n  return {\r\n    fill: shadeHexColor( colorHex, 0.2),\r\n    edge: shadeHexColor( colorHex, -0.5)\r\n  }\r\n}\r\n\r\n/**\r\n * Converts a single RGB component to hex string\r\n * @param  {8bit integer} c 8 bit color integer\r\n * @return {string}   hex string for the specified component\r\n */\r\nfunction componentToHex(c) {\r\n  if ( c === undefined ) return 'FF'\r\n\r\n  var hex = c.toString(16);\r\n  return hex.length === 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n/**\r\n * returns the hex string based on the provided components\r\n * @param  {string} r red color component integer value\r\n * @param  {string} g green color component integer value\r\n * @param  {string} b blue color component integer value\r\n * @return {string}   hex color string\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\nexport {get_color, int_to_color, shadeHexColor};\r\nexport default get_color;\r\n","/**\r\n * echarts Scatter\r\n * =================\r\n *\r\n * Converts json arrays into echart scatter series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a list of x/y cooridnates\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function scatter( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // set default color scheme for specific label types\r\n  var color = props.color\r\n  switch( props.groupId ){\r\n    case true:\r\n      color = 'red'\r\n      break\r\n\r\n    case false:\r\n      color = 'blue'\r\n      break\r\n\r\n    case 'MARKED':\r\n      color = 'green'\r\n      break\r\n\r\n    default:\r\n      if( color === undefined ) color = 'blue'\r\n      break\r\n  }\r\n\r\n\r\n  // convert the json array to a list of lists containing data\r\n  var coordinates = []\r\n  for( var i=0; i < json_array.length; i++ ){\r\n    var temp\r\n\r\n    // the dataframe index was pushed into the plot data in addition to the\r\n    // data used for plotting. This was used to locate the part by index\r\n    // number after splitting it for visualization purposes\r\n    temp = [\r\n      json_array[i][props.colx],\r\n      json_array[i][props.coly],\r\n      json_array[i]['__index__']]\r\n\r\n    if( props.colorBy !== undefined) temp.push(props.colorBy)\r\n\r\n    coordinates.push(temp)\r\n  }\r\n\r\n  var Series = {\r\n    name: 'scatter',\r\n    type: 'scatter',\r\n    color: color,\r\n    data: coordinates\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  // add tooltips when the label is provided\r\n  if( props.colorBy !== undefined ){\r\n    Series['emphasis'] = {\r\n      label: {\r\n        formatter: function( params){\r\n          return `${coordinates[params.dataIndex][2]}`\r\n        },\r\n        show: true,\r\n        position: 'top',\r\n        color: color ,\r\n        fontSize: 16\r\n      }\r\n    }\r\n  }\r\n\r\n  return [Series]\r\n\r\n}\r\n","/**\r\n * React Library Framework\r\n * =========================\r\n *\r\n * Class used to store a global copy of the json array so it\r\n * can be automatically included as a prop into the desired\r\n * react component. This Framework is intended to be extended\r\n * upon for each component library\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 28, 2020\r\n *\r\n */\r\n\r\n\r\nexport default class ReactLibraryFramework{\r\n\r\n  constructor(data, props={}){\r\n    // cast the data to a json_array data type\r\n    this.data = data\r\n    this.props = props\r\n  }\r\n\r\n  format_props( props ){\r\n    return {\r\n      ...props,\r\n      ...this.props,\r\n      ...{\r\n        data: this.data\r\n      }}\r\n  }\r\n\r\n}\r\n","/**\r\n * Datetime\r\n * ===============\r\n *\r\n * extend the moments class to provide python datetime functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 29, 2020\r\n */\r\n\r\n\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function datetime( value ) {\r\n  var self = moment( value );\r\n\r\n  self.__proto__ = datetime.prototype;\r\n\r\n  return self;\r\n}\r\n\r\ndatetime.prototype.__proto__ = moment.prototype;\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.toString = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.strftime = function(format='YYYY-MM-DD'){\r\n  return this.format(format)\r\n}\r\n\r\n// returns the date as a string based on the provided format\r\ndatetime.prototype.week = function(){\r\n  return `${this.year()}-${this.isoWeek()}`\r\n}\r\n\r\n\r\n/**\r\n *  adds to the date based on the params object\r\n * @param  {objects}  params         'add' parameters with keys of days, months, years, etc.\r\n * @param  {Boolean} [inplace=false] When True, the local copy of the date will be changed.\r\n * @return {datetime}                updated datetime object\r\n */\r\ndatetime.prototype.timedelta = function(params, inplace=false){\r\n\r\n  // avoid mutating the original copy via cloning unless specified otherwise\r\n  var date = this\r\n  if( inplace === false ){\r\n    date = datetime(this)\r\n  }\r\n\r\n  /// retrieve the offset parameters\r\n  const param_keys = Object.keys( params )\r\n\r\n  // add the offset to the date\r\n  for( var i=0; i < param_keys.length; i++ ){\r\n    const pkey = param_keys[i]\r\n    date.add(params[pkey], pkey)\r\n  }\r\n\r\n  return date\r\n}\r\n","/**\r\n * echarts Scatter by\r\n * ==================\r\n *\r\n * groups the data based on values in a given column\r\n * and creates a multicolored scatter plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport {color} from '../../../colors/Colors'\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter from './index'\r\n\r\n/**\r\n * Returns a list of echarts scatter objects colored by the specified att\r\n *\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {string} colorBy    color for grouping the samples\r\n * @return {Array}       Array of x/y cooridnates\r\n */\r\nexport default function scatter_by( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  // group samples based on the specified column\r\n  const group = json_array.groupby([props.colorBy])\r\n\r\n  var series = []\r\n\r\n  for( var i=0; i < group.length; i++ ){\r\n\r\n    // extract the color based on the index and format the data\r\n    // from a json_array to a list of x/y coordinates\r\n    const color_value = color( i, 100, 'entropy_8bit' )\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series = series.concat( scatter({\r\n      ...props,\r\n      ...{\r\n        json_array: group[i].json_obj,\r\n        color: color_value,\r\n        groupId: group[i][props.colorBy],\r\n      }}\r\n    ))\r\n  }\r\n\r\n  return series\r\n}\r\n","/**\r\n * Value To String\r\n * ====================\r\n *\r\n * Converts values to string formats based on the provided\r\n * data types\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 31, 2020\r\n *\r\n */\r\n\r\nimport datetime from '../datetime'\r\n\r\nexport default class valueToString{\r\n\r\n  // defaults\r\n  constructor(){\r\n\r\n    this.numeric = 8\r\n    this.percentage = 2\r\n    this.float = 4\r\n    this.string = 50\r\n\r\n  }\r\n\r\n  // returns a formatted string based on the value data type\r\n  toString( value, dtype ){\r\n\r\n    switch( dtype ){\r\n\r\n      case 'float': return this.format_float(value)\r\n      case 'int': return this.format_int(value)\r\n      case 'array': return this.format_array(value)\r\n      case 'object': return this.format_object(value)\r\n      case 'boolean': return this.format_boolean(value)\r\n\r\n      case 'scientific': return this.format_scientific( value )\r\n\r\n      case 'percent': return this.format_percentage( value )\r\n      case 'percentage': return this.format_percentage( value )\r\n\r\n      case 'datetime': return this.format_datetime( value )\r\n\r\n      default: return this.format_string( value )\r\n    }\r\n  }\r\n\r\n  // formats a float by removing resolution to 4 decimal points or\r\n  // converting it to scientific notation\r\n  format_float( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value/Math.pow(10,this.float-1) > 0 ) return value.toFixed(this.float).toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  // formats a value of percent data type into a percentage string\r\n  format_percentage( value ){\r\n    if( value === undefined ) return '-'\r\n    const formatted = (100*value).toFixed(this.percentage)\r\n    if( isNaN(formatted) ) return '-'\r\n    return `${formatted}%`\r\n  }\r\n\r\n  // limits the resolution of integers. Returns the original\r\n  // value when less than the maximum resolutions\r\n  format_int( value ){\r\n    if( value === undefined ) return '-'\r\n    if( value < Math.pow(10,this.numeric-1) ) return value.toString()\r\n    return value.toExponential(this.float).toString()\r\n  }\r\n\r\n  format_array( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_object( value ){\r\n    return value.toString()\r\n  }\r\n\r\n  format_boolean( value ){\r\n    return value\r\n  }\r\n\r\n  format_scientific( value ){\r\n    return Number.parseFloat(value).toExponential(2)\r\n  }\r\n\r\n  format_datetime( value ){\r\n    return datetime(value).format('YYYY-MM-DD')\r\n  }\r\n\r\n\r\n  // limits the number of characters in a string\r\n  format_string( value ){\r\n    if( value.length > this.string ) return value.slice(1, this.string)\r\n    return value\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.slice(5,10)\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      16 objects sliced down to 5\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'AccordianTable'}\r\n        columns={['id', 'COUNT', 'CATEGORY2']}\r\n        />\r\n\r\n      <br/>\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n  var data = []\r\n  for( let i=0; i < 4; i++ ){\r\n    data.push({id: i, value: i})\r\n  }\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n\r\n\r\n  // const mapping = {UP16009: 'Value1', UP16012: 'Value2'}\r\n  const df2 = json_array.sort_index([2,0,1,3] )\r\n  // const df2 = json_array.replace('CATEGORY1', mapping, {newCol: 'CAT_NEW'} )\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      unsorted DataFrame\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n      <br/>\r\n\r\n      DataFrame sorted by index [2,0,1,3]\r\n      <df2.react.semanticUI.Table\r\n        tableName = {'Position 2'}\r\n        />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n  var data = [\r\n    {id: 0, WEEK: 30, YEAR: 2020},\r\n    {id: 3, WEEK: 20, YEAR: 2021},\r\n    {id: 3, WEEK: 10, YEAR: 2021},\r\n    {id: 2, WEEK: 50, YEAR: 2020},\r\n    {id: 1, WEEK: 40, YEAR: 2020},\r\n  ]\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n\r\n\r\n  // const mapping = {UP16009: 'Value1', UP16012: 'Value2'}\r\n  const df1 = json_array.sort_values('YEAR' )\r\n  const df2 = json_array.sort_values(['WEEK','YEAR'] )\r\n  // const df2 = json_array.replace('CATEGORY1', mapping, {newCol: 'CAT_NEW'} )\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      Sorting by a single column\r\n      <df1.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n      <br/>\r\n\r\n      Sorting by multiple columns\r\n      <df2.react.semanticUI.Table\r\n        tableName = {'Position 2'}\r\n        />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  const data = [{\r\n    \"row\": \"TOTAL\",\r\n    \"2021-26\": 0.4689655172413793,\r\n    \"2021-27\": 0.576905311778291,\r\n    \"2021-28\": 0.5764050162563864,\r\n    \"2021-29\": 0.6131484794275492,\r\n    \"2021-30\": 0.6065048098946404,\r\n    \"2021-31\": 0.5656345399040559,\r\n    \"2021-32\": 0.5592927986200948,\r\n    \"2021-33\": 0.5551455514555146,\r\n    \"2021-34\": 0.568241469816273,\r\n    \"2021-35\": 0.5466835656949726,\r\n    \"2021-36\": 0.5312372396896693,\r\n    \"2021-37\": 0.508585445625511,\r\n    \"2021-38\": 0.4974160206718346,\r\n    \"2021-39\": 0.47007426823940585,\r\n    \"2021-40\": 0.4702329594477998,\r\n    \"2021-41\": 0.474321503131524,\r\n    \"2021-42\": 0.4914735461303017,\r\n    \"2021-43\": 0.5387374461979914\r\n  }]\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n  json_array = json_array.set_index('row')\r\n\r\n  var tposed = json_array.transpose()\r\n  tposed = tposed.reset_index()\r\n  console.log( json_array)\r\n  console.log( tposed )\r\n  // const data = getData( 'jsonArray/data.json' )\r\n  //\r\n  // var json_array = new jsonArray( data )\r\n  //\r\n  // json_array = json_array.slice(5,10)\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      Original DataFrame with a single row and many columns\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'PreTranspose'}\r\n        />\r\n\r\n      <br/>\r\n      Transposed DataFrame with many rows and a single column\r\n      <tposed.react.semanticUI.Table\r\n        tableName = {'PostTranspose'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = []\r\n  for( let i=0; i < 4; i++ ){\r\n    data.push({id: i, value: i})\r\n  }\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n\r\n  // const mapping = {UP16009: 'Value1', UP16012: 'Value2'}\r\n  const df1 = json_array.insert({id: 'A', value: 'A'}, 0 )\r\n  const df2 = json_array.insert({id: 'A', value: 'A'}, 2 )\r\n  // const df2 = json_array.replace('CATEGORY1', mapping, {newCol: 'CAT_NEW'} )\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      replacing the values in the original column\r\n      <df1.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n      <br/>\r\n\r\n      creating a new column with the mapped values\r\n      <df2.react.semanticUI.Table\r\n        tableName = {'Position 2'}\r\n        />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data.slice(8,20) )\r\n\r\n\r\n  const mapping = {UP16009: 'Value1', UP16012: 'Value2'}\r\n  const df1 = json_array.replace('CATEGORY1', mapping )\r\n  const df2 = json_array.replace('CATEGORY1', mapping, {newCol: 'CAT_NEW'} )\r\n\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return (\r\n    <div>\r\n      replacing the values in the original column\r\n      <df1.react.semanticUI.Table\r\n        tableName = {'AccordianTable'}\r\n        columns={['CATEGORY1', 'CATEGORY2']}\r\n        />\r\n\r\n      <br/>\r\n\r\n      creating a new column with the mapped values\r\n      <df2.react.semanticUI.Table\r\n        tableName = {'AccordianTable'}\r\n        columns={['CATEGORY1', 'CAT_NEW', 'CATEGORY2']}\r\n        />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n  var ser = json_array.toSeries('CATEGORY1')\r\n\r\n\r\n  console.log( ser )\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return(\r\n    <div>\r\n      <json_array.react.semanticUI.Table />\r\n      <Button\r\n        primary\r\n        onClick={() => json_array.toCsv('extract.csv')}\r\n        >\r\n        Download to Csv\r\n      </Button>\r\n\r\n    </div>\r\n  )\r\n  // return (\r\n  //   <groups.react.semanticUI.Table\r\n  //     tableName = {'AccordianTable'}\r\n  //     columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n  //\r\n  //     accordian={true}\r\n  //     accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n  //     accordianHeader = {true}\r\n  //     sortable={true}\r\n  //     />\r\n  // )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  // var groups = json_array.groupby(['CATEGORY1', 'CATEGORY2'])\r\n\r\n\r\n  console.log( json_array.value_counts('CATEGORY1') )\r\n  console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return( <div> work in progress </div>)\r\n  // return (\r\n  //   <groups.react.semanticUI.Table\r\n  //     tableName = {'AccordianTable'}\r\n  //     columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n  //\r\n  //     accordian={true}\r\n  //     accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n  //     accordianHeader = {true}\r\n  //     sortable={true}\r\n  //     />\r\n  // )\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'BasicFunctions/config.json', true)\r\nconfig = importConfig(config, 'datetime/config.json', false)\r\nconfig = importConfig(config, 'toSeries/config.json', false)\r\nconfig = importConfig(config, 'ValueCounts/config.json', false)\r\nconfig = importConfig(config, 'Extract/config.json', false)\r\n","import React from 'react';\r\n\r\nimport moment from 'moment'\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = []\r\n  for( let i=0; i < 3; i++ ){\r\n    data.push({id: i, date: moment().subtract({days:i})})\r\n  }\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n  const df1 = json_array.dt.add('date', {days:1})\r\n  const df2 = json_array.dt.sub('date', {days:1})\r\n\r\n  return (\r\n    <div>\r\n      Original Data\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Original'}\r\n        />\r\n\r\n      1 Day added to each date\r\n      <df1.react.semanticUI.Table\r\n        tableName = {'Original'}\r\n        />\r\n\r\n      1 Day subtracted from each date\r\n      <df2.react.semanticUI.Table\r\n        tableName = {'Original'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport moment from 'moment'\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = []\r\n  for( let i=0; i < 4; i++ ){\r\n    data.push({id: i, date: moment().subtract({days:i})})\r\n  }\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n  json_array = json_array.dt.date('date')\r\n\r\n  return (\r\n    <div>\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = [\r\n    {id: 1, date: '2021-10-01'},\r\n    {id: 2, date: '2021-09-28'},\r\n    {id: 3, date: '2021-10-03'},\r\n  ]\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n  const df1 = json_array.dt.to_datetime('date', {inplace: true})\r\n  console.log( df1.dtypes )\r\n  const df2 = df1.sort_values('date', {inplace: true})\r\n  console.log( df2.dtypes )\r\n\r\n  json_array = json_array.dt.fill_days('date')\r\n\r\n  return (\r\n    <div>\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = [\r\n    {id: 3, WEEK: 5, YEAR: 2021},\r\n    {id: 4, WEEK: 2, YEAR: 2021},\r\n    {id: 1, WEEK: 48, YEAR: 2020},\r\n    {id: 2, WEEK: 50, YEAR: 2020},\r\n  ]\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n  json_array = json_array.dt.fill_weeks()\r\n\r\n  return (\r\n    <div>\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport moment from 'moment'\r\n\r\nimport jsonArray from 'jsonArray'\r\n\r\nexport default function DevExample( props ){\r\n\r\n\r\n  var data = []\r\n  for( let i=0; i < 4; i++ ){\r\n    data.push({id: i, date: moment().subtract({days:i})})\r\n  }\r\n\r\n\r\n  var json_array = new jsonArray(data)\r\n\r\n  json_array = json_array.dt.week('date')\r\n\r\n  return (\r\n    <div>\r\n      <json_array.react.semanticUI.Table\r\n        tableName = {'Position 1'}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  var ser = json_array.toSeries('CATEGORY1')\r\n\r\n\r\n  console.log( ser )\r\n  // console.log( json_array.value_counts(['CATEGORY1', 'CATEGORY2'] ) )\r\n\r\n  return( <div> <ser.react.semanticUI.Table /></div>)\r\n  // return (\r\n  //   <groups.react.semanticUI.Table\r\n  //     tableName = {'AccordianTable'}\r\n  //     columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n  //\r\n  //     accordian={true}\r\n  //     accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n  //     accordianHeader = {true}\r\n  //     sortable={true}\r\n  //     />\r\n  // )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var data = [\r\n    {\"WEEK\":1,\"PRODUCT\":\"A\", \"VALUE\":97.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"A\", \"VALUE\":96.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"A\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"A\", \"VALUE\":94.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"A\", \"VALUE\":93.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"A\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":1,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"B\", \"VALUE\":96.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"B\", \"VALUE\":95.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"B\", \"VALUE\":94.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"B\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"B\", \"VALUE\":91.08416666666666},\r\n    {\"WEEK\":1,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\r\n    {\"WEEK\":2,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":3,\"PRODUCT\":\"C\", \"VALUE\":93.08416666666666},\r\n    {\"WEEK\":4,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":5,\"PRODUCT\":\"C\", \"VALUE\":92.08416666666666},\r\n    {\"WEEK\":6,\"PRODUCT\":\"C\", \"VALUE\":91.08416666666666},\r\n    ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  // pivot the table\r\n  const pivot = json_array.pivot_table(\r\n    'PRODUCT',\r\n    'WEEK',\r\n    'sum',\r\n    'VALUE'\r\n  )\r\n\r\n  // extract a list of columns\r\n  const columns = pivot.columns.filter(r => r !== 'row')\r\n\r\n  data = []\r\n\r\n  // combine the data for each row including data for columns with missing data\r\n  for( let i=0; i < pivot.length; i++ ){\r\n    var row = []\r\n    var id = pivot[i]['row']\r\n    console.log( 'what is the id', id)\r\n    for( let j=0; j < columns.length; j++ ){\r\n      row.push(pivot[i][columns[j]])\r\n    }\r\n    data.push( series(id, row) )\r\n  }\r\n\r\n\r\n  console.log( data )\r\n  console.log( options(data) )\r\n\r\n  // var option = json_array.echartsOptions\r\n  // option = option.scatter({\r\n  //   colx:'WEEK',\r\n  //   coly:'VALUE'\r\n  // })\r\n  //\r\n\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {options(data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nfunction series( id, data ){\r\n  return {\r\n      name: id,\r\n      type: 'line',\r\n      stack: 'stack',\r\n      smooth: true,\r\n      lineStyle: {\r\n          width: 0\r\n      },\r\n      showSymbol: false,\r\n      areaStyle: {\r\n          opacity: 0.8,\r\n      //     color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n      //         offset: 0,\r\n      //         color: 'rgba(128, 255, 165)'\r\n      //     }, {\r\n      //         offset: 1,\r\n      //         color: 'rgba(1, 191, 236)'\r\n      //     }])\r\n      },\r\n      emphasis: {\r\n          focus: 'series'\r\n      },\r\n      data: data\r\n  }\r\n\r\n}\r\n\r\nfunction options( series ){\r\n\r\n  return {\r\n    color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\r\n    // title: {\r\n    //     text: '渐变堆叠面积图'\r\n    // },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                backgroundColor: '#6a7985'\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5', 'Line 6']\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: series\r\n};\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions.bar({\r\n    colx: '__index__',\r\n    coly: ['COUNT', '__index__'],\r\n    horizontal: true,\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key={`Pareto`}\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions.pareto({\r\n    col: 'CATEGORY1',\r\n    ratio: true,\r\n  })\r\n\r\n  console.log( json_array)\r\n  console.log(json_array.sum('COUNT'))\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key={`Pareto`}\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Bar\r\n      colx='id'\r\n      coly='COUNT'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var stack_col = 'CATEGORY2'\r\n\r\n  var json_array = new jsonArray( data )\r\n  // create a pivot table so there is a unique column for each\r\n  // category you wish to stack (CATEGORY2 in this case)\r\n  var pivot = json_array.pivot_table('CATEGORY1', stack_col, 'count')\r\n\r\n  // retrieve the unique values for column you wish to stack\r\n  const stacked_id = json_array.unique(stack_col)\r\n\r\n  console.log( pivot)\r\n  console.log( stacked_id)\r\n  return(\r\n    <pivot.react.echarts.Bar\r\n      colx = 'row'\r\n      coly = {stacked_id}\r\n      stacked = {true}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var stack_col = 'CATEGORY2'\r\n\r\n  var json_array = new jsonArray( data )\r\n  // create a pivot table so there is a unique column for each\r\n  // category you wish to stack (CATEGORY2 in this case)\r\n  var pivot = json_array.pivot_table('CATEGORY1', stack_col, 'count')\r\n  var pivot2 = json_array.pivot_table('CATEGORY1', stack_col, 'count')\r\n\r\n  // retrieve the unique values for column you wish to stack\r\n  const stacked_id = json_array.unique(stack_col)\r\n\r\n\r\n  var option = pivot.echartsOptions.bar({\r\n    colx: 'row',\r\n    coly: stacked_id,\r\n    stacked: 'series1'\r\n  })\r\n\r\n  option = option.append_series(\r\n    pivot2.echartsSeries.bar({\r\n      colx: 'row',\r\n      coly: stacked_id,\r\n      stacked: 'series2'\r\n    })\r\n  )\r\n\r\n  return(\r\n    <pivot.react.echarts.Echarts\r\n      key={`Pareto`}\r\n      option = {option}\r\n      />\r\n  )\r\n  // return(\r\n  //   <json_array.react.echarts.Echarts\r\n  //     key={`Pareto`}\r\n  //     option = {option}\r\n  //     />\r\n  // )\r\n\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions.bar({\r\n    colx: '__index__',\r\n    coly: ['COUNT', '__index__']\r\n  })\r\n\r\n  console.log( option)\r\n  // option['series'] = [\r\n  //   {\r\n  //     name: 'COUNT',\r\n  //     type: 'bar',\r\n  //     barGap: 0,\r\n  //     // label: labelOption,\r\n  //     emphasis: {\r\n  //       focus: 'series'\r\n  //     },\r\n  //     data: json_array.map(r=>r.COUNT)\r\n  //   },\r\n  //   {\r\n  //     name: 'id',\r\n  //     type: 'bar',\r\n  //     // label: labelOption,\r\n  //     emphasis: {\r\n  //       focus: 'series'\r\n  //     },\r\n  //     data: json_array.map(r=>r.id)\r\n  //   }\r\n  // ]\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key={`Pareto`}\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      allSample = {true}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function AllSamples( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      overlayFilter = {r => r.CATEGORY2 === '71F00295B-05'}\r\n      colorBy='CATEGORY2'\r\n\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Boxplot\r\n      colx='CATEGORY1'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option = option.axhline( 3.5 )\r\n\r\n  \r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.selection()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      echartsStyle={{height:'500px'}}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({scroll:true})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({sliders: {xAxis: true, yAxis: true}})\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoomslider'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom({\r\n    scroll: true,\r\n    yAxis: true,\r\n    sliders: {yAxis:true}\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const [selected, setSelected] = React.useState()\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <json_array.react.echarts.Echarts\r\n        key='selection'\r\n        option = {option}\r\n        onClick={(val) => setSelected(val.data)}\r\n        />\r\n\r\n      {(selected === undefined) ? null : <h2>Selected -- {selected.join(',')}</h2>}\r\n\r\n  </div>\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DevelopmentExample( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx:'COUNT',\r\n    coly:'id',\r\n    colorBy:'CATEGORY2'\r\n  })\r\n\r\n  option.toolbox()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option ={option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  console.log( data )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Heatmap\r\n      colx='__index__'\r\n      coly='COUNT'\r\n      value='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/errorbars.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'INDEX',\r\n    coly:'AVG'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG',\r\n      min:'MIN',\r\n      max:'MAX',\r\n    })\r\n  )\r\n\r\n  console.log( json_array)\r\n\r\n  option.xAxis[0].rotate()\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/errorbars.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.line({\r\n    colx:'INDEX',\r\n    coly:'AVG'\r\n  })\r\n\r\n  option = option.append_series(\r\n    json_array.echartsSeries.errorbars({\r\n      colx:'__index__',\r\n      avg:'AVG',\r\n      min:'MIN',\r\n      max:'MAX',\r\n    })\r\n  )\r\n\r\n  option.xAxis[0].rotate()\r\n  option.xAxis[0].max = json_array.length\r\n  option.xAxis[0].min = -1\r\n\r\n\r\n  option.xtick_padding( 100 )\r\n\r\n  option = option.highlight({\r\n    colx:'WP_LOTID',\r\n    coly:'AVG_YIELD',\r\n    value: '9941N',\r\n\r\n  })\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleLine( props ){\r\n\r\n  const data = getData( 'jsonArray/errorbars.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Line\r\n      colx='INDEX'\r\n      coly='AVG'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {\"START_TIME\":\"2021-02-24 04:32:01\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-13 19:15:32\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69644.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-22 06:09:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70094.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-06 17:28:18\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:35:14\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 01:13:39\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-07 21:40:40\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70491.1X\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 07:42:45\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 19:43:32\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-07 03:49:22\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70484.1A\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-22 13:21:03\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69643.1W\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 14:05:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-26 07:41:31\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70099.1L\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-25 21:17:36\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 04:18:51\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70106.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-25 02:12:10\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 03:55:42\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70489.1L\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 17:33:24\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70486.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-11 16:07:48\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71012.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:58\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-24 06:30:56\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69639.1A\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-16 08:49:56\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 10:03:11\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70101.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-09 21:34:30\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70483.1J\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 14:09:28\",\"HOLD_CODE\":\"AW03\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 18:25:51\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71008.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 01:25:29\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ71018.1T\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-24 18:41:14\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70103.1H\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 23:08:54\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70096.1K\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-10 13:48:53\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70097.1C\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-13 11:29:21\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ70490.1F\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-23 20:52:06\",\"HOLD_CODE\":\"\",\"CLASSPROBE\":true,\"MASK\":\"N06G\",\"LOT\":\"TZ69647.1N\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-14 12:30:11\",\"HOLD_CODE\":\"WT04\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-03-02 18:32:23\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69221.1R\",\"FAB\":\"CHDFAB\",\"QRB\":true,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-15 03:36:57\",\"HOLD_CODE\":\"WT01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ71011.1X\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":true,\"FORCE_INK\":true,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-02-23 10:26:55\",\"HOLD_CODE\":\"AT06\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69253.1W\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":false,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"},\r\n    {\"START_TIME\":\"2021-03-14 17:21:56\",\"HOLD_CODE\":\"WQ01\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ70500.1C\",\"FAB\":\"CHD\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":true,\"SITE\":\"CHD\"},\r\n    {\"START_TIME\":\"2021-02-28 04:32:00\",\"HOLD_CODE\":\"WQ02\",\"CLASSPROBE\":false,\"MASK\":\"N06G\",\"LOT\":\"TZ69641.1K\",\"FAB\":\"CHDFAB\",\"QRB\":false,\"DEV\":true,\"SBL\":false,\"FORCE_INK\":false,\"SITE\":\"ATTJ\"}]\r\n\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column('type', r => {\r\n    if(r.QRB === true) return 'QRB'\r\n    if(r.FORCE_INK === true) return 'FORCE_INK'\r\n    if(r.DEV === true) return 'DEV'\r\n    if(r.SBL === true) return 'SBL'\r\n    return 'OTHER'\r\n  })\r\n\r\n  // const col = 'type'\r\n  // const group = json_array.groupby([col])\r\n  //\r\n  // console.log( group )\r\n  var option = json_array.echartsOptions\r\n  option = option.pieFromSeries({\r\n    col: 'type'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='pieFromSeries'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = [\r\n    {value: 1048, name: 'Bubba'},\r\n    {value: 735, name: 'Churro'},\r\n    {value: 580, name: 'Oates'},\r\n    {value: 484, name: 'Pistachio'},\r\n    {value: 300, name: 'Stu'}\r\n  ]\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.pie({\r\n    value: 'value',\r\n    label: 'name'\r\n  })\r\n\r\n  option.legend('left')\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='zoom'\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n  \r\n  var col = 'CATEGORY1'\r\n  var groups = json_array.groupby([col])\r\n\r\n  var option = groups.echartsOptions\r\n  option = option.radar({\r\n    col:col,\r\n    value:'count'\r\n  })\r\n\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\n\r\nexport default function SimplePie( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n  //\r\n  var col = 'CATEGORY1'\r\n  var groups = json_array.groupby([col])\r\n\r\n  //\r\n  // generate the radar plot grid\r\n  var indicator = []\r\n  groups.forEach( row => {\r\n    var maxValue = groups.max('count')\r\n    if( props.maxValue !== undefined ) maxValue = props.maxValue[col]\r\n\r\n    indicator.push({name: row[col], max: maxValue})\r\n  })\r\n\r\n\r\n\r\n  var option = {\r\n    radar: {\r\n      // shape: 'circle',\r\n      indicator: indicator\r\n    },\r\n    series: [\r\n      {\r\n        type: 'radar',\r\n        data: [\r\n          {\r\n            value: groups.map(r => r.count),\r\n            name: col\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  var option = json_array.echartsOptions\r\n  // option = option.scatter({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   // label: true\r\n  // })\r\n\r\n  option = option.rectGrid({\r\n      colx: 'x',\r\n      coly: 'y',\r\n      value: 'v',\r\n      label: true\r\n  })\r\n\r\n  option = option.append_series(\r\n      json_array.echartsSeries.circle({\r\n          data: [2,2],\r\n          radius: 150\r\n      })\r\n    )\r\n\r\n  // option = option.rectGrid({\r\n  //   colx: 'x',\r\n  //   coly: 'y',\r\n  //   // value: 'v',\r\n  //   label: true\r\n  // })\r\n  //\r\n  option.zoom({\r\n    scroll: true,\r\n    sliders : {\r\n      xAxis: true,\r\n      yAxis: true\r\n    }\r\n  })\r\n  // // option['xAxis'][0]['show'] = false\r\n  // // option['xAxis'][0]['min'] = function (value) { return value.min }\r\n  // // option['xAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['yAxis'][0]['min'] = function (value) { return  value.min - 1 }\r\n  // // option['yAxis'][0]['max'] = function (value) { return 6 }\r\n  // // option['xAxis']['max'] = 6\r\n  // // option['yAxis']['min'] = -1\r\n  // // option['yAxis']['max'] = 6\r\n  //\r\n  // option['dataZoom'] = [\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           xAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //       },\r\n  //       {\r\n  //           type: 'slider',\r\n  //           show: true,\r\n  //           yAxisIndex: [0],\r\n  //           startValue: -1,\r\n  //           endValue: 6\r\n  //           // left: '93%',\r\n  //           // start: 0,\r\n  //           // end: 5\r\n  //       },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     xAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // },\r\n  //       // {\r\n  //       //     type: 'inside',\r\n  //       //     yAxisIndex: [0],\r\n  //       //     // start: 1,\r\n  //       //     // end: 5\r\n  //       // }\r\n  //   ]\r\n\r\n  console.log( option )\r\n  return(\r\n    <div>\r\n      this is still custom\r\n      <json_array.react.echarts.Echarts\r\n        key='zoomslider'\r\n        option = {option}\r\n        />\r\n    </div>\r\n\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  var json_array =[\r\n    [0,0,5],[1,0,5],[2,0,5],[3,0,5],[4,0,5],\r\n    [0,1,4],[1,1,2],[2,1,5],[3,1,5],[4,1,5],\r\n    [0,2,3],[1,2,3],[2,2,5],[3,2,5],[4,2,3],\r\n    [0,3,5],[1,3,5],[2,3,5],[3,3,1],[4,3,2],\r\n    [0,4,5],[1,4,5],[2,4,5],[3,4,5],[4,4,0],\r\n  ]\r\n\r\n\r\n  json_array = new jsonArray( json_array )\r\n  json_array = json_array.create_column('x', r=>r[0])\r\n  json_array = json_array.create_column('y', r=>r[1])\r\n  json_array = json_array.create_column('v', r=>r[2])\r\n\r\n  return(\r\n    <json_array.react.echarts.RectGrid\r\n      colx = {'x'}\r\n      coly = {'y'}\r\n      value = {'v'}\r\n      label = {true}\r\n      />\r\n    // echartsStyle={{height:'500px'}}\r\n\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColorByScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      colorBy='CATEGORY2'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.label(r => r.CATEGORY2 === '71F00295B-07')\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      label='label'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  return(\r\n    <json_array.react.echarts.Scatter\r\n      colx='COUNT'\r\n      coly='id'\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.scatter({\r\n    colx:'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n  option.zoom()\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      key='selection'\r\n      option = {option}\r\n      onSelect={(val) => console.log('sss', val.data)}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nimport { Divider, Header } from 'semantic-ui-react'\r\n\r\nexport default function SimpleScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n  var json_array = new jsonArray( data )\r\n\r\n\r\n  // retrieve the echarts plot option calss\r\n  var option = json_array.echarts.options\r\n\r\n  // generate a scatter plot format\r\n  option.scatter({\r\n    colx: 'COUNT',\r\n    coly: 'id',\r\n  })\r\n\r\n  console.log( json_array )\r\n  option.tooltip.from_DataFrame(\r\n    data,\r\n    ['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']\r\n  )\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n\r\n      <Divider horizontal>Example 1</Divider>\r\n      <Header as='h4'>Tooltips are provided as a parameter</Header>\r\n      <json_array.react.echarts.Scatter\r\n        colx='COUNT'\r\n        coly='id'\r\n        tooltip = {['COUNT', 'id', 'NUMBER','CATEGORY1', 'CATEGORY2']}\r\n        />\r\n\r\n      <Divider horizontal>Example 2</Divider>\r\n      <Header as='h4'>Tooltips are added to the option. This enables more customization</Header>\r\n      <json_array.react.echarts.Echarts\r\n        option ={option}\r\n        />\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.waterfall({\r\n    colx: 'id',\r\n    coly:'COUNT'\r\n  })\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function StackedScatter( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column('completed', r => 0.25)\r\n\r\n  var option = json_array.echartsOptions\r\n  option = option.waterfall({\r\n    colx: 'id',\r\n    coly:'COUNT',\r\n    colz:'completed'\r\n  })\r\n\r\n\r\n  return(\r\n    <json_array.react.echarts.Echarts\r\n      option = {option}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'Area/config.json', false)\r\nconfig = importConfig(config, 'Bar/config.json', false)\r\nconfig = importConfig(config, 'Boxplot/config.json', false)\r\nconfig = importConfig(config, 'Custom/config.json', false)\r\nconfig = importConfig(config, 'Format/config.json', false)\r\nconfig = importConfig(config, 'Heatmap/config.json', false)\r\nconfig = importConfig(config, 'Line/config.json', false)\r\nconfig = importConfig(config, 'Radar/config.json', false)\r\nconfig = importConfig(config, 'RectGrid/config.json', false)\r\nconfig = importConfig(config, 'Scatter/config.json', false)\r\nconfig = importConfig(config, 'Selection/config.json', false)\r\nconfig = importConfig(config, 'Tooltips/config.json', false)\r\nconfig = importConfig(config, 'Waterfall/config.json', true)\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  console.log( ser.index )\r\n  console.log( ser.values )\r\n\r\n  return( <div> see console... </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  console.log( 'values in ascending order', ser.sort_values(true) )\r\n  console.log( 'values in descending order', ser.sort_values(false) )\r\n\r\n  return( <div> <ser.react.semanticUI.Table /> </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  console.log( 'Unique Values', ser.unique() )\r\n\r\n  return( <div> see console... </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n  \r\n  var ser = new Series({index: index, value: value})\r\n\r\n  console.log( 'pareto', ser.value_counts() )\r\n\r\n  return( <div> see console... </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id).slice(0,5)\r\n  const value = data.map(r => r.COUNT).slice(0,5)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  var serAdd = ser.add(2)\r\n  var serSub = ser.sub(2)\r\n  var serMultiply = ser.multiply(2)\r\n  var serDivide = ser.divide(2)\r\n\r\n  return(\r\n    <div>\r\n    original series\r\n    <ser.react.semanticUI.Table />\r\n\r\n    added 2\r\n    <serAdd.react.semanticUI.Table />\r\n\r\n    subtract 2\r\n    <serSub.react.semanticUI.Table />\r\n\r\n    multiply 2\r\n    <serMultiply.react.semanticUI.Table />\r\n\r\n\r\n    Divide 2\r\n    <serDivide.react.semanticUI.Table />\r\n\r\n   </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: value, value: index})\r\n\r\n  console.log( ser.duplicate('drop') )\r\n  console.log( ser.duplicate('sum') )\r\n\r\n  return( <div> see console... </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id).slice(0,5)\r\n  const value = data.map(r => r.COUNT).slice(0,5)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  ser.index = [0,1,2,3,4]\r\n  ser.replace( ['a','b','c','d','e'])\r\n  \r\n  return( <div> <ser.react.semanticUI.Table /> </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id).slice(0,5)\r\n  const value = data.map(r => r.COUNT).slice(0,5)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  ser = ser.replace({1: 'first', 3: 'second', 5: 'third'})\r\n  ser = ser.replace_index({0: 'first', 7: 'second', 16: 'third'})\r\n\r\n\r\n  // ser.index = [0,1,2,3,4]\r\n  // ser.replace( ['a','b','c','d','e'])\r\n\r\n  return( <div> <ser.react.semanticUI.Table /> </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function Example( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  console.log( ser.toObject() )\r\n\r\n  return( <div> see console... </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n  // console.log( ser )\r\n  // console.log(ser.Bar() )\r\n  return(\r\n    <div>\r\n      <ser.react.echarts.Pareto />\r\n    </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n  // console.log( ser )\r\n  // console.log(ser.Bar() )\r\n  return(\r\n    <div>\r\n      <ser.react.echarts.Pie showPercent={true} onClick={(val) => console.log(val)}/>\r\n    </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  ser = ser.pareto_crop(5)\r\n\r\n  return( <div> <ser.react.semanticUI.Table /> </div>)\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value = data.map(r => r.COUNT)\r\n\r\n  var ser = new Series({index: index, value: value})\r\n\r\n  return(\r\n    <div>\r\n      <ser.react.semanticUI.Table />\r\n    </div>)\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'BasicFunctions/config.json', false)\r\nconfig = importConfig(config, 'Pareto/config.json', false)\r\nconfig = importConfig(config, 'Table/config.json', false)\r\nconfig = importConfig(config, 'Echarts/config.json', false)\r\nconfig = importConfig(config, 'toDataFrame/config.json', true)\r\n","import React from 'react';\r\n\r\nimport Series from 'jsonArray/Series'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function ExampleComponent( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  const index = data.map(r => r.id)\r\n  const value1 = data.map(r => r.COUNT)\r\n  const value2 = data.map(r => r.CATEGORY1)\r\n\r\n  var ser1 = new Series({index: index, value: value1, name:'ser1'})\r\n  var ser2 = new Series({index: index, value: value2, name:'ser2'})\r\n\r\n  // change the index to ensure missing indices are handled properly\r\n  ser2[0].__index__ = 4\r\n  ser2[5].__index__ = 22\r\n\r\n  const df = ser1.merge(ser2)\r\n\r\n  return( <div> <df.react.semanticUI.Table /> </div>)\r\n\r\n}\r\n// <ser.react.semanticUI.Table />\r\n","import React from 'react';\r\n\r\nimport jsonArray from 'jsonArray'\r\nimport getData from 'Documentation/examples/getData'\r\n\r\nexport default function AccordianTable( props ){\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  var groups = json_array.groupby(['CATEGORY1', 'CATEGORY2'])\r\n\r\n\r\n  console.log( groups )\r\n  return (\r\n    <groups.react.semanticUI.Table\r\n      tableName = {'AccordianTable'}\r\n      columns={['CATEGORY1', 'CATEGORY2', 'count']}\r\n\r\n      accordian={true}\r\n      accordianColumns = {['id','VALUE', 'COUNT','image']}\r\n      accordianHeader = {true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filterable={true}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  console.log( data )\r\n  const columnGroups = {\r\n    id: 'id',\r\n    category: ['CATEGORY1','CATEGORY2'],\r\n    data: ['COUNT','VALUE', 'image']\r\n  }\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'NoHeader'}\r\n      columnGroups={columnGroups}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'NoHeader'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      showHeader={false}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var JsonArray = new jsonArray( data )\r\n  JsonArray = JsonArray.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <JsonArray.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      sortable={true}\r\n      lazyLoading = {true}\r\n      lazyLoadingStart = {5}\r\n      lazyLoadingStep = {5}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRowCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      multirowSpan={['COUNT']}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'MultiRow'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2']}\r\n      multirow={[['CATEGORY1', 'CATEGORY2'], ['CATEGORY1']]}\r\n      sortable={true}\r\n      rowOnClick = {(val) => alert(`row selected - ${val}`)}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ColumnFilters( props ){\r\n\r\n  const [filters, setFilters] = React.useState([])\r\n\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'ParentFilterCol'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      filters = {filters}\r\n      columnFilterOnChange = { (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value !== '' ) temp.push( content )\r\n        setFilters( temp )\r\n      }}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function ParentSortColumn( props ){\r\n\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columnOnClick={(content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }}\r\n      sortBy = {sortBy}\r\n      sortAscending = {sortAscending}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function CheckboxTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n\r\n  json_array = json_array.create_column( 'checkboxField', () => false )\r\n  json_array = json_array.astype({checkboxField: 'checkbox', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['checkboxField','COUNT','VALUE','id','CATEGORY1','CATEGORY2' ]}\r\n      sortable={true}\r\n      cellOnClick={{\r\n        checkboxField: (val) => {\r\n          alert('checkbox selected. see console for details')\r\n          console.log( 'cell was selected', val)\r\n      }}}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'data'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      alternateStyle= {true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      tdStyle ={{padding: '150px', color:'blue', backgroundColor: 'red'}}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function CustomCellColoring( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  // compute the cell coloring outside of the table and pass it in as a param\r\n  const cellBackgroundColor = [\r\n    {COUNT: 'red'},\r\n    {},\r\n    {COUNT: 'green',VALUE: 'green',id: 'green'},\r\n    {id: 'yellow'}\r\n  ]\r\n  \r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      cellBackgroundColor={cellBackgroundColor}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function DataDrivenColoring( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n  // compute the cell coloring outside of the table and pass it in as a param\r\n  var cellBackgroundColor = []\r\n  json_array.forEach(row => {\r\n    if(row.COUNT < 4) cellBackgroundColor.push({COUNT: 'red'})\r\n    if(row.COUNT > 4) cellBackgroundColor.push({COUNT: 'green'})\r\n    if(row.COUNT === 4) cellBackgroundColor.push({COUNT: 'yellow'})\r\n  })\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      cellBackgroundColor={cellBackgroundColor}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function Hyperlink( props ){\r\n\r\n  var data = getData( 'jsonArray/data.json' )\r\n\r\n  data[0]['CATEGORY1'] = 'www.google.com'\r\n\r\n  // var mapping = {value: `thisurl`}\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({\r\n    image: 'image',\r\n    VALUE:'percentage',\r\n    CATEGORY1: 'hyperlink'\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      columnNames={{COUNT: 'NewTitle'}}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      columnNames={{COUNT: 'NewTitle'}}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'SimpleTable'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport jsonArray from \"jsonArray\";\r\nimport getData from 'Documentation/examples/getData'\r\n\r\n\r\nexport default function SimpleTable( props ){\r\n\r\n  const data = getData( 'jsonArray/data.json' )\r\n\r\n  var json_array = new jsonArray( data )\r\n  json_array = json_array.astype({image: 'image', VALUE:'percentage'})\r\n\r\n\r\n  return (\r\n    <json_array.react.semanticUI.Table\r\n      tableName = {'TableFormat'}\r\n      columns={['COUNT','VALUE','id','CATEGORY1','CATEGORY2', 'image']}\r\n      tdStyle={{padding:'2px 5px 2px 5px'}}\r\n      sortable={true}\r\n      />\r\n  )\r\n\r\n}\r\n","\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./' + path)\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return config.concat(localConfig)\r\n}\r\n\r\n\r\nexport var config = []\r\n\r\nconfig = importConfig(config, 'Accordian/config.json', false)\r\nconfig = importConfig(config, 'Header/config.json', true)\r\nconfig = importConfig(config, 'LazyLoading/config.json', false)\r\nconfig = importConfig(config, 'MultiRow/config.json', false)\r\nconfig = importConfig(config, 'Style/config.json', false)\r\nconfig = importConfig(config, 'Filtering/config.json', false)\r\nconfig = importConfig(config, 'SpecialContent/config.json', false)\r\n","/**\n * JSON Array\n * ===============\n *\n * Extend the Array components to include various functions useful\n * for processing an array of JSON objects\n *\n * :Author: Nik Sumikawa\n * :Date: Feb 11, 2020\n */\n\n\nexport default class jsonArray extends Array{\n\n  constructor(array=[], inplace, dtypes) {\n\n    super()\n\n    // to avoid max recursion depth, we push each row separately\n    array.map( row => this.push(row))\n\n  }\n\n\n  // returns all columns in the jsonArray\n  get columns(){\n    var columns = []\n\n    var max_length = this.length\n    if( max_length > 50 ) max_length = 50\n\n    for( var i=0; i < max_length; i++ ){\n      columns = columns.concat(Object.keys(this[i]))\n    }\n\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\n  }\n\n  /**\n   * Replace the column names with those provided by the column array\n   * @param  {Array} columns array of column names\n   * @return {Array}         jsonArray with new column names\n   */\n  set columns( columns ){\n      const keys = this.columns\n\n      // define a mapping between the current and new column names\n      var mapping = {}\n      for( var i=0; i < Math.min(keys.length, columns.length); i++ ){\n        mapping[keys[i]] =columns[i]\n      }\n\n      // return a json array with the new mapping applied\n      return this.rename( mapping, {inplace: true} )\n  }\n\n  // resets the index value\n  reset_index(props={}){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(props['inplace'])\n\n    for( var i=0; i < array.length; i++ ){\n      array[i]['__index__'] = i\n    }\n    return array\n  }\n\n  // return all values for the specified column\n  values( col ){\n    return [...this].map(row => row[col])\n  }\n\n  /**\n   * Returns an array of index values\n   * @return {Array} Array of index values\n   */\n  get index(){\n    return [...this].map(row => row.__index__)\n  }\n\n\n\n  append( df ){\n    return new jsonArray([...this].concat(df))\n  }\n\n  /**\n   * Applies a given function to a column and returns a DataFrame\n   * with the results. The results can be written inplace or a nedw\n   * column created when specified as a parameter\n   * @param  {string} col     column name\n   * @param  {function} func  function to apply to the column\n   * @param  {string} newCol  when provided a new column is produced\n   * @return {[type]}      [description]\n   */\n  apply( col, func, newCol ){\n\n    if( newCol === undefined ) newCol = col\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][newCol] = func(this[i][col])\n    }\n\n    return this\n  }\n\n  /**\n   * cretes a new column by applying the provided function to each row\n   * @param  {string} col     name of the column to create\n   * @param  {function} func  function to apply to the column\n   */\n   create_column( col, func){\n\n    for( var i=0; i < this.length; i++ ){\n      this[i][col] = func(this[i])\n    }\n\n    return this\n  }\n\n\n\n\n  /**\n   * overwrites the local index column with the provided column\n   * @param {String} col Column name\n   */\n  set_index( col, params={} ){\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < array.length; i ++ ){\n      array[i].__index__ = array[i][col]\n      delete array[i][col]\n    }\n\n    return array\n  }\n\n\n  // sorts the json array by the provided column\n  sort_values( col, ascending=true){\n\n    var array\n\n    //sort the table based on the ascending flag\n    if( ascending === true ){\n      array = this.sort((a, b) => a[col] > b[col] ? 1 : -1 )\n\n    }else{\n      array = this.sort((a, b) => a[col] < b[col] ? 1 : -1 )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Merge two DataFrames together\n   * @param  {Array} json_array           DataFrame to be merged\n   * @param  {Object} [params={how:'left'] how the DataFrames should be merged\n   * @param  {string} on                   index (col) to use for merging\n   * @return {Array}                      DataFrame containing the merged columns\n   */\n  merge( json_array, params={how:'left', on:'__index__'}  ){\n\n    var array = []\n    var df1, df2, index, a, b\n    // var primary_col, secondary_col, value\n\n    var col_left, col_right\n\n    // determine the columns to use for merging the left/right\n    // DataFrames based on the specified parameters\n    if( params.on !== undefined ){\n      col_left = params.on\n      col_right = params.on\n    }\n    if( params.on_right !== undefined ) col_right = params.on_right\n    if( params.on_left !== undefined ) col_left = params.on_left\n\n\n    // determine the merging criteria\n    switch( params.how ){\n      case 'left':\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n\n      case 'right':\n        df1 = [...json_array]\n        df2 = [...this]\n        // primary_col = col_right\n        // secondary_col = col_left\n        index = json_array.unique(col_right)\n        break;\n\n      // default to merge on left\n      default:\n        df1 = [...this]\n        df2 = [...json_array]\n        // primary_col = col_left\n        // secondary_col = col_right\n        index = this.unique(col_left)\n        break;\n    }\n\n    // var lookup = {}\n    // for( a = 0; a < df2.length; a++ ){\n    //   value = df2[a][secondary_col]\n    //\n    //   const keys = Object.keys(lookup)\n    //   if( keys.includes(value) ){\n    //     lookup[value].push( df2[a] )\n    //   }else{\n    //     lookup[value] = [df2[a]]\n    //   }\n    // }\n    //\n    // // pull the rows corresponding to the provided index value\n    // for( var a=0; a < df1.length; a++ ){\n    //   value = df1[a][secondary_col]\n    //\n    //   const lookupVal = lookup[value ]\n    //\n    //   // merge rows with similar index values (intersection). Create\n    //   // multiple rows when duplicate index values are present\n    //   if( lookupVal.length > 0 ){\n    //     for( b=0; b < lookupVal.length; b++ ){\n    //       array.push({...lookupVal[b], ...df1[a]})\n    //     }\n    //   }\n    //\n    //   // add the rows that have no overlap\n    //   if( lookupVal.length === 0  ){\n    //     array.push(df1[a])\n    //   }\n    //\n    // }\n\n    // pull the rows corresponding to the provided index value\n    for( var i=0; i < index.length; i++ ){\n      const value = index[i]\n      const df1_rows = df1.filter(r => r[col_left] === value)\n      const df2_rows = df2.filter(r => r[col_right] === value)\n\n      // merge rows with similar index values (intersection). Create\n      // multiple rows when duplicate index values are present\n      if( (df1_rows.length > 0)&(df2_rows.length > 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n          for( b=0; b < df2_rows.length; b++ ){\n            array.push({...df2_rows[b], ...df1_rows[a]})\n          }\n        }\n      }\n\n      // add the rows that have no overlap\n      if( (df1_rows.length > 0)&(df2_rows.length === 0) ){\n        for( a=0; a < df1_rows.length; a++ ){\n            array.push(df1_rows[a])\n        }\n      }\n\n    }\n\n    return new jsonArray( array, true )\n\n  }\n\n  /**\n   * Replaces undefined data with a given value. The values\n   * can be assigned globally or by column\n   * @param  {Object} [params={}] When a value is provided, it is assigned to all columns.\n   *                              Values can be assigne by column, by providing a value\n   *                              per colum in the parameter dictionary\n   * @return {Array}             DataFrame with missing values replaed\n   */\n  fillna( params={} ){\n\n    // duplicate the array to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    var i, j, columns, col, val\n\n    // fill missing values with unique values per column\n    // This assumes that the input is an object with a\n    // value for each column name\n    if( typeof params === 'object'){\n      columns = Object.keys(params)\n\n      // nothing to do when no inputs are provided\n      if( columns.length === 0) return array\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          val = params[col]\n          if( array[i][col] === undefined ) array[i][col] = val\n          if( array[i][col] === null ) array[i][col] = val\n          // if( isNaN(array[i][col]) ) array[i][col] = val\n        }\n      }\n\n    }else{\n\n      // fill all missing values with the same value\n      columns = array.columns\n\n      for( i=0; i < array.length; i ++ ){\n        for( j=0; j < columns.length; j++ ){\n          col = columns[j]\n          if( array[i][col] === undefined ) array[i][col] = params\n          if( array[i][col] === null ) array[i][col] = params\n          // if( isNaN(array[i][col]) ) array[i][col] = params\n        }\n      }\n    }\n\n    return array\n  }\n\n\n\n\n  // filters the json array based on the column and the provided value.\n  // The value can be either a single variable or an array\n  filter_column( col, value ){\n\n    if( Array.isArray(value) ){\n      return new jsonArray(\n        [...this].filter(row => value.includes(row[col])),\n        false\n       )\n    }else{\n      return new jsonArray(\n        [...this].filter(row => row[col] === value ),\n        false\n      )\n    }\n  }\n\n\n  filter( func ){\n    return new jsonArray( [...this].filter(func), false )\n  }\n\n  map( func ){\n    return [...this].map(func)\n  }\n\n  groupby( col ){\n\n    return new jsonArray( this.__groupby__( this, col ), true )\n  }\n\n\n  __groupby__( json_obj, atts, keys ){\n\n    // append the keys with the json object\n    if( atts.length === 0 ){\n      keys['json_obj'] = new jsonArray(json_obj)\n      keys['count'] = json_obj.length\n      return keys\n    }\n\n    // initial conditions for keys\n    if( keys === undefined ){ keys = {} }\n\n    var results = []\n\n    // const values = [...new Set(json_obj.map(row => row[atts[0]]))]\n    const values = json_obj.unique(atts[0], true)\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      const group = json_obj.filter( row => row[atts[0]] === val )\n\n      // deep copy the keys and append with the current key\n      var temp_keys = Object.assign({}, keys)\n      temp_keys[atts[0]] = values[i]\n\n      results = results.concat( this.__groupby__(group, atts.slice(1),  temp_keys) )\n    }\n\n    return results\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  count_values( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var counts = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      const val = values[i]\n      if( !unique.includes(val) ){\n        unique.push(val)\n        counts[val] = 0\n      }\n      counts[val]++\n    }\n\n    // map the unique object count back to a flat object\n    var buffer = []\n    for( i=0; i < unique.length; i++ ){\n      const split_val = unique[i].split(',')\n\n      //\n      const obj = {count: counts[unique[i]]}\n      for( var j=0; j < split_val.length; j++ ){\n        obj[columns[j]] = split_val[j]\n      }\n\n      buffer.push( obj )\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n  // Drops duplicates based on the specified column names. Only\n  // the first occurance is kept. Other duplicate management must\n  // be implemented\n  drop_duplicates( columns=[]){\n\n    if( columns.length === 0 ) columns = this.columns\n\n    const values = this.map(r => columns.map(s => r[s]).toString())\n\n    // create a buffer to hold the unique values\n    // and the rows corresponding to the unique values\n    var unique = []\n    var buffer = []\n\n    // track the unique values and only add the row to\n    // the buffer when it's value is unique\n    for( var i=0; i < values.length; i++ ){\n      if( !unique.includes(values[i]) ){\n          unique.push( values[i] )\n          buffer.push( this[i] )\n      }\n    }\n\n    return new jsonArray( buffer, true  )\n  }\n\n\n\n  pivot( columns ){\n\n    var pivot_table = []\n\n    if( columns === undefined ) columns = this.columns\n\n    for( var i=0; i < columns.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {column: columns[i]}\n\n      // add the column value for each row\n      for( var j=0; j < this.length; j++ ){\n        temp[j] = this[j][columns[i]]\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n  // converts a matrix into a flatten table (opposite of pivot table)\n  flatten( id_att = '__index__' ){\n\n    // extract a list of column names\n    const columns = this.columns\n\n    var table = []\n\n    for( var i=0; i < this.length; i++ ){\n      const row = this[i]\n\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n\n        // avoid a duplicate entry as the id attribute\n        if( col === id_att ) continue\n\n        table.push({\n          column: col,\n          row: row[id_att],\n          value:  row[col]\n        })\n      }\n    }\n\n    return new jsonArray( table, true )\n\n  }\n\n  // creates a pivot table based on the specified row and column.\n  // The summary type is used to compute the value of the pivot.\n  pivot_table( row, column, summaryType='count', value=undefined ){\n\n    var pivot_table = []\n\n    const row_val = this.unique( row )\n    const column_val = this.unique( column )\n\n\n    for( var i=0; i < row_val.length; i++ ){\n      // initialize the row to contain the column name\n      var temp = {row: row_val[i]}\n\n      const rval = row_val[i]\n      // const by_row = this.filter( r => r[row] === rval )\n      const by_row = [...this].filter( r => r[row] === rval )\n\n      // add the column value for each row\n      for( var j=0; j < column_val.length; j++ ){\n\n        const cval = column_val[j]\n        // const by_col = by_row.filter( r => r[column] === cval )\n        const by_col = [...by_row].filter( r => r[column] === cval )\n        // const by_col = [...this].filter( r => (r[row] === rval)&(r[column] === cval) )\n        // console.log( by_col )\n\n        var temp_json\n        switch( summaryType ){\n          // returns the number of rows for the current split\n          case 'count':\n            temp[column_val[j]] = by_col.length\n            break;\n\n          // returns the number of unique values for the current split\n          case 'unique':\n            // set defaults for missing parameter values\n            if( value === undefined ) value = '__index__'\n\n            temp_json = new jsonArray( by_col )\n            temp[column_val[j]] = temp_json.unique( value ).length\n            break;\n\n\n          default:\n            temp[column_val[j]] = by_col.length\n            break\n        }\n\n      }\n\n      // add the results to the final pivot table\n      pivot_table.push( temp )\n    }\n\n    return new jsonArray(pivot_table, true )\n  }\n\n\n\n  /**\n   * Creates a new column by merging the content from the columns\n   * specified in the columns attribute\n   * @param  {array} columns  array of column names\n   * @param  {String} col_name Name of the resulting column\n   * @param  {String} [sep='   ']            string delimiter\n   * @return {OBJECT}          jsonArray with the new column\n   */\n  combine( columns, col_name, sep=' ', params={} ){\n\n    var array = this.__inplace__(params['inplace'])\n\n    for( var i=0; i < this.length; i++ ){\n      // seed the value with the value from the first column\n      var temp = this[i][columns[0]]\n\n      for( var j=1; j < columns.length; j++ ){\n        temp = temp + sep + this[i][columns[j]]\n      }\n\n      array[i][col_name] = temp\n    }\n\n    array.dtypes[col_name] = 'string'\n    return array\n  }\n\n  combine_columns( col1, col2, col_name, sep=' ' ){\n    // creates a new column by merging the content of col 1 and 2 to\n    // form a new column\n    return this.combine([col1, col2], col_name, sep )\n  }\n\n\n  unique( col, ordered=false ){\n    // return all unique values for the specified column. When\n    // ordered is set to true, these values are sorted.\n\n    var unique_values = [...new Set([...this].map(row => row[col] ))]\n\n\n\n    if( ordered === true ){\n        // try to conver the values to numbers prior to sorting.\n        // use a non standard sorting to get the values sorted properly\n\n        switch( typeof unique_values[0] ){\n          case \"string\":\n            return unique_values.sort()\n\n          case \"boolean\":\n            return unique_values.sort()\n\n          default :\n            try{\n              unique_values = unique_values.map( x => +x)\n              unique_values = unique_values.sort(function(a,b){return a - b})\n            }catch{\n              // default to the standard sort\n              unique_values.sort()\n            }\n        }\n\n    }\n\n    return unique_values\n  }\n\n\n\n\n  /**\n   * Applies a threshold to the specified column\n   * @param  {function} func     function used to partition dataset\n   * @param  {string} res_col   column name containing the results\n   * @return {Array}            jsonArray containing res_col\n   */\n  label( func, params={} ){\n\n    const param_keys = Object.keys(params)\n\n    // set defaults for missing parameter values\n    if( !param_keys.includes('output_col') ) params['output_col'] = 'label'\n    if( !param_keys.includes('value') ) params['value'] = true\n    if( !param_keys.includes('default') ) params['default'] = false\n    if( !param_keys.includes('inplace') ) params['inplace'] = false\n\n    var array = this.__inplace__(params['inplace'])\n\n\n    // identify all samples identified by the rule\n    const sample_index = array.filter( func ).map( row => row.__index__ )\n\n    // create a boolean label, where parts in the sample set are true\n    for( var i=0; i < array.length; i ++ ){\n\n      // extract a list of columns name for the given row\n      const columns = Object.keys( array[i] )\n\n      // the value is true when it is included in the sample set\n      if( sample_index.includes( array[i].__index__ ) ){\n        array[i][params['output_col']] = params['value']\n        continue\n      }\n\n      // set the default value when no value exists\n      if( !columns.includes(params['output_col']) ){\n        array[i][params['output_col']] = params['default']\n        continue\n      }\n\n    }\n\n    return array\n  }\n\n  /**\n   * Copies the content from one column to a new column. This is\n   * non destructive, so if the column already exists, only the\n   * missing data will be copied over\n   * @param  {String} col     original column name\n   * @param  {String} new_col new column name\n   * @return {Object}         jsonArray with the new column added\n   */\n  copy_column( col, new_col, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      if(!columns.includes( new_col) ){\n        array[i][new_col] = array[i][col]\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * Returns a DataFrame containing only the specified column\n   * and the index\n   * @param  {array} columns array of column names\n   * @return {array}         json array containing the specified columns\n   */\n  select_columns( columns ){\n\n    var array = []\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < this.length; i++ ){\n\n      var row = {__index__: this[i].__index__}\n      // copy the specified columns for each row\n      for( var j=0; j < columns.length; j++ ){\n        const col = columns[j]\n        row[col] = this[i][col]\n      }\n\n      array.push( row )\n    }\n\n    return new jsonArray( array )\n  }\n\n  /**\n   * Drops columns from the DataFrame\n   * @param  {String or Array} columns String or Array of column names\n   * @return {OBJECT}         JsonArray without the specified columns\n   */\n  drop_columns( columns, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n\n      // delete the specified column when of string type\n      if( typeof columns === 'string' ){\n        delete array[columns]\n\n      // when a list is provided, delete all columns in the string\n      }else{\n\n        for( var j=0; j < columns.length; j++ ){\n          delete array[i][columns[j]]\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * renames columns\n   * @param  {object} mapping object containing the existing column name and new column name\n   * @return {object}         json array with the new column naming\n   */\n  rename( mapping, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const columns = Object.keys( mapping )\n\n    // rename the specified columns\n    for( var i = 0; i < array.length; i++ ){\n\n      const ex_columns = Object.keys( array[i] )\n\n      // create a new column based on the mapping and delete\n      // the existing one (taht was replaced)\n      for( var j=0; j < columns.length; j++ ){\n        // only replace the column when data exists for that column\n        if( ex_columns.includes(columns[j]) ){\n          const new_col = mapping[columns[j]]\n          array[i][new_col] = array[i][columns[j]]\n\n          // console.log( columns[j], typeof columns[j], typeof columns[j] instanceof 'string' )\n          delete array[i][columns[j]]\n\n        }\n      }\n    }\n\n    return new jsonArray( array )\n  }\n\n\n  /**\n   * replaces the values in the specified column with the given value\n   * based on the mapping\n   * @param  {String} col     original column name\n   * @param  {Object} mapping Object containing the value mapping\n   * @return {Object}         jsonArray with the new column added\n   */\n  replace( col, mapping={}, params={} ){\n\n    // clone the local copy to avoid mutation\n    var array = this.__inplace__(params['inplace'])\n\n    const values = Object.keys( mapping )\n\n    // delete the specified column(s) from the DataFrame\n    for( var i = 0; i < array.length; i++ ){\n      const columns = Object.keys(array[i] )\n\n      // do not perform mapping when no data nor the mapping exists\n      if(!columns.includes(col) ) continue\n      if(!values.includes(array[i][col])) continue\n\n      array[i][col] = mapping[array[i][col]]\n\n    }\n\n    return new jsonArray( array )\n  }\n\n\n\n  /**\n   * returns the data object. When enable is true, the original\n   * jsonArray is returned so the values are modified directly. Otherwise\n   * the jsonArray is cloned to avoid mutation of the original object\n   *\n   * @param  {Boolean} [enable] when inplace is True, the data is not cloned. Defaults to returning a clone\n   * @return {Object}             current jsonArray content\n   */\n  __inplace__( enable=false ){\n\n    // clone the local copy to avoid mutation when inplace is disabled\n    if( enable ) return this\n\n    return new jsonArray( this )\n  }\n\n\n}\n","\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a pie char\r\n * @param  {string} value  values for pie chart\r\n * @param  {string} label  name of each section\r\n */\r\nexport default function pie( props ){\r\n\r\n  // format the data with and without a label (w/o is the default)\r\n  var data = props.json_array.map(r => { return {value: r[props.col]}})\r\n  if( props.name !== undefined ){\r\n    data = props.json_array.map(r => {\r\n      return {\r\n        value: r[props.col],\r\n        name: r[props.name]\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'pie',\r\n    avoidLabelOverlap: false,\r\n    radius: ['40%', '70%'],\r\n    labelLine: {\r\n                show: false\r\n            },\r\n    data: data\r\n  }\r\n\r\n  if( props.name !== undefined ){\r\n    Series['label'] = {\r\n        show: false,\r\n        position: 'center'\r\n    }\r\n\r\n    Series['emphasis'] = {\r\n        label: {\r\n            show: true,\r\n            fontSize: '40',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n  }\r\n\r\n  if( props.showPercent === true ){\r\n    Series['label'] = {\r\n        formatter: '{b|{b}：}{c}  {per|{d}%}  ',\r\n        rich: {\r\n          a: {\r\n            color: '#6E7079',\r\n            lineHeight: 22,\r\n            align: 'center'\r\n          },\r\n          b: {\r\n            color: '#4C5058',\r\n            fontSize: 14,\r\n            fontWeight: 'bold',\r\n            lineHeight: 33\r\n          },\r\n          per: {\r\n            color: '#fff',\r\n            backgroundColor: '#4C5058',\r\n            padding: [3, 4],\r\n            borderRadius: 4\r\n          }\r\n        }\r\n      }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","/**\r\n * Echarts Tooltip formatter\r\n * =========================\r\n *\r\n * Attempt to standardize the tooltip format\r\n * to show data from the top 5 columns or those\r\n * specified by the user\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Sept 29, 2020\r\n */\r\n\r\n\r\nexport default class echartsTooltip extends Object {\r\n\r\n  constructor() {\r\n    super()\r\n    // super(...array)\r\n\r\n    // as a default, set the tooltip to trigger when\r\n    // hovering over an item\r\n    this.show = true\r\n    this.trigger = 'item'\r\n    // this.showContent = false\r\n  }\r\n\r\n\r\n  /**\r\n   * Formats the tooltip using data taken from the\r\n   * selected sample. When a list of columns are provided,\r\n   * they are used render the tooltip information\r\n   * @param  {object} json_array   array of json objects\r\n   * @param  {Array}  [columns=[]] array fo column names\r\n   * @return {none}              The tooltip format is stored locally\r\n   */\r\n  from_DataFrame( json_array, columns=[] ){\r\n\r\n    if( columns.length === 0 ){\r\n      columns = json_array.columns.splice(1,5)\r\n    }\r\n\r\n    columns = columns.concat(['__index__'])\r\n    this.formatter = (props) => {\r\n      // the dataframe index was pushed into the plot data in addition to the\r\n      // data used for plotting. This was used to locate the part by index\r\n      // number after splitting it for visualization purposes\r\n      const index = props.data[2]\r\n      if( index === undefined ) return ''\r\n\r\n      var sample = json_array.filter(r => r.__index__ === index)\r\n      if( sample.length === 0) return ''\r\n\r\n      // select the only sample that should reside at the index\r\n      sample = sample[0]\r\n\r\n      // format a string based on the DataFrame contents\r\n      var string = ''\r\n      for (var i=0; i < columns.length; i++ ){\r\n         // [key, value] of Object.entries(json_array[index])) {\r\n        const col = columns[i]\r\n        if( col === '__index__' ) continue\r\n        string = string + `<b>${col}</b>: ${sample[col]}<br/>`;\r\n      }\r\n\r\n      return string\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","/**\r\n * Echarts Axis formatter\r\n * =========================\r\n *\r\n * Routines to automatically change the axis format based on\r\n * specifications. The purpose is to limit axis configuration\r\n * to simplify the plotting process. At the same time, It is\r\n * possible to extend the axis parameters as desired.\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 22, 2020\r\n */\r\n\r\nimport moment from 'moment'\r\n\r\nexport default class echartsAxis extends Object {\r\n\r\n  constructor( col='', json_array=[] ) {\r\n    super()\r\n\r\n    this.axis = col\r\n    this.name = col\r\n    // super(...array)\r\n    //\r\n    this.initialize( json_array, col )\r\n  }\r\n\r\n  // default axis parameters\r\n  default(){\r\n    this.type = 'value'\r\n    this.scale = true\r\n  }\r\n\r\n  /**\r\n   * Initializes the axis based on the data type. this\r\n   * attempts to define the axis automatically. It's\r\n   * possible to overwrite this for custom plotting\r\n   * @param  {Array} json_array  jsonArray\r\n   * @param  {String} col       Column name\r\n   * @return {null}             nothing is returned\r\n   */\r\n  initialize( json_array, col ){\r\n\r\n    if( json_array === undefined ) return null\r\n    if( json_array.length === 0 ) return null\r\n    if( col === undefined ) return null\r\n    if( col === '' ) return null\r\n\r\n    // set the axis label\r\n    this.name = col\r\n\r\n    switch( json_array.dtypes[col] ){\r\n      case 'string' :\r\n        this.type = 'category'\r\n        this.data = json_array.unique(col)\r\n        break\r\n\r\n      // format date columns\r\n      case 'datetime':\r\n      case 'strftime':\r\n        this.type = 'time'\r\n        this.axisLabel = {\r\n          formatter: (function(value){\r\n            return moment(value).format('YYYY-MM-DD')\r\n          })\r\n        }\r\n        break;\r\n\r\n      default:\r\n        this.type = 'value'\r\n        this.scale = true\r\n    }\r\n  }\r\n\r\n\r\n  hide(){ this.show = false }\r\n\r\n  minValue(value){\r\n    this.min = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.min\r\n    }\r\n  }\r\n\r\n  maxValue(value){\r\n    this.max = (val) => {\r\n      if( value !== undefined) return value\r\n      return val.max\r\n    }\r\n  }\r\n\r\n  rotate(){\r\n    this.axisLabel = {\r\n      ...this.axisLabel,\r\n      ...{ rotate: 90 }\r\n    }\r\n  }\r\n\r\n  label( label ){\r\n    if( label !== undefined ){\r\n      this.name = label\r\n    }\r\n  }\r\n\r\n  tick_values( values ){\r\n    if( values !== undefined ){\r\n      this.type = 'category'\r\n      this.data = values\r\n    }\r\n  }\r\n\r\n  // // process the parameters object to configure the plot axis\r\n  // process_params( params ){\r\n  //\r\n  //   // add the label to the axis configuration\r\n  //   this.label( params.label )\r\n  //\r\n  //   switch( params.type ){\r\n  //     case 'category':\r\n  //       this.tick_values( [...new Set(params.values)] )\r\n  //       break;\r\n  //\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n  // formats the axis to display categories\r\n  to_category( params={} ){\r\n    this.type = 'category'\r\n    this.data = [...new Set(params.values)]\r\n\r\n    // this.splitArea ={\r\n    //     show: true\r\n    // }\r\n  }\r\n\r\n  // formats the axis to display values\r\n  to_value( params={} ){\r\n    this.type = 'value'\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  to_date( params={} ){\r\n\r\n    var strftime = 'MM-DD'\r\n    if( params.strftime !== undefined ) strftime = params.strftime\r\n\r\n    this.type = 'time'\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return moment(value).format(strftime)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // format the axis to display dates\r\n  scientific(units=2){\r\n    this.axisLabel = {\r\n      formatter: (function(value){\r\n        return value.toExponential(units)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  dynamic_range( json_array ){\r\n    const min = json_array.min( this.name )\r\n    const max = json_array.max( this.name )\r\n    const padding = (max - min) * 0.05\r\n\r\n    console.log( min, max, padding)\r\n    this.min = (min - padding).toFixed(3)\r\n    this.max = (max + padding).toFixed(3)\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport default function Axline( value, props={} ){\r\n\r\n  var val = value\r\n  if( val/Math.pow(10,4-1) > 1 ) val = val.toExponential(3)\r\n\r\n  var label = val\r\n  if( props.label !== undefined) label = props.label\r\n\r\n  var color = 'red'\r\n  if( props.color !== undefined ) color = props.color\r\n\r\n  var line = {\r\n    name: 'limit',\r\n    type: 'line',\r\n    color: color,\r\n    markLine: {\r\n        symbol: \"none\",\r\n        data: [{\r\n          tooltip: {show:false},\r\n          // name: val,\r\n          label: {\r\n            formatter: label,\r\n            position: 'end'\r\n          }\r\n        }]\r\n    }\r\n  }\r\n\r\n  if( props.axis === 'yAxis' ){\r\n    line.markLine.data[0]['yAxis'] = value\r\n  }else{\r\n    line.markLine.data[0]['xAxis'] = value\r\n  }\r\n\r\n  return line\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function line( json_array, props={} ){\r\n\r\n  const line = require('../../series/line').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = line( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\nimport Line from '../../series/line/rollingAvg'\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function rollingAvg( json_array, props={} ){\r\n\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = Line( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a boxplot plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function boxplot( json_array, props={} ){\r\n\r\n  const boxplot = require('../../series/boxplot').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'boxplot required att : colx and coly' )\r\n  }\r\n\r\n  const keys = json_array.unique( props.colx, true )\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({ values: keys })\r\n  xAxis.axisLabel = { formatter: '{value}' }\r\n  // xAxis.boundaryGap = true\r\n  // xAxis.nameGap = 30\r\n  // xAxis.splitLine = {show: false }\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_value()\r\n  yAxis.dynamic_range(json_array)\r\n  // yAxis.splitArea = {show: true}\r\n\r\n\r\n  var series = boxplot( {...props, ...{json_array: json_array}} )\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // series = echart_series.boxplot(props.colx, props.coly, props )\r\n\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function heatmap( json_array, props={} ){\r\n\r\n  // returns an object for generating a heatmap, similar to\r\n  // the calendar example but with data from a jsonArray\r\n  // example: https://echarts.apache.org/examples/en/editor.html?c=calendar-heatmap\r\n\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n  // force the datatypes of the columns to strings due to the categorical nature of the heatmap\r\n  json_array = json_array.astype({\r\n    [props.colx]: 'string',\r\n    [props.coly]: 'string',\r\n  })\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.to_category({values: json_array.unique(props.colx, true) })\r\n  xAxis.label( props.colx )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.to_category({ values: json_array.unique(props.coly, true) })\r\n  xAxis.label( props.coly )\r\n\r\n\r\n  var grid = {backgroundColor: 'rgb(0, 128, 0)'}\r\n\r\n  // set the percentage flag based on the datatype or parameter\r\n  var percentage = false\r\n  if( (json_array.dtypes[props.value] === 'percentage') | (props.percentage === true)){\r\n    percentage = true\r\n  }\r\n\r\n  var min = Math.min(...json_array.unique(props.value))\r\n  var max = Math.max(...json_array.unique(props.value))\r\n\r\n  var visualMap = {\r\n      min: (percentage === true) ? min * 100 : min,\r\n      max: (percentage === true) ? max * 100 : max,\r\n      calculable: true,\r\n      orient: 'vertical',\r\n      left: 'left',\r\n      bottom: '10%',\r\n      inRange: {\r\n        color: ['green', 'yellow','orange', 'red']\r\n      }\r\n  }\r\n\r\n  var series = [{\r\n      type: 'heatmap',\r\n      data: json_array.map(function (item) {\r\n\r\n        var value = Number(item[props.value])\r\n        if( percentage === true ) value = (Number(item[props.value])*100).toFixed(2)\r\n\r\n          return [\r\n            item[props.colx],\r\n            item[props.coly],\r\n            value\r\n          ]\r\n        }),\r\n      label: {\r\n          show: true\r\n      },\r\n  }]\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n    grid: grid,\r\n    visualMap: visualMap\r\n\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function scatter( json_array, props={} ){\r\n\r\n  const scatter = require('../../series/scatter').default\r\n  const scatter_by = require('../../series/scatter/scatterBy').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : colx and coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx, json_array )\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n\r\n\r\n  var series\r\n\r\n  if( (props.colorBy !== undefined)&(json_array.columns.includes(props.colorBy)) ){\r\n\r\n    series = scatter_by({\r\n      ...props,\r\n      ...{\r\n          json_array: json_array,\r\n          colorBy: props.colorBy\r\n        }\r\n    })\r\n\r\n  }else{\r\n    series = scatter({\r\n      ...props,\r\n      ...{json_array: json_array}\r\n    })\r\n\r\n  }\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function bar( json_array, props={} ){\r\n\r\n  const bar = require('../../series/bar').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined) ){\r\n    alert( 'bar plot required att : colx and coly ')\r\n  }\r\n\r\n  const colx = props.colx\r\n  const coly = props.coly\r\n\r\n  var xAxis, yAxis\r\n  if( props.horizontal === true ){\r\n    xAxis = new echartsAxis(coly)\r\n\r\n    yAxis = new echartsAxis(colx)\r\n    yAxis.label(colx)\r\n    yAxis.tick_values(json_array.values(colx))\r\n\r\n  }else{\r\n    xAxis = new echartsAxis(colx)\r\n    xAxis.label(colx)\r\n    xAxis.tick_values(json_array.values(colx))\r\n\r\n    yAxis = new echartsAxis(coly)\r\n  }\r\n\r\n  // const echart_series = new echartsSeries( json_array )\r\n  // var series = echart_series.bar( props.coly, props)\r\n\r\n  var series = bar( {\r\n    ...props,\r\n    ...{\r\n      json_array: json_array,\r\n      col: props.coly\r\n    }} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series,\r\n  }\r\n\r\n}\r\n","\r\nimport bar from './bar'\r\n\r\n/**\r\n * Convert the json_array to a scatter plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function Pareto( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined) ){\r\n    alert( 'pareto plot required att : col ')\r\n  }\r\n\r\n  var data = json_array.filter(r => r[props.col] !== '')\r\n  var pareto = data.groupby([props.col])\r\n\r\n\r\n\r\n  var att = 'count'\r\n  if( props.ratio === true ) att = 'ratio'\r\n\r\n  pareto = pareto.sort_values('count', false)\r\n\r\n  const total = pareto.sum('count')\r\n  var cumsum = 0\r\n\r\n  // creat the cumsum and hold ratio\r\n  pareto = pareto.row_apply(r => {\r\n      cumsum = cumsum + r.count\r\n      r['cumsum'] = cumsum/total\r\n      r['ratio'] = r.count/total\r\n\r\n      return r\r\n  })\r\n\r\n  // generate the bar chart for the pareto \r\n  var option = bar(pareto, {colx: props.col, coly: att})\r\n\r\n  // add a lineplot for the cusum when specified\r\n  if( props.cumsum === true ){\r\n    option.series = option.series.concat(\r\n      pareto.echartsSeries.line({\r\n        colx: props.col,\r\n        coly: 'cumsum',\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  // return the bar plot options using the pareto data\r\n  return option\r\n\r\n\r\n}\r\n","\r\nimport echartsAxis from '../../axis'\r\nimport grid from '../../series/grid'\r\n\r\n/**\r\n * Convert the json_array to a heatmap plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function rectGrid( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n  }\r\n\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis(props.colx)\r\n  xAxis.label( props.colx )\r\n  xAxis.minValue()\r\n  xAxis.maxValue()\r\n  xAxis.hide()\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis(props.coly)\r\n  yAxis.label( props.coly )\r\n  yAxis.minValue()\r\n  yAxis.maxValue()\r\n  yAxis.hide()\r\n\r\n\r\n  var series = grid( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie'\r\n\r\n\r\nexport default function pieChart( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined)){\r\n    alert( 'pie plot required att : col ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.name !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\nimport pie from '../../../series/pie/fromSeries'\r\n\r\n\r\nexport default function pieFromSeries( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined)){\r\n    alert( 'pie plot required att : col ')\r\n  }\r\n\r\n  var option = {\r\n    series : pie( {...props, ...{json_array: json_array}} ),\r\n  }\r\n\r\n  if( props.name !== undefined ){\r\n    option['tooltip'] = {trigger: 'item'}\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\nimport RadarSeries from '../../series/radar'\r\n\r\n/**\r\n * Convert the json_array to a radar plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function radar( json_array, props={} ){\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.col === undefined)|(props.value === undefined) ){\r\n    alert( 'radar plot required att : col and value ')\r\n  }\r\n\r\n  // generate the radar plot grid\r\n  var indicator = []\r\n  json_array.forEach( row => {\r\n    var maxValue = json_array.max(props.value)\r\n    if( props.maxValue !== undefined ) maxValue = props.maxValue[props.col]\r\n\r\n    indicator.push({\r\n      name: row[props.col],\r\n      max: maxValue\r\n    })\r\n  })\r\n\r\n  var series = RadarSeries( {\r\n    ...props,\r\n    ...{\r\n      json_array: json_array,\r\n    }} )\r\n\r\n\r\n  return {\r\n    radar: {indicator: indicator},\r\n    series: series,\r\n  }\r\n\r\n}\r\n","\r\n\r\nimport echartsAxis from '../../axis'\r\nimport moment from 'moment'\r\n\r\n\r\n/**\r\n * Convert the json_array to a line plot option object\r\n * @param  {string} colx  column x name\r\n * @param  {string} coly  column y name\r\n */\r\nexport default function waterfall( json_array, props={} ){\r\n\r\n  const waterfall = require('../../series/waterfall').default\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)){\r\n    alert( 'scatter plot required att : coly ')\r\n  }\r\n\r\n  // set the x axis values using the Axis class\r\n  var xAxis = new echartsAxis( props.colx )\r\n  xAxis.to_category({values: json_array.map(r => r[props.colx]) })\r\n\r\n  // set the y axis values using the Axis class\r\n  var yAxis = new echartsAxis( props.coly, json_array )\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.colx] instanceof moment ){\r\n    json_array = json_array.strftime(props.colx)\r\n    xAxis.to_date()\r\n  }\r\n\r\n\r\n  // convert the x-axis to date type when of moment type\r\n  if( json_array[0][props.coly] instanceof moment ){\r\n    json_array = json_array.strftime(props.coly)\r\n    yAxis.to_date()\r\n  }\r\n\r\n  var series = waterfall( {...props, ...{json_array: json_array}} )\r\n\r\n  return {\r\n    xAxis: [xAxis],\r\n    yAxis: [yAxis],\r\n    series: series\r\n  }\r\n\r\n}\r\n","/**\r\n * echarts Options\r\n * =================\r\n *\r\n * Converts json arrays into echart option objects. This is\r\n * intended for customize plots\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: July 7, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport echartsTooltip from '../tooltips'\r\nimport echartsAxis from '../axis'\r\n\r\nimport * as features from './features'\r\nimport Line from './charts/line'\r\nimport RollingAvg from './charts/rollingAvg'\r\nimport Boxplot from './charts/boxplot'\r\nimport Heatmap from './charts/heatmap'\r\nimport Scatter from './charts/scatter'\r\nimport Bar from './charts/bar'\r\nimport Pareto from './charts/pareto'\r\nimport Grid from './charts/grid'\r\nimport Pie from './charts/pie'\r\nimport PieFromSeries from './charts/pie/fromSeries'\r\nimport Radar from './charts/radar'\r\nimport Waterfall from './charts/waterfall'\r\n\r\nimport Toolbox from './format/Toolbox'\r\nimport legend from './format/legend'\r\n\r\n\r\nexport default class echartsOptions extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n\r\n    this.json_array = data\r\n\r\n    // cast the variable to a jsonArray type when it is a standard array\r\n    if( (this.json_array instanceof jsonArray) === false ){\r\n      this.json_array  = new jsonArray( this.json_array  )\r\n    }\r\n\r\n    // set the default plot parameters\r\n    this.default()\r\n  }\r\n\r\n\r\n  // set the default plot parameters\r\n  default(){\r\n\r\n    // default animations to off for performance\r\n    this.animation = false\r\n\r\n    this.tooltip = new echartsTooltip()\r\n\r\n    this.grid = {\r\n        left: '10%',\r\n        right: '10%',\r\n        bottom: '15%'\r\n    }\r\n\r\n    this.series = []\r\n  }\r\n\r\n\r\n  heatmap( props ){ return this.generate_options( Heatmap, props ) }\r\n  boxplot( props ){ return this.generate_options( Boxplot, props ) }\r\n  scatter( props ){ return this.generate_options( Scatter, props ) }\r\n  bar( props ){ return this.generate_options( Bar, props ) }\r\n  pareto( props ){ return this.generate_options( Pareto, props ) }\r\n  line( props ){ return this.generate_options( Line, props ) }\r\n  rollingAvg( props ){ return this.generate_options( RollingAvg, props ) }\r\n  rectGrid( props ){ return this.generate_options( Grid, props ) }\r\n  pie( props ){ return this.generate_options( Pie, props ) }\r\n  pieFromSeries( props ){ return this.generate_options( PieFromSeries, props ) }\r\n  radar( props ){ return this.generate_options( Radar, props ) }\r\n  waterfall( props ){ return this.generate_options( Waterfall, props ) }\r\n\r\n\r\n\r\n  toolbox( props ){ return Toolbox( this, props ) }\r\n  selection( props ){ return features.Selection( this, props ) }\r\n  zoom( props ){ return features.DataZoom( this, props ) }\r\n  highlight( props ){\r\n    const options = features.Highlight( this, props )\r\n    this.local_variables( options )\r\n    delete this.json_array\r\n    return this\r\n  }\r\n\r\n  // wrapper used to generate the options based on the provided function\r\n  generate_options( func, props ){\r\n    const options = func( this.json_array, props )\r\n\r\n    this.local_variables( options )\r\n\r\n    // add the tooltip when provided as a parameter\r\n    if( props.tooltip !== undefined ){\r\n      this.tooltip.from_DataFrame(this.json_array, props.tooltip)\r\n    }\r\n\r\n    if( props.delete !== false ) delete this.json_array\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  // create a local copy of each option variable\r\n  local_variables( options ){\r\n    const keys = Object.keys( options )\r\n    for( var i=0; i < keys.length; i++ ){\r\n      const key = keys[i]\r\n      this[key] = options[key]\r\n    }\r\n  }\r\n\r\n  // appends the series\r\n  append_series( series ){\r\n    this.series = this.series.concat(series)\r\n    return this\r\n  }\r\n\r\n  xtick_padding(padding){\r\n    this.grid = {\r\n      ...this.grid,\r\n      ...{bottom: padding}\r\n    }\r\n  }\r\n\r\n  legend(position){\r\n    this.legend = legend(position)\r\n  }\r\n\r\n  // add a secondary y axis\r\n  secondary_axis( col ){\r\n    this.yAxis.push(  new echartsAxis(col) )\r\n    return this\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axhline( value, props={} ){\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'yAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n\r\n  }\r\n\r\n  // creates a horizontal line across the plotting area\r\n  axvline( value, props={} ){\r\n\r\n    const line = features.Axline( value, {\r\n      ...props,\r\n      ...{axis: 'xAxis'}\r\n    })\r\n\r\n    this.append_series(line)\r\n    return this\r\n  }\r\n\r\n\r\n}\r\n","\r\n// import { toolbox as features } from 'echarts/lib/langEN'\r\n\r\n// adds a toolbox to the chart to enable user interaction\r\nexport default function Toolbox( option, props ){\r\n\r\n  option['toolbox'] = {\r\n    show: true,\r\n    feature: {\r\n        dataZoom: {\r\n          title: 'Zoom',\r\n          show: true\r\n        },\r\n        saveAsImage: { title: 'Save', show: true},\r\n        restore: {title: 'Restore', show: true},\r\n    }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n// adds the ability to select data from the plot\r\nexport default function Selection( option, sliders=false ){\r\n\r\n  option['brush'] = {\r\n      toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n      xAxisIndex: 0,\r\n      outOfBrush: {\r\n          colorAlpha: 0.8\r\n      }\r\n  }\r\n\r\n  return option\r\n\r\n}\r\n","\r\n\r\n// adds the ability to zoom into plots\r\nexport default function DataZoom( option, props ){\r\n\r\n  if( option.dataZoom === undefined ) option['dataZoom'] = []\r\n\r\n\r\n  var params = props\r\n  if( params === undefined ){\r\n    params = {\r\n      scroll: true,\r\n      xAxis: false,\r\n      yAxis: false,\r\n      sliders: {\r\n        xAxis: true,\r\n        yAxis: true,\r\n      }\r\n    }\r\n  }\r\n\r\n  if( params.scroll ){\r\n    var scrollZoom = {\r\n        type: 'inside',\r\n        start: 0,\r\n        end: 100,\r\n        filterMode: 'none',\r\n    }\r\n\r\n    if( params.xAxis ) scrollZoom['orient'] = 'horizontal'\r\n    if( params.yAxis ) scrollZoom['orient'] = 'vertical'\r\n\r\n    option['dataZoom'] = option['dataZoom'].concat(scrollZoom)\r\n  }\r\n\r\n  if( params.sliders !== undefined ){\r\n    const icon = 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z'\r\n\r\n    if( params.sliders.xAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          xAxisIndex: 0,\r\n          start: 0,\r\n          end: 100,\r\n          height: 7,\r\n          bottom: 8,\r\n          showDataShadow: false,\r\n          handleSize: 15,\r\n          handleIcon: icon,\r\n          filterMode: 'none',\r\n        }\r\n      )\r\n    }\r\n\r\n    if( params.sliders.yAxis){\r\n      option['dataZoom'] = option['dataZoom'].concat(\r\n        {\r\n            type: 'slider',\r\n            show: true,\r\n            yAxisIndex: 0,\r\n            start: 0,\r\n            end: 100,\r\n            width: 7,\r\n            showDataShadow: false,\r\n            handleSize: 15,\r\n            handleIcon: icon,\r\n            filterMode: 'none',\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  // console.log( 'what is this', sliders)\r\n  // console.log( 'soom', option)\r\n\r\n    return option\r\n}\r\n","\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Highlight( options, props ){\r\n\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'minimum attributes: colx, coly and value')\r\n    return\r\n  }\r\n\r\n  // identify the index of the samples to highlight\r\n  var index = props.value\r\n  if( typeof props.value === 'string'){\r\n    index = options.xAxis[0]['data'].indexOf( props.value )\r\n  }\r\n\r\n  // extend the first item in the series with the marked area\r\n  options.series[0]['markArea'] = {\r\n      data: [\r\n        [{\r\n          name: props.value,\r\n          xAxis: index - 1\r\n      }, {\r\n          xAxis: index + 1\r\n      }]\r\n    ]\r\n  }\r\n\r\n  return options\r\n\r\n}\r\n","\r\nexport default function legend( position ){\r\n\r\n  switch( position ){\r\n\r\n    case 'top-center':\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n\r\n    case 'left':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        left: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    case 'right':\r\n      return {\r\n        type: 'scroll',\r\n        orient: 'vertical',\r\n        right: 10,\r\n        top: 20,\r\n        bottom: 20,\r\n      }\r\n\r\n    default:\r\n      return {\r\n        top: '5%',\r\n        left: 'center'\r\n      }\r\n  }\r\n\r\n}\r\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Grid, Segment, Menu, Container} from 'semantic-ui-react'\n\nimport jsonArray from './components/jsonArray'\nimport Example from './components/Example'\nimport Sidebar from './components/Sidebar'\nimport getConfig from './config'\n\n// wraps the fixed code documentation framework in the\n// grid structure to provide one line per example\nexport default function Examples( props ){\n\n  const [category, setCategory] = useState()\n  const [subcategory, setSubCategory] = useState()\n  const [docType, setDocType] = useState('echarts')\n\n  var config = props.config\n  if( config === undefined ){\n    config = getConfig(docType)\n  }\n\n  console.log( 'cinfug...', config )\n\n  config = new jsonArray(config)\n\n  // set default based on indev flag\n  const temp = config.filter(r => r.indev === true)\n\n  if( temp.length > 0 ){\n    // sort the configuration so the indev example is at the top\n    config = config.fillna({indev: false})\n    config = config.sort_values('indev', false)\n\n\n    if( category === undefined) {\n      setCategory( temp[0].category )\n      setSubCategory( temp[0].subcategory )\n    }\n  }\n\n\n  return (\n\n    <Segment inverted style={{height: '100vh'}}>\n      <Navbar callback={setDocType} docType={docType}/>\n\n      <Segment style={{margin:'0 20px 0 20px'}}>\n\n        <Grid columns={2}>\n           <Grid.Column\n             style={{maxWidth:'250px'}}>\n            <Sidebar\n              config={config}\n              category={category}\n              setCategory={setCategory}\n              setSubCategory={setSubCategory}\n              />\n           </Grid.Column>\n\n          <Grid.Column stretched style={{width:'calc(100% - 250px)'}}>\n             <PageContent\n               {...props}\n               category={category}\n               subcategory={subcategory}\n               config={config}\n               />\n           </Grid.Column>\n         </Grid>\n\n       </Segment>\n   </Segment>\n  )\n}\n\n\n\n\nfunction PageContent( props ){\n\n  // select all examples belonging to a single category\n  var examples = props.config.filter(r => r.category === props.category )\n\n  if( props.subcategory !== undefined ){\n    examples = examples.filter(r => r.subcategory === props.subcategory )\n  }\n\n\n\n  // create an array of example components\n  var exampleComponents = []\n  for( var i=0; i < examples.length; i++ ){\n\n    const title = examples[i].title\n\n    exampleComponents.push(\n      <Segment\n        key={`Example-${title}`}\n        vertical>\n        <Example\n          {...props}\n          jsxDir='examples'\n          docDir='doc'\n          example={ examples[i]}\n          />\n      </Segment>\n    )\n  }\n\n\n  return(\n    <div>\n      {exampleComponents}\n    </div>\n  )\n}\n\n\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nfunction Navbar(props){\n\n  var callback = (value) => console.log( 'selected', value)\n  if( props.callback !== undefined ) callback = (value) => props.callback(value)\n\n  return (\n\n      <Menu size='large' inverted>\n        <Container>\n          <Menu.Item as='a'\n            active={props.docType==='chart'}\n            onClick = {() => {\n              callback('chart')\n            }}>\n            Charts\n          </Menu.Item>\n          <Menu.Item as='a'\n            active={props.docType==='table'}\n            onClick = {(value) => {\n              callback('table')\n            }}>\n            Table\n          </Menu.Item>\n          <Menu.Item as='a'\n            active={props.docType==='dataframe'}\n            onClick = {(value) => {\n              callback('dataframe')\n            }}>\n            DataFrame\n          </Menu.Item>\n          <Menu.Item as='a'\n            active={props.docType==='series'}\n            onClick = {(value) => {\n              callback('series')\n            }}>\n            Series\n          </Menu.Item>\n        </Container>\n      </Menu>\n\n  )\n  // <Menu.Item position='right'>\n  //   <Button as='a' inverted={!fixed}>\n  //     Log in\n  //   </Button>\n  //   <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n  //     Sign Up\n  //   </Button>\n  // </Menu.Item>\n\n}\n","/**\r\n * Extract\r\n * ===================\r\n *\r\n * Routines for extracting data to the local desktop\r\n * in various formats\r\n *\r\n * @author Nik Sumikawa\r\n * @date Oct 7, 2020\r\n */\r\n\r\nconst Papa = require(\"papaparse\")\r\n\r\n\r\n/**\r\n * Pushes the data into a downloadable location\r\n * and posts the interface to enable downlaodign\r\n * @param  {Blob}   data       Blob containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nfunction browserInterface( data, filename ){\r\n\r\n  var url = window.URL.createObjectURL(data);\r\n\r\n  var link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', filename);\r\n\r\n  document.body.appendChild(link);\r\n\r\n  link.click();\r\n\r\n  // Clean up and remove the link\r\n  link.parentNode.removeChild(link);\r\n}\r\n\r\n/**\r\n * Formats the data as a csv file and push it into a dowloadble location\r\n * @param  {Array}   data     DataFrame containing the data\r\n * @param  {string} filename  file name\r\n * @return {None}\r\n */\r\nexport default function toCsv( data, filename='file.csv' ){\r\n\r\n  var csv = Papa.unparse(data, {\r\n    header: true,\r\n    columns:data.columns\r\n  });\r\n\r\n  var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'});\r\n\r\n  browserInterface( csvData, filename )\r\n}\r\n","import React from 'react';\n\n\n\nexport default function SimpleTable( props ){\n\n  return (\n    <div>\n      This is a very basic example to show how this works\n    </div>\n  )\n\n}\n","/**\nExample Components\n==================\n\nRenders all examples using a single component with\nhotswapping. This consolidates all examples into a\nsingle component and avoids multiple pages/routes\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment} from 'semantic-ui-react'\n\nimport Controls from './Header'\nimport CodeRender from './CodeRender'\n\n\n\nexport default function Example( props ){\n\n  const [showCode, setShowCode] = useState(false)\n\n  var Component\n\n  var dir = props.jsxDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  try{\n    Component = require(`Documentation/${dir}/${props.example.path}`).default\n  }catch{\n    Component = NullComponent\n  }\n\n  console.log( 'what are the components', Component)\n  console.log( `Documentation/${dir}/${props.example.path}` )\n\n  return(\n    <Segment.Group>\n      <Segment>\n        <Controls\n          title = {props.example.title}\n          description = {props.example.description}\n          onClick={() => setShowCode(!showCode)}\n          />\n      </Segment>\n\n      <Segment style={{width:'100%'}}>\n        <Component {...props}/>\n      </Segment>\n\n      <CodeRender\n        {...props}\n        visible = {showCode}\n        />\n\n    </Segment.Group>\n  )\n}\n\nfunction NullComponent(props){ return null }\n","/**\n * @title Controls\n * @description Example Header and controls\n * @author Nik sumikawa\n * @date Nov 21, 2020\n *\n * note taken from react-hot-docs\n */\n\nimport React from \"react\"\n\nimport {\n  Grid,\n  Header,\n  Button\n} from \"semantic-ui-react\"\n\n\nexport default function Controls( props ){\n\n  // do not render the component when the visiblility flag\n  // is set to false\n  if( props.visible === false ) return null\n\n  var title\n  if( props.title !== undefined ) title = props.title\n\n  var description\n  if( props.description !== undefined ) description = props.description\n\n  return(\n    <Grid>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <Header as=\"h2\">{title}</Header>\n          <span>{description}</span>\n        </Grid.Column>\n\n\n        <Grid.Column textAlign='right'>\n          <Button\n            onClick={() => props.onClick()}>\n            Show code\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n\n    </Grid>\n  )\n\n}\n","/**\nCode Render\n==================\n\nUses React-ace to render the source code\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React, {useState} from 'react';\n\nimport {Segment, Button} from 'semantic-ui-react'\n\nimport AceEditor from \"react-ace\"\n\nrequire(\"brace/mode/html\")\nrequire(\"brace/mode/jsx\")\nrequire(\"brace/mode/sh\")\nrequire(\"brace/mode/python\")\n// require(\"brace/theme/github\")\nrequire(\"brace/theme/dracula\")\n\n\nexport default function CodeRender( props ){\n\n  const [source, setSource] = useState('')\n\n  if( props.visible === false ) return null\n\n  var rel_path\n\n  var dir = props.docDir\n  if( dir === undefined ) dir = 'doc/components'\n\n  var ext = props.ext\n  if( ext === undefined ) ext = '.doc'\n\n  var syntax = 'jsx'\n  if( ext === '.py' ) syntax = 'python'\n\n  var filename = props.example.path.split('/')\n  filename = filename[filename.length-1] + ext\n\n\n  try{\n    rel_path = require(`Documentation/${dir}/${props.example.path}${ext}`)\n\n  }catch{\n    return(\n      <Segment>\n        Code not available. Please compile to see source\n      </Segment>\n    )\n  }\n\n  // console.log( rel_path.default )\n  if( (rel_path !== undefined)&(source === '') ){\n\n    fetch(rel_path.default)\n    .then((r) => r.text())\n    .then(text  => {\n      // console.log('this is the code', text);\n      setSource(text)\n    })\n\n  }\n\n  // return (<div> example </div>)\n  return(\n\n    <Segment>\n      <Button\n        style={{\n          position: 'absolute',\n          right: '20px',\n          top: '20px',\n          zIndex: 10\n        }}\n        icon = 'download'\n        color='red'\n        circular\n        onClick={() => downloadFile(source, filename)}\n        />\n\n      <AceEditor\n        editorProps={{ $blockScrolling: Infinity }}\n        maxLines={Infinity}\n        minLines={10}\n        mode={syntax}\n        name=\"jsx-editor\"\n        onChange={() => console.log('not implemented') }\n        tabSize={2}\n        theme=\"dracula\"\n        value={source}\n        width=\"100%\"\n        readOnly\n      />\n    </Segment>\n  )\n}\n\n\n\nfunction downloadFile( source, filename ){\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([source], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n","/**\nSidebar\n==================\n\nRenders a sidebar based on the configuration file\n\n@author Nik Sumikawa\n@date Nov 23, 2020\n*/\n\nimport React from 'react';\n\nimport {Menu, Dropdown} from 'semantic-ui-react'\n\nimport jsonArray from './jsonArray'\n\n\n\n\n// renders a sidebar given an array of category names\nexport default function Sidebar( props ){\n\n  var menuItems = flat_categories(props )\n  menuItems = menuItems.concat( sub_categories(props) )\n\n  return (\n    <Menu pointing secondary vertical>\n      {menuItems}\n    </Menu>\n  )\n\n}\n\n// renders categories without sub categories\nfunction flat_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory === undefined )\n  // console.log( 'jsonArray', props.config instanceof jsonArray)\n  const categories = config.unique(['category'])\n\n  var menuItems = []\n  for( var i=0; i < categories.length; i++ ){\n    const cat = categories[i]\n\n    menuItems.push(\n      <Menu.Item\n        key={`menu-${cat}`}\n        name={cat}\n        active={props.category === cat}\n        onClick={() => {\n          props.setCategory(cat)\n          props.setSubCategory(undefined)\n        }}\n      />\n    )\n  }\n\n  return menuItems\n}\n\n\n// renders categories without sub categories\nfunction sub_categories( props ){\n\n\n  const config = props.config.filter(r => r.subcategory !== undefined )\n  const groups = config.groupby(['category'])\n\n  var menuItems = []\n  for( var i=0; i < groups.length; i++ ){\n\n    const cat = groups[i].category\n    const subcategories = new jsonArray(groups[i].json_obj).unique(['subcategory'])\n\n    var subMenuItems = []\n    for( var j=0; j < subcategories.length; j++ ){\n      const subcat = subcategories[j]\n\n      subMenuItems.push(\n        <Dropdown.Item\n          key={`dropdown-${cat}-${subcat}`}\n          onClick={() => {\n            props.setCategory(cat)\n            props.setSubCategory(subcat)\n          }}\n          >\n          {subcat}\n        </Dropdown.Item>\n      )\n    }\n\n    menuItems.push(\n      <Dropdown\n        key={`dropdown-${cat}`}\n        item\n        text={cat}>\n        <Dropdown.Menu>\n          {subMenuItems}\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  return menuItems\n}\n","\r\nexport default function getConfig( docType ){\r\n\r\n  switch(docType){\r\n    case 'chart':\r\n      return importConfig(config, 'Echarts/config.js', true)\r\n\r\n    case 'table':\r\n      return importConfig(config, 'Table/config.js', true)\r\n\r\n    case 'dataframe':\r\n      return importConfig(config, 'DataFrame/config.js', true)\r\n\r\n    case 'series':\r\n      return importConfig(config, 'Series/config.js', true)\r\n\r\n    default:\r\n\r\n      var config = []\r\n      config = importConfig(config, 'Echarts/config.js', false)\r\n      return config\r\n  }\r\n\r\n}\r\n\r\nfunction importConfig( config, path, indev=false){\r\n\r\n  var localConfig = require('./examples/' + path).config\r\n\r\n  if( indev === false ){\r\n    for( var i=0; i < localConfig.length; i++ ){\r\n      localConfig[i]['indev'] = false\r\n    }\r\n  }\r\n\r\n  return localConfig\r\n}\r\n","/**\r\n * dtype\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to allow for data type\r\n * formatting. This includes extracting data types for specific\r\n * columns and also converting to known data types\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../jsonArray'\r\n\r\nimport datetime from './datetime'\r\n\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default class DataTypes extends Object{\r\n\r\n  constructor(array) {\r\n    super()\r\n\r\n    // global definition to prevent excessive processing\r\n    // when determining data type. This essentially limits\r\n    // the number of checks per column\r\n    this.max_length = 50\r\n\r\n    // set default dtypes. Ideally, extract them from the jsonArray when available\r\n    if( array instanceof jsonArray ){\r\n      this.set_dtypes( array.dtypes )\r\n    }\r\n  }\r\n\r\n  // returns all columns in the jsonArray\r\n  columns( array ){\r\n    var columns = []\r\n\r\n    // ensure that the max length is not greater than the\r\n    // array size, to avoid checking non-existing rows\r\n    if( this.max_length > array.length ) this.max_length  = array.length\r\n\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat(Object.keys(array[i]))\r\n    }\r\n\r\n    return [...new Set(columns.filter(x => !['__index__'].includes(x)))]\r\n  }\r\n\r\n  // converts all data types based on the global dtypes definition\r\n  // stored within the jsonArray variable\r\n  init( array ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const dtype_col = Object.keys(this)\r\n\r\n    for( var i=0; i < dtype_col.length; i++ ){\r\n      // convert the column to the specified type\r\n      array = this.convert(array, dtype_col[i], this[dtype_col[i]])\r\n    }\r\n\r\n    this.max_length = array.length\r\n    if( this.max_length > 50 ) this.max_length = 50\r\n\r\n    this.parse(array)\r\n\r\n\r\n    // converting all numeric Strings to their proper non-string type\r\n    const columns = this.columns(array)\r\n    for( i=0; i < columns.length; i++ ){\r\n\r\n\r\n      const col = columns[i]\r\n      if(this[col] === 'intString') array = this.convert( array, col, 'int' )\r\n      if(this[col] === 'floatString') array = this.convert( array, col, 'float' )\r\n      if(this[col] === 'booleanString') array = this.convert( array, col, 'boolean' )\r\n\r\n    }\r\n\r\n    delete this.max_length\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * sets the internal data type definition based on the provided objects\r\n   * @param {object} dtypes object containing the data type definition\r\n   */\r\n  set_dtypes( dtypes ){\r\n\r\n    // extract the column names based on the data type definition\r\n    const columns = Object.keys(dtypes)\r\n\r\n    for( var i=0; i < columns.length; i++ ){\r\n      this[columns[i]] = dtypes[columns[i]]\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // returns the data type for the given value\r\n  data_type( value ){\r\n\r\n    if( value instanceof jsonArray ) return 'jsonArray'\r\n    if( value instanceof Array ) return 'array'\r\n    if( value instanceof Object ) return 'object'\r\n\r\n\r\n    if( (Number(value) === value)&(value % 1 === 0) ) return 'int'\r\n    if( (Number(value) === value)&(value % 1 !== 0) ) return 'float'\r\n\r\n    // attempt to convert the value to a number\r\n    const numeric = Number( value )\r\n\r\n    // determine the proper type when successfully converted to a number\r\n    if( numeric !== undefined & !isNaN(numeric) ){\r\n      if( value === true | value === false ) return 'boolean'\r\n      if( value % 1 === 0 ) return 'intString'\r\n      if( value % 1 !== 0 ) return 'floatString'\r\n    }\r\n\r\n    if(value === 'true' | value === 'false') return 'booleanString'\r\n    if(typeof value === 'string' || value instanceof String) return 'string'\r\n\r\n    return 'unknown'\r\n  }\r\n\r\n  /**\r\n   * returns True when the data type is numeric. Otherwise False\r\n   * @param  {String}  dtype Data type string\r\n   * @return {Boolean}       True when the data type is numeric, otherwise false\r\n   */\r\n  isNumeric( dtype ){\r\n    switch( dtype ){\r\n      case 'float' : return true\r\n      case 'int': return true\r\n      case 'percentage': return true\r\n      default : return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert the specified column based on the data type\r\n   * @param  {string} col       column name\r\n   * @param  {string} dtype     data type definition\r\n   * @return {array}            array containing with the column mapped correctly\r\n   */\r\n  convert( array, col, dtype, params={} ){\r\n\r\n    // convert the dtype for the specific column for all rows\r\n    for( var i=0; i < array.length; i++ ){\r\n\r\n      // do not process the row when data doesn't exist for the column\r\n      // const columns = Object.keys(array[i])\r\n      // if( !columns.includes( col) ) continue\r\n      if( array[i][col] === undefined ) continue\r\n\r\n      array[i][col] = this.apply(array[i][col], dtype, params )\r\n    }\r\n\r\n    // create an internal variable with the data type of the column\r\n    this.set_label( col, dtype )\r\n\r\n    return array\r\n  }\r\n\r\n  // logic to apply when converting a value to the correct data type\r\n  apply(value, dtype, params={}){\r\n\r\n    switch( dtype ){\r\n      case 'datetime':\r\n        return datetime(value)\r\n\r\n      case 'jsonArray':\r\n        return new jsonArray(value)\r\n\r\n      case 'date':\r\n        return moment(value)\r\n\r\n      case 'week':\r\n        if( value === null ) return null\r\n        if( value.toString().split('-').length !== 2){\r\n          const date = moment(value)\r\n          return `${date.year()}-${date.format('ww')}`\r\n        }\r\n\r\n        return value\r\n\r\n      case 'strftime':\r\n        const param_keys = Object.keys(params)\r\n        if( !param_keys.includes('format') ) params['format'] = 'YYYY-MM-DD'\r\n\r\n        return datetime(value).format(params['format'])\r\n\r\n      case 'int' :\r\n        return Number( value )\r\n\r\n      case 'float' :\r\n        return Number( value )\r\n\r\n      case 'string' :\r\n        if (value === null) return ''\r\n        return value.toString()\r\n\r\n      case 'boolean' :\r\n\r\n        if( value === null ) return null\r\n        if( value === false | value === true ) return value\r\n\r\n        let number = Number(value)\r\n        if( isNaN(number) ){\r\n          if( value.toLowerCase() === 'true' ) return true\r\n          if( value.toLowerCase() === 'false' ) return false\r\n        }\r\n\r\n        return number\r\n\r\n      case 'array':\r\n        if( typeof value !== 'string' ) return value\r\n        return value\r\n          .replace(/\\[/gi, '')\r\n          .replace(/\\]/gi, '')\r\n          .replace(/'/gi, '')\r\n          .replace(/, /gi, ',')\r\n          .split(',');\r\n\r\n      default :\r\n        return value\r\n    }\r\n\r\n  }\r\n\r\n  // sets the internal data type label\r\n  set_label( col, data_type ){\r\n\r\n    // set the column data type\r\n    switch( data_type ){\r\n      case 'strftime':\r\n        this[col] = 'string';\r\n        break;\r\n\r\n      default:\r\n        this[col] = data_type\r\n        break\r\n    }\r\n\r\n    return this[col]\r\n  }\r\n\r\n\r\n\r\n  // compares two data types and returns the one with the\r\n  // highest priority to avoid type conflict\r\n  dtypePriority( dtype1, dtype2 ){\r\n     const priority = [\r\n       'object',\r\n       'array',\r\n       'string',\r\n       'float',\r\n       'int',\r\n       'boolean',\r\n     ]\r\n\r\n     for( var i=0; i < priority.length; i++ ){\r\n       if( dtype1 === priority[i] ) return priority[i]\r\n       if( dtype2 === priority[i] ) return priority[i]\r\n     }\r\n\r\n     return 'unknown'\r\n  }\r\n\r\n  // set a data type for the specified column\r\n  parse_column( array, col ){\r\n\r\n    var dtype\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      if( array[i][col] !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( array[i][col] )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n  // returns an object containing the dtypes for each column\r\n  parse( array ){\r\n\r\n    // parse a unique set of column names from the array of objects\r\n    var columns = []\r\n    for( var i=0; i < this.max_length; i++ ){\r\n      columns = columns.concat( Object.keys(array[i]))\r\n    }\r\n    columns = [...new Set(columns)]\r\n\r\n    // parse the data types for each column\r\n    const existing = Object.keys(this)\r\n    for( i=0; i < columns.length; i++ ){\r\n      // do no overwrite existing datatypes\r\n      if( existing.includes(columns[i]) ) continue\r\n\r\n      //parse undefined datatypes\r\n      this[columns[i]] = this.parse_column(array, columns[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the data type for the provided series\r\n   * @param  {Object} series Series object\r\n   * @return {String}        Data type string\r\n   */\r\n  parse_series( series ){\r\n\r\n    var dtype\r\n    for( var i=0; i < series.values.length; i++ ){\r\n\r\n      const value = series.values[i]\r\n\r\n      if( value !== undefined ){\r\n        // extract the datatype for the current cell\r\n        var temp_dtype = this.data_type( value )\r\n\r\n        // set the dtype during the first pass when it's not set\r\n        if( dtype === undefined ){\r\n          dtype = temp_dtype\r\n          continue\r\n        }\r\n\r\n        // set the dtype based on the priority when the cell dtype\r\n        // differs from the global definition\r\n        if( dtype !== temp_dtype ){\r\n          temp_dtype = this.dtypePriority( dtype, temp_dtype)\r\n        }\r\n\r\n        dtype = temp_dtype\r\n      }\r\n    }\r\n\r\n    return dtype\r\n  }\r\n\r\n}\r\n","/**\r\n * Echarts Components\r\n * ===================\r\n *\r\n * returns a class containing all available eCharts components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n import echartsOptions from './options'\r\n\r\n\r\n\r\n\r\nexport default class eChartsComponents extends Object{\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    console.log( data )\r\n    this.data = data\r\n  }\r\n\r\n  get options(){\r\n    return new echartsOptions( this.data )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","/**\r\n * echarts grid\r\n * =================\r\n *\r\n * Converts json arrays into echart grid series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: March 5, 2021\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\nimport get_color from '../../../colors/Colors'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function grid( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  // check to ensure the minimum set of parameters are available\r\n  if( (props.colx === undefined)|(props.coly === undefined)|(props.value === undefined) ){\r\n    alert( 'boxplot required att : colx, coly and value' )\r\n    return []\r\n  }\r\n\r\n  var color_col = props.color\r\n  if( props.color === undefined ){\r\n    color_col = 'color'\r\n    json_array = json_array.create_column( 'color', r => get_color(r[props.value]) )\r\n  }\r\n\r\n\r\n  var Series = {\r\n    type: 'custom',\r\n    // coordinateSystem: 'cartesian2d',\r\n    renderItem: renderRectangle,\r\n    animation: false,\r\n    legendHoverLink : false,\r\n    silent: true,\r\n\r\n    encode: {\r\n        x: 0,\r\n        y: 1\r\n    },\r\n    data: json_array.map(r => [\r\n      r[props.colx],\r\n      r[props.coly],\r\n      r[props.value],\r\n      r[color_col],\r\n    ])\r\n  }\r\n\r\n  if( props.label === true ){\r\n    Series['label'] = {\r\n        show: true,\r\n        color: \"black\",\r\n        fontSize:12,\r\n        z: 10,\r\n        zlevel: 10,\r\n        formatter: (element) => {\r\n          return element.value[2]; // Use sum variable here\r\n        },\r\n    }\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction renderRectangle(params, api) {\r\n\r\n    var xCoor = api.value(0);\r\n    var yCoor = api.value(1);\r\n    var color = api.value(3);\r\n\r\n    const [x,y] = api.coord([xCoor, yCoor])\r\n    const [w,h] = api.size([1, 1])\r\n\r\n    return {\r\n        type: 'rect',\r\n        shape: {\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        },\r\n        style: api.style({\r\n            stroke: '#B0B0B0',\r\n            fill: color,\r\n        }),\r\n    };\r\n}\r\n","\r\n\r\nimport pie from './index'\r\n/**\r\n * @param  {string} col  column name\r\n */\r\nexport default function fromSeries( props ){\r\n\r\n  const group = props.json_array.groupby([props.col])\r\n\r\n  return pie({\r\n      ...props,\r\n      ...{\r\n        json_array: group,\r\n        col: 'count',\r\n        name: props.col\r\n        }\r\n  })\r\n\r\n}\r\n","\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a Radar char\r\n * @param  {string} col  column used to generate the radar values\r\n */\r\nexport default function radar( props ){\r\n\r\n\r\n  var Series = {\r\n    // name: 'Budget vs spending',\r\n    type: 'radar',\r\n    data: [\r\n      {\r\n        value: props.json_array.map(r => r[props.value]),\r\n        name: props.col\r\n      }\r\n    ]\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Hline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'hLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: [1, 2],\r\n            y: 0,\r\n        },\r\n        data: data,\r\n        z: 100\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var yValue = api.value(0);\r\n    var highPoint = api.coord([api.value(1), yValue]);\r\n    var lowPoint = api.coord([api.value(2), yValue]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: 'green'\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function Vline( props ){\r\n\r\n  var data\r\n  if( props.data !== undefined ){\r\n    data = props.data\r\n\r\n  } else if( (props.colx!==undefined)&(props.coly !== undefined)&(props.colz !== undefined) ){\r\n    data = props.json_array.map( r => {return [r[props.colx], r[props.coly], r[props.colz]]})\r\n\r\n  } else {\r\n    alert( 'insufficient attributes')\r\n    return\r\n  }\r\n\r\n  var Series = [\r\n    {\r\n        type: 'custom',\r\n        name: 'vLine',\r\n        animation: false,\r\n        legendHoverLink : false,\r\n        silent: true,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 1.0\r\n            }\r\n        },\r\n        renderItem: (params, api) => render(params, api, props),\r\n        encode: {\r\n            x: 0,\r\n            y: [1, 2]\r\n        },\r\n        data: data\r\n    },\r\n\r\n  ]\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n\r\n\r\n\r\nfunction render(params, api, props) {\r\n\r\n    var xValue = api.value(0);\r\n    var highPoint = api.coord([xValue, api.value(1)]);\r\n    var lowPoint = api.coord([xValue, api.value(2)]);\r\n\r\n    var Series = {\r\n        type: 'group',\r\n        children: [\r\n        {\r\n            type: 'line',\r\n            transition: ['shape'],\r\n            shape: {\r\n                x1: highPoint[0], y1: highPoint[1],\r\n                x2: lowPoint[0], y2: lowPoint[1]\r\n            },\r\n            style: api.style({\r\n                stroke: api.visual('color'),\r\n                fill: null\r\n            })\r\n        },\r\n      ]\r\n    };\r\n\r\n    if( props.color !== undefined ) Series.children[0].style.fill = props.color\r\n    if( props.border !== undefined ) Series.children[0].style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\nexport default function Circle( props ){\r\n  \r\n  var Series = {\r\n      type: 'custom',\r\n      renderItem: (params, api) => renderItem(params, api, props),\r\n      animation: false,\r\n      legendHoverLink : false,\r\n      silent: true,\r\n      data: props.data,\r\n      z: 0,\r\n      zlevel: 0,\r\n      encode: {\r\n          x: 0,\r\n          y: 1\r\n      },\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n\r\n}\r\n\r\nfunction renderItem(params, api, props) {\r\n\r\n    const [x,y] = api.coord([\r\n      api.value(0),\r\n      api.value(1)\r\n    ])\r\n\r\n    const radius = Math.max(...api.size([props.radius, props.radius]))\r\n\r\n    var Series = {\r\n        type: 'circle',\r\n        shape: {\r\n          cx: x,\r\n          cy: y,\r\n          r: radius,\r\n        },\r\n        z: 0,\r\n        zlevel: 0,\r\n        style: api.style({\r\n            fill: 'red',\r\n            stroke: 'red'\r\n        })\r\n    }\r\n\r\n    if( props.color !== undefined ) Series.style.fill = props.color\r\n    if( props.border !== undefined ) Series.style.stroke = props.border\r\n\r\n    return Series\r\n}\r\n","/**\r\n * echarts Formatter\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\nimport scatter from './scatter'\r\nimport scatter_by from './scatter/scatterBy'\r\nimport boxplot from './boxplot'\r\nimport line from './line'\r\nimport bar from './bar'\r\nimport grid from './grid'\r\nimport pie from './pie'\r\nimport pieFromSeries from './pie/fromSeries'\r\nimport radar from './radar'\r\nimport waterfall from './waterfall'\r\nimport rollingAvg from './line/rollingAvg'\r\n\r\nimport ErrorBars from './features/ErrorBars'\r\nimport Circle from './features/Circle'\r\nimport Vline from './features/Vline'\r\nimport Hline from './features/Hline'\r\n\r\n\r\n\r\nexport {default as scatter} from './scatter'\r\nexport {default as scatter_by} from './scatter/scatterBy'\r\n\r\n\r\nexport default class echartsSeries extends Object {\r\n\r\n  constructor(data) {\r\n    super()\r\n\r\n    this.json_array = data;\r\n\r\n    // convert to a jsonArray type and groupby week attribute\r\n    if( !this.json_array instanceof jsonArray ){\r\n      this.json_array = new jsonArray( this.json_array )\r\n    }\r\n\r\n  }\r\n\r\n  scatter( props ){ return scatter({...props, ...{json_array:this.json_array}}) }\r\n  scatter_by( props ){ return scatter_by({...props, ...{json_array:this.json_array}}) }\r\n  boxplot( props ){ return boxplot({...props, ...{json_array:this.json_array}}) }\r\n  line( props ){ return line({...props, ...{json_array:this.json_array}}) }\r\n  bar( props ){ return bar({...props, ...{json_array:this.json_array}}) }\r\n  pie( props ){ return pie({...props, ...{json_array:this.json_array}}) }\r\n  pieFromSeries( props ){ return pieFromSeries({...props, ...{json_array:this.json_array}}) }\r\n  rectGrid( props ){ return grid({...props, ...{json_array:this.json_array}}) }\r\n  waterfall( props ){ return waterfall({...props, ...{json_array:this.json_array}}) }\r\n  rollingAvg( props ){ return rollingAvg({...props, ...{json_array:this.json_array}}) }\r\n  radar( props ){ return radar({...props, ...{json_array:this.json_array}}) }\r\n\r\n  errorbars( props ){ return ErrorBars({...props, ...{json_array:this.json_array}}) }\r\n  circle( props ){ return Circle({...props, ...{json_array:this.json_array}}) }\r\n  vline( props ){ return Vline({...props, ...{json_array:this.json_array}}) }\r\n  hline( props ){ return Hline({...props, ...{json_array:this.json_array}}) }\r\n}\r\n","\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Vline from './Vline'\r\n\r\n// Adds a scatter point for the ends of the error bars\r\n// and a line connecting the scatter poitns\r\nexport default function ErrorBars( props ){\r\n\r\n  if( (props.min === undefined)|(props.max === undefined) ){\r\n    alert( 'minimum attributes: min and max')\r\n    return\r\n  }\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = Vline({\r\n    ...props,\r\n    ...{\r\n      colx: '__index__',\r\n      coly: props.min,\r\n      colz: props.max,\r\n      zIndex: -1\r\n    }\r\n  })\r\n\r\n  // scatter point for the minimum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.min,\r\n      symbol: 'triangle',\r\n      color: 'green'\r\n    })[0]\r\n  )\r\n\r\n  // scatter point for the maximum value\r\n  Series.push(\r\n    json_array.echartsSeries.scatter({\r\n      colx:'__index__',\r\n      coly:props.max,\r\n      symbol: 'diamond',\r\n      color: 'blue'\r\n    })[0],\r\n  )\r\n\r\n\r\n  // scatter point for the average value when available\r\n  if( props.avg !== undefined ){\r\n    Series.push(\r\n      json_array.echartsSeries.scatter({\r\n        colx:'__index__',\r\n        coly:props.avg,\r\n        symbol: 'square',\r\n        color: 'red'\r\n      })[0]\r\n    )\r\n  }\r\n\r\n  return Series\r\n}\r\n","\r\n// returns a rolling average line where the average is\r\n// computed based on the center of the window\r\nexport default function CenterWindow(data, window){\r\n\r\n\r\n\r\n  return [\r\n    {\r\n      type: 'line',\r\n      data: data,\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#000000',\r\n          width: 2,\r\n          type: 'dashed'\r\n      },\r\n    }\r\n  ]\r\n\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../../propsToSeries'\r\nimport CenterWindow from './CenterWindow'\r\nimport TailingWindow from './TailingWindow'\r\nimport Standard from './Standard'\r\n\r\n// returns the\r\nexport default function rollingAvg( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  // define the average type\r\n  var avgType = props.avgType\r\n  if( avgType === undefined  ) avgType = 'center'\r\n\r\n\r\n  if( !json_array.columns.includes(`${props.coly}_avg`) ){\r\n    json_array = json_array.rolling_average(\r\n      props.coly,\r\n      props.window,\r\n      avgType\r\n    )\r\n  }\r\n\r\n  const data = json_array.map(r => r[`${props.coly}_avg`])\r\n\r\n  var Series = []\r\n  switch( avgType ){\r\n    case 'center':\r\n      Series = Standard(data, props.window)\r\n      if( props.showUncertainty === true ) Series = CenterWindow(data, props.window)\r\n      break\r\n\r\n    case 'tailing':\r\n      Series = Standard(data, props.window)\r\n      if( props.showUncertainty === true ) Series = TailingWindow(data, props.window)\r\n      break\r\n\r\n    default:\r\n      Series = Standard(data, props.window)\r\n\r\n  }\r\n\r\n\r\n  for( let i=0; i < Series.length; i++ ){\r\n    Series[i] = propsToSeries(props, Series[i])\r\n  }\r\n\r\n  return Series\r\n\r\n}\r\n","\r\n// returns a rolling average line where the average is\r\n// computed based on the center of the window\r\nexport default function CenterWindow(data, window){\r\n\r\n\r\n  var midStart = Math.floor(window/2) + 1\r\n  var midEnd = data.length - Math.floor(window/2) - 1\r\n\r\n  return [\r\n    {\r\n      type: 'line',\r\n      data: data.slice(0,midStart),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(midStart-1).concat(data.slice(midStart-1, midEnd+1)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#000000',\r\n          width: 2,\r\n          type: 'dashed'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(midEnd).concat(data.slice(midEnd, data.length)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    }\r\n  ]\r\n\r\n}\r\n","// returns the rolling average line plot where the average\r\n// is computed across the previous n samples\r\nexport default function TailingWindow(data, window){\r\n\r\n  return [\r\n    {\r\n      type: 'line',\r\n      data: data.slice(0,window),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#808080',\r\n          width: 2,\r\n          type: 'dotted'\r\n      },\r\n    },\r\n    {\r\n      type: 'line',\r\n      data: Array(window-1).concat(data.slice(window-1, data.length)),\r\n      smooth: true,\r\n      showSymbol: false,\r\n      lineStyle: {\r\n          color: '#000000',\r\n          width: 2,\r\n          type: 'dashed'\r\n      },\r\n    },\r\n  ]\r\n\r\n}\r\n","/**\r\n * Pluggin Managements\r\n * ======================\r\n *\r\n * Attemps to import various functionality that is dependent on\r\n * various modules. When the module is not available, the enable\r\n * flag is not set, rendering the function not available\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 26, 2020\r\n *\r\n */\r\n\r\n // import * as echarts from 'echarts';\r\n // import 'echarts-gl';\r\n\r\nexport var enabledComponents = {\r\n  echarts: true,\r\n  semanticUI: false,\r\n  excel: false,\r\n}\r\n\r\n// attempt to import the react echarts component\r\nexport var components = {\r\n  echarts: undefined,\r\n  semanticUI: undefined,\r\n  excel: undefined,\r\n}\r\n\r\n\r\ntry{\r\n  // require(\"echarts/lib/lang\");\r\n  // require.cache[require.resolve('echarts/lib/lang')].exports = require(\"echarts/lib/langEN\");\r\n  // echarts = require('echarts')\r\n  components.echarts = require('./echarts').default\r\n  enabledComponents.echarts = true\r\n}catch{\r\n  // console.log('failed to load echarts. module not installed')\r\n}\r\n\r\ntry{\r\n  components.semanticUI = require('../framework/SemanticUI').default\r\n  enabledComponents.semanticUI = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n\r\ntry{\r\n  components.excel = require('./Excel').default\r\n  enabledComponents.excel = true\r\n}catch{\r\n  // console.log('failed to load semanticUI. module not installed')\r\n}\r\n","/**\r\n * React Components\r\n * ===================\r\n *\r\n * returns a class containing all available React components based\r\n * on the module availability\r\n *\r\n * @author: Nik Sumikawa\r\n * @date: Aug 15, 2020\r\n * @type {Object}\r\n */\r\n\r\n\r\n\r\nimport {enabledComponents, components} from './plugins/Plugins'\r\n\r\nimport echartsLibrary from './plugins/echarts'\r\n\r\nexport default class ReactComponents extends Object{\r\n\r\n  constructor(data, props={}) {\r\n    super()\r\n\r\n    this.data = data\r\n    this.props = props\r\n  }\r\n\r\n  get Table(){\r\n\r\n    const Table = require('./table/Table').default\r\n    return new Table(this.data, this.props).Table\r\n  }\r\n\r\n\r\n  get FileIO(){\r\n\r\n    const FileIO = require('./plugins/fileIO').default\r\n    return new FileIO(this.data, this.props)\r\n  }\r\n\r\n  get semanticUI(){\r\n    if( enabledComponents.semanticUI === false ){\r\n      alert( 'Semantic UI module not installed')\r\n      return {}\r\n    }\r\n\r\n    return new components.semanticUI( this.data, this.props )\r\n  }\r\n\r\n\r\n  get Excel(){\r\n    if( enabledComponents.excel === false ){\r\n      alert( 'react-excel-renderer module not installed')\r\n      return {}\r\n    }\r\n\r\n    return components.excel\r\n  }\r\n\r\n  // return a dictionary containing the various e-charts plotting routines\r\n  get echarts(){\r\n\r\n    if( enabledComponents.echarts === false ){\r\n      alert('echarts module not installed. Install echarts and echarts-for-react')\r\n      return {}\r\n    }\r\n\r\n    return new echartsLibrary( this.data, this.props )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","/**\r\n * echarts line\r\n * =================\r\n *\r\n * Converts json arrays into echart line series object\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * Convert the json_array to a line plot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function line( props ){\r\n\r\n  var json_array = props.json_array\r\n\r\n  var Series = {\r\n    type: 'line',\r\n    data: json_array.map(r => r[props.coly])\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return [Series]\r\n\r\n}\r\n","\r\nimport Hline from '../../features/Hline'\r\n\r\nexport default function HorizontalLines( props, Series ){\r\n\r\n  var data = []\r\n  for( let i=0; i < props.json_array.length-2; i++ ){\r\n    // const index = props.json_array[i][props.colx]\r\n    // const min = props.json_array[i][props.coly]\r\n    const y_val = props.json_array[i+1][props.coly]\r\n    data.push([y_val, i, i+1])\r\n  }\r\n\r\n  Series = Series.concat(\r\n   Hline({\r\n     data: data,\r\n     color: 'black',\r\n     border: 'black',\r\n\r\n   })\r\n )\r\n\r\n return Series\r\n\r\n}\r\n","\r\nimport CompletedWaferfall from './completed'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\nimport HorizontalLines from './components/HorizontalLines'\r\n\r\nexport default function Waterfall( props ){\r\n\r\n  var data = props.json_array\r\n\r\n  // redirect to the completed waferfall when colz is provided\r\n  if( props.colz !== undefined ) return CompletedWaferfall(props )\r\n\r\n  // perform the forward difference required to generate the waterfall\r\n  data = data.forward_diff(props.coly, 'waferfallDiff' )\r\n\r\n  console.log( data )\r\n\r\n  var pos = []\r\n  var neg = []\r\n  var stack = []\r\n\r\n  for( let i=0; i < data.length - 1; i++ ){\r\n    const temp = data[i+1]['waferfallDiff']\r\n\r\n\r\n    if(temp >= 0){\r\n      pos.push(temp)\r\n      neg.push('-')\r\n      stack.push( data[i][props.coly] )\r\n\r\n    }else{\r\n      pos.push('-')\r\n      neg.push(Math.abs(temp))\r\n      stack.push( data[i+1][props.coly] )\r\n    }\r\n\r\n  }\r\n\r\n  var Series = [\r\n      {\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          itemStyle: {\r\n              barBorderColor: 'rgba(0,0,0,0)',\r\n              color: 'rgba(0,0,0,0)'\r\n          },\r\n          emphasis: {\r\n              itemStyle: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n              }\r\n          },\r\n          data: stack\r\n      },\r\n\r\n      {\r\n          name: 'Increase',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: pos,\r\n          color: (props.posColor === undefined) ? 'green' : props.posColor,\r\n      },\r\n\r\n      {\r\n          name: 'Decrease',\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          data: neg,\r\n          color: (props.negColor === undefined) ? 'red' : props.negColor,\r\n      }\r\n  ]\r\n\r\n  Series = HorizontalLines(props, Series)\r\n\r\n  Series[0] = propsToSeries(props, Series[0])\r\n\r\n  return Series\r\n\r\n\r\n\r\n}\r\n","\r\nimport propsToSeries from '../propsToSeries'\r\nimport HorizontalLines from './components/HorizontalLines'\r\n\r\nexport default function CompletedWaferfall( props ){\r\n\r\n  var data = props.json_array\r\n\r\n  // perform the forward difference required to generate the waterfall\r\n  data = data.forward_diff(props.coly, 'waferfallDiff' )\r\n\r\n  var pos = []\r\n  var neg = []\r\n  var pos_c = []\r\n  var neg_c = []\r\n  var stack = []\r\n\r\n  for( let i=0; i < data.length - 1; i++ ){\r\n    const temp = data[i+1]['waferfallDiff']\r\n\r\n    const tempComplete = temp * data[i+1][props.colz]\r\n    const tempIncompete = temp * (1 - data[i+1][props.colz])\r\n\r\n    if(temp >= 0){\r\n      pos.push(tempIncompete )\r\n      pos_c.push(tempComplete )\r\n      neg.push('-')\r\n      neg_c.push('-')\r\n      stack.push( data[i][props.coly] )\r\n\r\n    }else{\r\n      pos.push('-')\r\n      pos_c.push('-')\r\n      neg.push(Math.abs(tempIncompete))\r\n      neg_c.push(Math.abs(tempComplete))\r\n      stack.push( data[i+1][props.coly] )\r\n    }\r\n\r\n  }\r\n\r\n  var Series = [\r\n      {\r\n          type: 'bar',\r\n          stack: 'waferfall',\r\n          itemStyle: {\r\n              barBorderColor: 'rgba(0,0,0,0)',\r\n              color: 'rgba(0,0,0,0)'\r\n          },\r\n          emphasis: {\r\n              itemStyle: {\r\n                  barBorderColor: 'rgba(0,0,0,0)',\r\n                  color: 'rgba(0,0,0,0)'\r\n              }\r\n          },\r\n          data: stack\r\n      },\r\n\r\n      {\r\n        name: 'Increase-complete',\r\n        type: 'bar',\r\n        stack: 'waferfall',\r\n        data: pos_c,\r\n        color: (props.posColorComplete === undefined) ? '#028a00' : props.posColorComplete,\r\n      },\r\n      {\r\n        name: 'Increase-Incomplete',\r\n        type: 'bar',\r\n        stack: 'waferfall',\r\n        data: pos,\r\n        color: (props.posColorIncomplete === undefined) ? '#1dff1a' : props.posColorIncomplete,\r\n      },\r\n\r\n      {\r\n        name: 'Decrease-complete',\r\n        type: 'bar',\r\n        stack: 'waferfall',\r\n        data: neg_c,\r\n        color: (props.negColorComplete === undefined) ? '#8a0000' : props.negColorComplete,\r\n      },\r\n      {\r\n        name: 'Decrease-Incomplete',\r\n        type: 'bar',\r\n        stack: 'waferfall',\r\n        data: neg,\r\n        color: (props.negColorIncomplete === undefined) ? '#fa0000' : props.negColorIncomplete,\r\n      },\r\n  ]\r\n\r\n  Series = HorizontalLines(props, Series)\r\n\r\n  Series[0] = propsToSeries(props, Series[0])\r\n\r\n  return Series\r\n\r\n\r\n\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function EchartsReact( props ) {\r\n\r\n  // extract the options from the props so it can be modified\r\n  var option = props.option\r\n\r\n  var onEvents = {}\r\n\r\n  // when selectionCallback is provided, add the brush functionality\r\n  // and callback function to the list of events\r\n  if( props.onSelect !== undefined ){\r\n    option['brush'] = {\r\n      xAxisIndex: 'all',\r\n      outOfBrush: {\r\n        colorAlpha: 0.1\r\n      }\r\n    }\r\n\r\n    const onSelect = (params) => {\r\n      if( params.batch === undefined ) return\r\n\r\n      const index = params.batch[0].selected[0].dataIndex;\r\n      if( params.batch[0].selected !== undefined ){\r\n        props.onSelect({\r\n            index: index,\r\n            data: props.data.iloc(index)\r\n        } )\r\n      }\r\n    }\r\n\r\n    onEvents['brushselected'] = onSelect\r\n  }\r\n\r\n  // when an onClick event is provided, add it to the Events\r\n  if( props.onClick !== undefined ){\r\n    onEvents['click'] = props.onClick\r\n  }\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option = {option}\r\n      onEvents={onEvents}\r\n      style={props.echartsStyle}\r\n    />\r\n  )\r\n}\r\n","/**\r\n * Echarts Wrapper\r\n * ==================\r\n *\r\n * React component used to wrap the echart's plotter. This includes\r\n * handles for onClick function and callback functions\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 20, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport ReactLibraryFramework from '../../ReactLibraryFramework'\r\n\r\nimport EchartsReact from './EchartsReact'\r\n// export {default as EchartsReact} from './EchartsReact'\r\n\r\n\r\nexport default class echartsLibrary extends ReactLibraryFramework{\r\n  constructor(data, props={}){\r\n    super(data, props)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Echarts = this.Echarts.bind(this)\r\n    this.Bar = this.Bar.bind(this)\r\n    this.Boxplot = this.Boxplot.bind(this)\r\n    this.Heatmap = this.Heatmap.bind(this)\r\n    this.Histogram = this.Histogram.bind(this)\r\n    this.Line = this.Line.bind(this)\r\n    this.Pareto = this.Pareto.bind(this)\r\n    this.Pie = this.Pie.bind(this)\r\n    this.RectGrid = this.RectGrid.bind(this)\r\n    this.Scatter = this.Scatter.bind(this)\r\n  }\r\n\r\n  Echarts( props ){\r\n    return EchartsReact( this.format_props(props) )\r\n  }\r\n\r\n\r\n  Bar( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.bar(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n\r\n  Boxplot( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.boxplot(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Heatmap( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.heatmap(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Histogram( props ){\r\n    const __props = this.format_props(props)\r\n    const series = __props.data.col( __props.colx )\r\n    const hist = series.binning({bins: 30})\r\n    const opt = hist.echartsOptions\r\n    const options = opt.bar({colx: 'value', coly: 'count'})\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Line( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.line(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Pareto( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.pareto(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Pie( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.pie(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  PieFromSeries( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.pieFromSeries(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  RectGrid( props ){\r\n    const __props = this.format_props(props)\r\n    const options = __props.data.echartsOptions.rectGrid(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n  Scatter( props ){\r\n    const __props = this.format_props(props)\r\n    const options = props.data.echartsOptions.scatter(__props)\r\n    return this.Render( __props, options )\r\n  }\r\n\r\n\r\n\r\n\r\n  // Pareto( props ){\r\n  //   const options = props.data.echartsOptions.heatmap(props)\r\n  //   return this.Render( props, options )\r\n  // }\r\n\r\n  Render( props, options ){\r\n    return (\r\n      <EchartsReact\r\n        {...props}\r\n        option = {options}\r\n        />\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport function react_echarts( options, params ){\r\n  return(\r\n    <EchartsReact\r\n      option = {options}\r\n      onClick = {params['onClick']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// /**\r\n//  * Returns a Pareto plot component based on the contents of the\r\n//  * jsonArray DAtaFrame\r\n//  */\r\n// export function Pareto( props ){\r\n//\r\n//   // pivot the user data based the unique users per day\r\n//   var pivot = props.data.pivot_table(\r\n//     props.colx,\r\n//     props.coly,\r\n//     'unique',\r\n//     props.label\r\n//     )\r\n//\r\n//   const split_values = props.data.unique(props.coly)\r\n//\r\n//   // format the x axis as a date when specified\r\n//   if( (props.dates === true) | (props.colx === 'date') ){\r\n//\r\n//     function formatDate(date) {\r\n//         var d = new Date(date),\r\n//             month = '' + (d.getMonth() + 1),\r\n//             day = '' + d.getDate(),\r\n//             year = d.getFullYear();\r\n//\r\n//         if (month.length < 2)\r\n//             month = '0' + month;\r\n//         if (day.length < 2)\r\n//             day = '0' + day;\r\n//\r\n//         return [year, month, day].join('-');\r\n//     }\r\n//\r\n//     pivot = pivot.apply('row', (value) => moment(value), 'datetime' )\r\n//\r\n//     // extract a list of unique day\r\n//     const dates = pivot.unique('row')\r\n//     const datetimes = pivot.unique('datetime')\r\n//\r\n//     // calculate the number of days between the minimum and maximum date\r\n//     const t = new Date(Math.min.apply(null,datetimes))\r\n//     const start_date = moment(formatDate(t))\r\n//\r\n//     // calculate the number of days within the window\r\n//     const timeframe = (pivot.max('datetime') - pivot.min('datetime') )/(60*60*24*1000)\r\n//\r\n//     // add dates not in the pivot table\r\n//     for( var i=0; i < timeframe; i++ ){\r\n//       const date = moment(start_date).add(i, 'days').format('YYYY-MM-DD')\r\n//       if( !dates.includes(date) ) pivot.push({row: date})\r\n//     }\r\n//   }\r\n//\r\n//   // sort the usage by date to ensure proper ordering\r\n//   pivot = pivot.sort_values('row')\r\n//\r\n//   var _props = {\r\n//     ...props,\r\n//     ...{\r\n//       data: pivot,\r\n//       colx: 'row',\r\n//       coly: split_values,\r\n//       stacked: true,\r\n//     }\r\n//   }\r\n//\r\n//\r\n//   const options = props.data.echartsOptions\r\n//\r\n//   return(\r\n//     <EchartsReact\r\n//       {..._props}\r\n//       option = {options.bar(_props)}\r\n//       />\r\n//   )\r\n//   // return(\r\n//   //   <Bar\r\n//   //     {...props}\r\n//   //     data = {pivot}\r\n//   //     colx = 'row'\r\n//   //     coly = {split_values}\r\n//   //     stacked = {true}\r\n//   //     />\r\n//   // )\r\n// }\r\n","/**\r\n * eCharts Boxplot\r\n * =================\r\n *\r\n * Converts json arrays into echart series objects. The intention\r\n * is to simplify the conversion from json array to plot\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: April 21, 2020\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\n\r\nimport scatter_overlay from './scatter_overlay'\r\n\r\nvar prepareBoxplotData\r\ntry{\r\n  prepareBoxplotData =  require( 'echarts/extension/dataTool').prepareBoxplotData\r\n}catch{ console.log( 'echarts module not implemented')}\r\n\r\n\r\n/**\r\n * Convert the json_array to a format for generating a boxplot\r\n * @param  {string} colx  column 1 name, when 'index' is provided, the index value will be used\r\n * @param  {string} coly  column 2 name\r\n * @param  {object} params parameters used to customize the plot\r\n * @return {Object}       local object contents\r\n */\r\nexport default function boxplot( props ){\r\n\r\n\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  json_array = json_array.sort_values(props.colx)\r\n\r\n  // group the data based on the boxplot groups\r\n  const groups = json_array.groupby([props.colx])\r\n\r\n  // group the data based on the unique column values\r\n  var group_values = []\r\n  for( var i=0; i < groups.length; i++ ){\r\n    group_values.push(\r\n      groups[i].json_obj.map(row => row[props.coly])\r\n    )\r\n  }\r\n\r\n  // // leverage the echarts function to generate the data\r\n  const echartsData = prepareBoxplotData(group_values)\r\n\r\n  // format the boxplot results as a series\r\n  var series = [\r\n    {\r\n      name: 'boxplot',\r\n      type: 'boxplot',\r\n      data: echartsData.boxData,\r\n    }\r\n  ]\r\n\r\n\r\n  // add the outlier samples. This is set by default and\r\n  // can only be turned off by expicitly providing false\r\n  if( (props.outliers !== false)&(props.allSample !== true) ){\r\n    series.push({\r\n      name: 'outlier',\r\n      type: 'scatter',\r\n      data: echartsData.outliers\r\n      }\r\n    )\r\n  }\r\n\r\n  if( (props.allSample === true)|(props.overlayFilter !== undefined) ){\r\n    series = series.concat(\r\n      scatter_overlay(props)\r\n    )\r\n  }\r\n\r\n\r\n  return series\r\n}\r\n","/**\r\n * Scatter Overlay\r\n * ===================\r\n *\r\n * Overlays a scatter plot containing all samples\r\n * on top of an existing boxplot\r\n *\r\n * @author Nik Sumikawa\r\n * @date Dec 2, 2020\r\n *\r\n */\r\n\r\n\r\nimport jsonArray from '../../../../jsonArray'\r\nimport scatter from '../scatter'\r\nimport scatter_by from '../scatter/scatterBy'\r\n\r\n // when specified, overlay a scatter plot that highlights\r\n // the location of all 'MARKED' samples in the specified\r\n // label column\r\nexport default function scatter_overlay( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  // group the data based on the boxplot groups\r\n  const keys = json_array.unique( props.colx )\r\n\r\n  // create a mapping between the x column values and the integer\r\n  // values used for the boxplot\r\n  var mapping = {}\r\n  // keys.forEach((element, i) => mapping[element] = echartsData.axisData[i])\r\n  keys.forEach((element, i) => mapping[element] = i)\r\n  json_array = json_array.copy_column( props.colx, 'boxplot_x' )\r\n  json_array = json_array.replace('boxplot_x', mapping)\r\n  json_array = json_array.astype({'boxplot_x': 'int'})\r\n\r\n\r\n  if( props.overlayFilter ) json_array = json_array.filter( props.overlayFilter )\r\n\r\n  // create multicolored scatter plot when colorBy attribute is provided\r\n  var scatterFunc = scatter\r\n  if( props.colorBy !== undefined ) scatterFunc = scatter_by\r\n\r\n\r\n  return scatterFunc({\r\n      ...props,\r\n      ...{\r\n        colx: 'boxplot_x',\r\n        json_array: json_array,\r\n      }}\r\n    )\r\n\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport propsToSeries from '../propsToSeries'\r\n\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function Bar( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n\r\n  var Series = {\r\n    name: 'bar',\r\n    type: 'bar',\r\n    data: json_array.map( row => row[props.col] )\r\n\r\n  }\r\n\r\n  Series = propsToSeries(props, Series)\r\n\r\n  return Series\r\n}\r\n","\r\nimport jsonArray from '../../../../jsonArray'\r\nimport Bar from './bar'\r\n/**\r\n * echarts area plot data formatter\r\n * @param  {string} col  column name\r\n * @return {object}      echarts data series object\r\n */\r\nexport default function BarPlot( props ){\r\n\r\n  var json_array = props.json_array\r\n  if( !(json_array instanceof jsonArray) ){\r\n    json_array = new jsonArray(json_array)\r\n  }\r\n\r\n  const col = (props.col === undefined) ? props.coly : props.col\r\n\r\n  // return a single boxplot when the column is a string\r\n  if( typeof col === 'string' ){\r\n    return [Bar({\r\n      ...props,\r\n      ...{\r\n        col: col,\r\n        json_array: json_array,\r\n      }\r\n    })]\r\n  }\r\n\r\n  var series = []\r\n  for( var i=0; i < col.length; i++ ){\r\n\r\n    // create a data structure for plotting the scatter plot\r\n    series.push( Bar({\r\n      ...props,\r\n      ...{\r\n        col: col[i],\r\n        name: col[i],\r\n        json_array: json_array,\r\n        // barGap: (i === 0 ) ? 0 : .1,\r\n        emphasis: (props.emphasis === true) ? { focus: 'series' } : undefined,\r\n      }\r\n    }) )\r\n\r\n  }\r\n\r\n  return series\r\n\r\n\r\n\r\n}\r\n","var map = {\n\t\"./\": 326,\n\t\"./components/CodeRender\": 404,\n\t\"./components/CodeRender.jsx\": 404,\n\t\"./components/Example\": 393,\n\t\"./components/Example.jsx\": 393,\n\t\"./components/Header\": 394,\n\t\"./components/Header.jsx\": 394,\n\t\"./components/Sidebar\": 405,\n\t\"./components/Sidebar.jsx\": 405,\n\t\"./components/jsonArray\": 286,\n\t\"./components/jsonArray.js\": 286,\n\t\"./config\": 409,\n\t\"./config.js\": 409,\n\t\"./doc/DataFrame/BasicFunctions/Slice.doc\": 1293,\n\t\"./doc/DataFrame/BasicFunctions/SortValues.doc\": 1294,\n\t\"./doc/DataFrame/BasicFunctions/Transpose.doc\": 1295,\n\t\"./doc/DataFrame/BasicFunctions/insert.doc\": 1296,\n\t\"./doc/DataFrame/BasicFunctions/replace.doc\": 1297,\n\t\"./doc/DataFrame/Extract/toCsv.doc\": 1298,\n\t\"./doc/DataFrame/ValueCounts/multipleColumns.doc\": 1299,\n\t\"./doc/DataFrame/datetime/arithmetic.doc\": 1300,\n\t\"./doc/DataFrame/datetime/date.doc\": 1301,\n\t\"./doc/DataFrame/datetime/fillDays.doc\": 1302,\n\t\"./doc/DataFrame/datetime/fillWeek.doc\": 1303,\n\t\"./doc/DataFrame/datetime/week.doc\": 1304,\n\t\"./doc/DataFrame/toSeries/toSeries.doc\": 1305,\n\t\"./doc/Demo/BasicExample.doc\": 1306,\n\t\"./doc/Echarts/Area/Simple.doc\": 1307,\n\t\"./doc/Echarts/Bar/HorizontalSeries.doc\": 1308,\n\t\"./doc/Echarts/Bar/Pareto.doc\": 1309,\n\t\"./doc/Echarts/Bar/Simple.doc\": 1310,\n\t\"./doc/Echarts/Bar/Stacked.doc\": 1311,\n\t\"./doc/Echarts/Bar/StackedSeries.doc\": 1312,\n\t\"./doc/Echarts/Bar/VerticalSeries.doc\": 1313,\n\t\"./doc/Echarts/Boxplot/AllSamples.doc\": 1314,\n\t\"./doc/Echarts/Boxplot/AllSamplesGrouped.doc\": 1315,\n\t\"./doc/Echarts/Boxplot/FilteredOverlay.doc\": 1316,\n\t\"./doc/Echarts/Boxplot/Simple.doc\": 1317,\n\t\"./doc/Echarts/Custom/HorizontalLine.doc\": 1318,\n\t\"./doc/Echarts/Custom/Selection.doc\": 1319,\n\t\"./doc/Echarts/Custom/Simple.doc\": 1320,\n\t\"./doc/Echarts/Custom/Style.doc\": 1321,\n\t\"./doc/Echarts/Custom/Zoom.doc\": 1322,\n\t\"./doc/Echarts/Custom/ZoomSlider.doc\": 1323,\n\t\"./doc/Echarts/Custom/ZoomVertical.doc\": 1324,\n\t\"./doc/Echarts/Custom/onClick.doc\": 1325,\n\t\"./doc/Echarts/Format/Legend.doc\": 1326,\n\t\"./doc/Echarts/Format/ToolboxExample.doc\": 1327,\n\t\"./doc/Echarts/Heatmap/Simple.doc\": 1328,\n\t\"./doc/Echarts/Line/ErrorBars.doc\": 1329,\n\t\"./doc/Echarts/Line/Highlight.doc\": 1330,\n\t\"./doc/Echarts/Line/Simple.doc\": 1331,\n\t\"./doc/Echarts/Pie/FromSeries.doc\": 1332,\n\t\"./doc/Echarts/Pie/Simple.doc\": 1333,\n\t\"./doc/Echarts/Radar/Simple.doc\": 1334,\n\t\"./doc/Echarts/Radar/modified.doc\": 1335,\n\t\"./doc/Echarts/RectGrid/Custom.doc\": 1336,\n\t\"./doc/Echarts/RectGrid/Simple.doc\": 1337,\n\t\"./doc/Echarts/Scatter/ColorBy.doc\": 1338,\n\t\"./doc/Echarts/Scatter/Labeled.doc\": 1339,\n\t\"./doc/Echarts/Scatter/Simple.doc\": 1340,\n\t\"./doc/Echarts/Selection/SelectionScatter.doc\": 1341,\n\t\"./doc/Echarts/Tooltips/tooltips.doc\": 1342,\n\t\"./doc/Echarts/Waterfall/Basic.doc\": 1343,\n\t\"./doc/Echarts/Waterfall/Completion.doc\": 1344,\n\t\"./doc/Series/BasicFunctions/IndexAndValues.doc\": 1345,\n\t\"./doc/Series/BasicFunctions/SortValues.doc\": 1346,\n\t\"./doc/Series/BasicFunctions/Unique.doc\": 1347,\n\t\"./doc/Series/BasicFunctions/ValueCounts.doc\": 1348,\n\t\"./doc/Series/BasicFunctions/arithmetic.doc\": 1349,\n\t\"./doc/Series/BasicFunctions/duplicates.doc\": 1350,\n\t\"./doc/Series/BasicFunctions/insert.doc\": 1351,\n\t\"./doc/Series/BasicFunctions/replace.doc\": 1352,\n\t\"./doc/Series/BasicFunctions/toObject.doc\": 1353,\n\t\"./doc/Series/Echarts/Pareto.doc\": 1354,\n\t\"./doc/Series/Echarts/Pie.doc\": 1355,\n\t\"./doc/Series/Pareto/crop.doc\": 1356,\n\t\"./doc/Series/Table/Table.doc\": 1357,\n\t\"./doc/Series/toDataFrame/merge.doc\": 1358,\n\t\"./doc/Table/Accordian/AccordianTable.doc\": 1359,\n\t\"./doc/Table/AccordianTable.doc\": 1360,\n\t\"./doc/Table/AlternatingStyle.doc\": 1361,\n\t\"./doc/Table/Checkbox.doc\": 1362,\n\t\"./doc/Table/ColumnFilters.doc\": 1363,\n\t\"./doc/Table/Filtering/ColumnFilters.doc\": 1364,\n\t\"./doc/Table/Header/MultiRow.doc\": 1365,\n\t\"./doc/Table/Header/NoHeader.doc\": 1366,\n\t\"./doc/Table/LazyLoading.doc\": 1367,\n\t\"./doc/Table/LazyLoading/LazyLoading.doc\": 1368,\n\t\"./doc/Table/MultiRow/MultiRowCol.doc\": 1369,\n\t\"./doc/Table/MultiRow/MultirowTable.doc\": 1370,\n\t\"./doc/Table/MultiRowCol.doc\": 1371,\n\t\"./doc/Table/MultirowTable.doc\": 1372,\n\t\"./doc/Table/NoHeader.doc\": 1373,\n\t\"./doc/Table/ParentFilterCol.doc\": 1374,\n\t\"./doc/Table/ParentSortCol.doc\": 1375,\n\t\"./doc/Table/SimpleTable.doc\": 1376,\n\t\"./doc/Table/SpecialContent/Checkbox.doc\": 1377,\n\t\"./doc/Table/Style/AlternatingStyle.doc\": 1378,\n\t\"./doc/Table/Style/CustomCss.doc\": 1379,\n\t\"./doc/Table/Style/CustomeCellColoring.doc\": 1380,\n\t\"./doc/Table/Style/DataDrivenColoring.doc\": 1381,\n\t\"./doc/Table/Style/Hyperlinking.doc\": 1382,\n\t\"./doc/Table/Style/RenamingColumns.doc\": 1383,\n\t\"./doc/Table/Style/RenamingHeaders.doc\": 1384,\n\t\"./doc/Table/Style/SimpleTable.doc\": 1385,\n\t\"./doc/Table/Style/TableFormat.doc\": 1386,\n\t\"./doc/Table/TableFormat.doc\": 1387,\n\t\"./examples/DataFrame/BasicFunctions/Slice\": 154,\n\t\"./examples/DataFrame/BasicFunctions/Slice.jsx\": 154,\n\t\"./examples/DataFrame/BasicFunctions/SortIndex\": 168,\n\t\"./examples/DataFrame/BasicFunctions/SortIndex.jsx\": 168,\n\t\"./examples/DataFrame/BasicFunctions/SortValues\": 169,\n\t\"./examples/DataFrame/BasicFunctions/SortValues.jsx\": 169,\n\t\"./examples/DataFrame/BasicFunctions/Transpose\": 170,\n\t\"./examples/DataFrame/BasicFunctions/Transpose.jsx\": 170,\n\t\"./examples/DataFrame/BasicFunctions/config\": 171,\n\t\"./examples/DataFrame/BasicFunctions/config.json\": 171,\n\t\"./examples/DataFrame/BasicFunctions/insert\": 172,\n\t\"./examples/DataFrame/BasicFunctions/insert.jsx\": 172,\n\t\"./examples/DataFrame/BasicFunctions/replace\": 173,\n\t\"./examples/DataFrame/BasicFunctions/replace.jsx\": 173,\n\t\"./examples/DataFrame/Extract/config\": 174,\n\t\"./examples/DataFrame/Extract/config.json\": 174,\n\t\"./examples/DataFrame/Extract/toCsv\": 175,\n\t\"./examples/DataFrame/Extract/toCsv.jsx\": 175,\n\t\"./examples/DataFrame/ValueCounts/config\": 176,\n\t\"./examples/DataFrame/ValueCounts/config.json\": 176,\n\t\"./examples/DataFrame/ValueCounts/multipleColumns\": 177,\n\t\"./examples/DataFrame/ValueCounts/multipleColumns.jsx\": 177,\n\t\"./examples/DataFrame/config\": 178,\n\t\"./examples/DataFrame/config.js\": 178,\n\t\"./examples/DataFrame/datetime/arithmetic\": 179,\n\t\"./examples/DataFrame/datetime/arithmetic.jsx\": 179,\n\t\"./examples/DataFrame/datetime/config\": 180,\n\t\"./examples/DataFrame/datetime/config.json\": 180,\n\t\"./examples/DataFrame/datetime/date\": 181,\n\t\"./examples/DataFrame/datetime/date.jsx\": 181,\n\t\"./examples/DataFrame/datetime/fillDays\": 182,\n\t\"./examples/DataFrame/datetime/fillDays.jsx\": 182,\n\t\"./examples/DataFrame/datetime/fillWeek\": 183,\n\t\"./examples/DataFrame/datetime/fillWeek.jsx\": 183,\n\t\"./examples/DataFrame/datetime/week\": 184,\n\t\"./examples/DataFrame/datetime/week.jsx\": 184,\n\t\"./examples/DataFrame/toSeries/config\": 185,\n\t\"./examples/DataFrame/toSeries/config.json\": 185,\n\t\"./examples/DataFrame/toSeries/toSeries\": 186,\n\t\"./examples/DataFrame/toSeries/toSeries.jsx\": 186,\n\t\"./examples/Demo/BasicExample\": 392,\n\t\"./examples/Demo/BasicExample.jsx\": 392,\n\t\"./examples/Echarts/Area/Simple\": 187,\n\t\"./examples/Echarts/Area/Simple.jsx\": 187,\n\t\"./examples/Echarts/Area/config\": 188,\n\t\"./examples/Echarts/Area/config.json\": 188,\n\t\"./examples/Echarts/Bar/HorizontalSeries\": 189,\n\t\"./examples/Echarts/Bar/HorizontalSeries.jsx\": 189,\n\t\"./examples/Echarts/Bar/Pareto\": 190,\n\t\"./examples/Echarts/Bar/Pareto.jsx\": 190,\n\t\"./examples/Echarts/Bar/Simple\": 191,\n\t\"./examples/Echarts/Bar/Simple.jsx\": 191,\n\t\"./examples/Echarts/Bar/Stacked\": 192,\n\t\"./examples/Echarts/Bar/Stacked.jsx\": 192,\n\t\"./examples/Echarts/Bar/StackedSeries\": 193,\n\t\"./examples/Echarts/Bar/StackedSeries.jsx\": 193,\n\t\"./examples/Echarts/Bar/VerticalSeries\": 194,\n\t\"./examples/Echarts/Bar/VerticalSeries.jsx\": 194,\n\t\"./examples/Echarts/Bar/config\": 195,\n\t\"./examples/Echarts/Bar/config.json\": 195,\n\t\"./examples/Echarts/Boxplot/AllSamples\": 196,\n\t\"./examples/Echarts/Boxplot/AllSamples.jsx\": 196,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped\": 197,\n\t\"./examples/Echarts/Boxplot/AllSamplesGrouped.jsx\": 197,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay\": 198,\n\t\"./examples/Echarts/Boxplot/FilteredOverlay.jsx\": 198,\n\t\"./examples/Echarts/Boxplot/Simple\": 199,\n\t\"./examples/Echarts/Boxplot/Simple.jsx\": 199,\n\t\"./examples/Echarts/Boxplot/config\": 200,\n\t\"./examples/Echarts/Boxplot/config.json\": 200,\n\t\"./examples/Echarts/Custom/HorizontalLine\": 201,\n\t\"./examples/Echarts/Custom/HorizontalLine.jsx\": 201,\n\t\"./examples/Echarts/Custom/Selection\": 202,\n\t\"./examples/Echarts/Custom/Selection.jsx\": 202,\n\t\"./examples/Echarts/Custom/Simple\": 203,\n\t\"./examples/Echarts/Custom/Simple.jsx\": 203,\n\t\"./examples/Echarts/Custom/Style\": 204,\n\t\"./examples/Echarts/Custom/Style.jsx\": 204,\n\t\"./examples/Echarts/Custom/Zoom\": 205,\n\t\"./examples/Echarts/Custom/Zoom.jsx\": 205,\n\t\"./examples/Echarts/Custom/ZoomSlider\": 206,\n\t\"./examples/Echarts/Custom/ZoomSlider.jsx\": 206,\n\t\"./examples/Echarts/Custom/ZoomVertical\": 207,\n\t\"./examples/Echarts/Custom/ZoomVertical.jsx\": 207,\n\t\"./examples/Echarts/Custom/config\": 208,\n\t\"./examples/Echarts/Custom/config.json\": 208,\n\t\"./examples/Echarts/Custom/onClick\": 209,\n\t\"./examples/Echarts/Custom/onClick.jsx\": 209,\n\t\"./examples/Echarts/Format/Legend\": 210,\n\t\"./examples/Echarts/Format/Legend.jsx\": 210,\n\t\"./examples/Echarts/Format/ToolboxExample\": 211,\n\t\"./examples/Echarts/Format/ToolboxExample.jsx\": 211,\n\t\"./examples/Echarts/Format/config\": 212,\n\t\"./examples/Echarts/Format/config.json\": 212,\n\t\"./examples/Echarts/Heatmap/Simple\": 213,\n\t\"./examples/Echarts/Heatmap/Simple.jsx\": 213,\n\t\"./examples/Echarts/Heatmap/config\": 214,\n\t\"./examples/Echarts/Heatmap/config.json\": 214,\n\t\"./examples/Echarts/Line/ErrorBars\": 215,\n\t\"./examples/Echarts/Line/ErrorBars.jsx\": 215,\n\t\"./examples/Echarts/Line/Highlight\": 216,\n\t\"./examples/Echarts/Line/Highlight.jsx\": 216,\n\t\"./examples/Echarts/Line/Simple\": 217,\n\t\"./examples/Echarts/Line/Simple.jsx\": 217,\n\t\"./examples/Echarts/Line/config\": 218,\n\t\"./examples/Echarts/Line/config.json\": 218,\n\t\"./examples/Echarts/Pie/FromSeries\": 219,\n\t\"./examples/Echarts/Pie/FromSeries.jsx\": 219,\n\t\"./examples/Echarts/Pie/Simple\": 220,\n\t\"./examples/Echarts/Pie/Simple.jsx\": 220,\n\t\"./examples/Echarts/Pie/config\": 221,\n\t\"./examples/Echarts/Pie/config.json\": 221,\n\t\"./examples/Echarts/Radar/Simple\": 222,\n\t\"./examples/Echarts/Radar/Simple.jsx\": 222,\n\t\"./examples/Echarts/Radar/config\": 223,\n\t\"./examples/Echarts/Radar/config.json\": 223,\n\t\"./examples/Echarts/Radar/modified\": 224,\n\t\"./examples/Echarts/Radar/modified.jsx\": 224,\n\t\"./examples/Echarts/RectGrid/Custom\": 225,\n\t\"./examples/Echarts/RectGrid/Custom.jsx\": 225,\n\t\"./examples/Echarts/RectGrid/Simple\": 226,\n\t\"./examples/Echarts/RectGrid/Simple.jsx\": 226,\n\t\"./examples/Echarts/RectGrid/config\": 227,\n\t\"./examples/Echarts/RectGrid/config.json\": 227,\n\t\"./examples/Echarts/Scatter/ColorBy\": 228,\n\t\"./examples/Echarts/Scatter/ColorBy.jsx\": 228,\n\t\"./examples/Echarts/Scatter/Labeled\": 229,\n\t\"./examples/Echarts/Scatter/Labeled.jsx\": 229,\n\t\"./examples/Echarts/Scatter/Simple\": 230,\n\t\"./examples/Echarts/Scatter/Simple.jsx\": 230,\n\t\"./examples/Echarts/Scatter/config\": 231,\n\t\"./examples/Echarts/Scatter/config.json\": 231,\n\t\"./examples/Echarts/Selection/SelectionScatter\": 232,\n\t\"./examples/Echarts/Selection/SelectionScatter.jsx\": 232,\n\t\"./examples/Echarts/Selection/config\": 233,\n\t\"./examples/Echarts/Selection/config.json\": 233,\n\t\"./examples/Echarts/Tooltips/config\": 234,\n\t\"./examples/Echarts/Tooltips/config.json\": 234,\n\t\"./examples/Echarts/Tooltips/tooltips\": 235,\n\t\"./examples/Echarts/Tooltips/tooltips.jsx\": 235,\n\t\"./examples/Echarts/Waterfall/Basic\": 236,\n\t\"./examples/Echarts/Waterfall/Basic.jsx\": 236,\n\t\"./examples/Echarts/Waterfall/Completion\": 237,\n\t\"./examples/Echarts/Waterfall/Completion.jsx\": 237,\n\t\"./examples/Echarts/Waterfall/config\": 238,\n\t\"./examples/Echarts/Waterfall/config.json\": 238,\n\t\"./examples/Echarts/config\": 239,\n\t\"./examples/Echarts/config.js\": 239,\n\t\"./examples/Series/BasicFunctions/IndexAndValues\": 240,\n\t\"./examples/Series/BasicFunctions/IndexAndValues.jsx\": 240,\n\t\"./examples/Series/BasicFunctions/SortValues\": 241,\n\t\"./examples/Series/BasicFunctions/SortValues.jsx\": 241,\n\t\"./examples/Series/BasicFunctions/Unique\": 242,\n\t\"./examples/Series/BasicFunctions/Unique.jsx\": 242,\n\t\"./examples/Series/BasicFunctions/ValueCounts\": 243,\n\t\"./examples/Series/BasicFunctions/ValueCounts.jsx\": 243,\n\t\"./examples/Series/BasicFunctions/arithmetic\": 244,\n\t\"./examples/Series/BasicFunctions/arithmetic.jsx\": 244,\n\t\"./examples/Series/BasicFunctions/config\": 245,\n\t\"./examples/Series/BasicFunctions/config.json\": 245,\n\t\"./examples/Series/BasicFunctions/duplicates\": 246,\n\t\"./examples/Series/BasicFunctions/duplicates.jsx\": 246,\n\t\"./examples/Series/BasicFunctions/insert\": 247,\n\t\"./examples/Series/BasicFunctions/insert.jsx\": 247,\n\t\"./examples/Series/BasicFunctions/replace\": 248,\n\t\"./examples/Series/BasicFunctions/replace.jsx\": 248,\n\t\"./examples/Series/BasicFunctions/toObject\": 249,\n\t\"./examples/Series/BasicFunctions/toObject.jsx\": 249,\n\t\"./examples/Series/Echarts/Pareto\": 250,\n\t\"./examples/Series/Echarts/Pareto.jsx\": 250,\n\t\"./examples/Series/Echarts/Pie\": 251,\n\t\"./examples/Series/Echarts/Pie.jsx\": 251,\n\t\"./examples/Series/Echarts/config\": 252,\n\t\"./examples/Series/Echarts/config.json\": 252,\n\t\"./examples/Series/Pareto/config\": 253,\n\t\"./examples/Series/Pareto/config.json\": 253,\n\t\"./examples/Series/Pareto/crop\": 254,\n\t\"./examples/Series/Pareto/crop.jsx\": 254,\n\t\"./examples/Series/Table/Table\": 255,\n\t\"./examples/Series/Table/Table.jsx\": 255,\n\t\"./examples/Series/Table/config\": 256,\n\t\"./examples/Series/Table/config.json\": 256,\n\t\"./examples/Series/config\": 257,\n\t\"./examples/Series/config.js\": 257,\n\t\"./examples/Series/toDataFrame/config\": 258,\n\t\"./examples/Series/toDataFrame/config.json\": 258,\n\t\"./examples/Series/toDataFrame/merge\": 259,\n\t\"./examples/Series/toDataFrame/merge.jsx\": 259,\n\t\"./examples/Table/Accordian/AccordianTable\": 260,\n\t\"./examples/Table/Accordian/AccordianTable.jsx\": 260,\n\t\"./examples/Table/Accordian/config\": 261,\n\t\"./examples/Table/Accordian/config.json\": 261,\n\t\"./examples/Table/Filtering/ColumnFilters\": 262,\n\t\"./examples/Table/Filtering/ColumnFilters.jsx\": 262,\n\t\"./examples/Table/Filtering/config\": 263,\n\t\"./examples/Table/Filtering/config.json\": 263,\n\t\"./examples/Table/Header/MultiRow\": 264,\n\t\"./examples/Table/Header/MultiRow.jsx\": 264,\n\t\"./examples/Table/Header/NoHeader\": 265,\n\t\"./examples/Table/Header/NoHeader.jsx\": 265,\n\t\"./examples/Table/Header/config\": 266,\n\t\"./examples/Table/Header/config.json\": 266,\n\t\"./examples/Table/LazyLoading/LazyLoading\": 267,\n\t\"./examples/Table/LazyLoading/LazyLoading.jsx\": 267,\n\t\"./examples/Table/LazyLoading/config\": 268,\n\t\"./examples/Table/LazyLoading/config.json\": 268,\n\t\"./examples/Table/MultiRow/MultiRowCol\": 269,\n\t\"./examples/Table/MultiRow/MultiRowCol.jsx\": 269,\n\t\"./examples/Table/MultiRow/MultirowTable\": 270,\n\t\"./examples/Table/MultiRow/MultirowTable.jsx\": 270,\n\t\"./examples/Table/MultiRow/config\": 271,\n\t\"./examples/Table/MultiRow/config.json\": 271,\n\t\"./examples/Table/ParentFilterCol\": 272,\n\t\"./examples/Table/ParentFilterCol.jsx\": 272,\n\t\"./examples/Table/ParentSortCol\": 273,\n\t\"./examples/Table/ParentSortCol.jsx\": 273,\n\t\"./examples/Table/SpecialContent/Checkbox\": 274,\n\t\"./examples/Table/SpecialContent/Checkbox.jsx\": 274,\n\t\"./examples/Table/SpecialContent/config\": 275,\n\t\"./examples/Table/SpecialContent/config.json\": 275,\n\t\"./examples/Table/Style/AlternatingStyle\": 276,\n\t\"./examples/Table/Style/AlternatingStyle.jsx\": 276,\n\t\"./examples/Table/Style/CustomCss\": 277,\n\t\"./examples/Table/Style/CustomCss.jsx\": 277,\n\t\"./examples/Table/Style/CustomeCellColoring\": 278,\n\t\"./examples/Table/Style/CustomeCellColoring.jsx\": 278,\n\t\"./examples/Table/Style/DataDrivenColoring\": 279,\n\t\"./examples/Table/Style/DataDrivenColoring.jsx\": 279,\n\t\"./examples/Table/Style/Hyperlinking\": 280,\n\t\"./examples/Table/Style/Hyperlinking.jsx\": 280,\n\t\"./examples/Table/Style/RenamingColumns\": 281,\n\t\"./examples/Table/Style/RenamingColumns.jsx\": 281,\n\t\"./examples/Table/Style/SimpleTable\": 282,\n\t\"./examples/Table/Style/SimpleTable.jsx\": 282,\n\t\"./examples/Table/Style/TableFormat\": 283,\n\t\"./examples/Table/Style/TableFormat.jsx\": 283,\n\t\"./examples/Table/Style/config\": 284,\n\t\"./examples/Table/Style/config.json\": 284,\n\t\"./examples/Table/config\": 285,\n\t\"./examples/Table/config.js\": 285,\n\t\"./examples/data/jsonArray/data\": 166,\n\t\"./examples/data/jsonArray/data.json\": 166,\n\t\"./examples/data/jsonArray/errorbars\": 167,\n\t\"./examples/data/jsonArray/errorbars.json\": 167,\n\t\"./examples/getData\": 12,\n\t\"./examples/getData.js\": 12,\n\t\"./index\": 326,\n\t\"./index.jsx\": 326,\n\t\"./install.py\": 1388\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 555;","/**\r\n * File Input/Output Interface\r\n * ==============================\r\n *\r\n * React component used to retrieve from and store to the user's\r\n * desktop\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Oct 7, 2020\r\n */\r\n\r\n\r\nimport React from 'react';\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport {Button} from '../framework/Components'\r\n\r\nconst extract = require('../../fileIO/extract')\r\n\r\n\r\n\r\nexport default class FileIOLibrary extends ReactLibraryFramework{\r\n  constructor(data, props={}){\r\n    super(data, props)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n\r\n  }\r\n\r\n  ToCsv( props ){\r\n    return ToCsv( this.format_props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a heatmap plotting component based on the contents of the\r\n * jsonArray DAtaFrame\r\n */\r\nexport function ToCsv( props ){\r\n\r\n  // set defaults for the button label and filename and\r\n  // overwrite the defaults when values are passed in\r\n  var value = 'Download'\r\n  if( props.value !== undefined ) value = props.value\r\n\r\n  var filename = 'file.csv'\r\n  if( props.filename !== undefined ) value = props.filename\r\n\r\n  return(\r\n    <Button\r\n      {...props}\r\n      style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n      component={props.button}\r\n      key={`toCSV Button`}\r\n      defaultValue={value}\r\n      onClick={() => extract.toCsv(props.data, filename )}\r\n      />\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport Documentation from './Documentation'\n\nReactDOM.render( <Documentation />,  document.getElementById('root') );\n","var map = {\n\t\"./DataFrame/BasicFunctions/Slice\": 154,\n\t\"./DataFrame/BasicFunctions/Slice.jsx\": 154,\n\t\"./DataFrame/BasicFunctions/SortIndex\": 168,\n\t\"./DataFrame/BasicFunctions/SortIndex.jsx\": 168,\n\t\"./DataFrame/BasicFunctions/SortValues\": 169,\n\t\"./DataFrame/BasicFunctions/SortValues.jsx\": 169,\n\t\"./DataFrame/BasicFunctions/Transpose\": 170,\n\t\"./DataFrame/BasicFunctions/Transpose.jsx\": 170,\n\t\"./DataFrame/BasicFunctions/config\": 171,\n\t\"./DataFrame/BasicFunctions/config.json\": 171,\n\t\"./DataFrame/BasicFunctions/insert\": 172,\n\t\"./DataFrame/BasicFunctions/insert.jsx\": 172,\n\t\"./DataFrame/BasicFunctions/replace\": 173,\n\t\"./DataFrame/BasicFunctions/replace.jsx\": 173,\n\t\"./DataFrame/Extract/config\": 174,\n\t\"./DataFrame/Extract/config.json\": 174,\n\t\"./DataFrame/Extract/toCsv\": 175,\n\t\"./DataFrame/Extract/toCsv.jsx\": 175,\n\t\"./DataFrame/ValueCounts/config\": 176,\n\t\"./DataFrame/ValueCounts/config.json\": 176,\n\t\"./DataFrame/ValueCounts/multipleColumns\": 177,\n\t\"./DataFrame/ValueCounts/multipleColumns.jsx\": 177,\n\t\"./DataFrame/config\": 178,\n\t\"./DataFrame/config.js\": 178,\n\t\"./DataFrame/datetime/arithmetic\": 179,\n\t\"./DataFrame/datetime/arithmetic.jsx\": 179,\n\t\"./DataFrame/datetime/config\": 180,\n\t\"./DataFrame/datetime/config.json\": 180,\n\t\"./DataFrame/datetime/date\": 181,\n\t\"./DataFrame/datetime/date.jsx\": 181,\n\t\"./DataFrame/datetime/fillDays\": 182,\n\t\"./DataFrame/datetime/fillDays.jsx\": 182,\n\t\"./DataFrame/datetime/fillWeek\": 183,\n\t\"./DataFrame/datetime/fillWeek.jsx\": 183,\n\t\"./DataFrame/datetime/week\": 184,\n\t\"./DataFrame/datetime/week.jsx\": 184,\n\t\"./DataFrame/toSeries/config\": 185,\n\t\"./DataFrame/toSeries/config.json\": 185,\n\t\"./DataFrame/toSeries/toSeries\": 186,\n\t\"./DataFrame/toSeries/toSeries.jsx\": 186,\n\t\"./Demo/BasicExample\": 392,\n\t\"./Demo/BasicExample.jsx\": 392,\n\t\"./Echarts/Area/Simple\": 187,\n\t\"./Echarts/Area/Simple.jsx\": 187,\n\t\"./Echarts/Area/config\": 188,\n\t\"./Echarts/Area/config.json\": 188,\n\t\"./Echarts/Bar/HorizontalSeries\": 189,\n\t\"./Echarts/Bar/HorizontalSeries.jsx\": 189,\n\t\"./Echarts/Bar/Pareto\": 190,\n\t\"./Echarts/Bar/Pareto.jsx\": 190,\n\t\"./Echarts/Bar/Simple\": 191,\n\t\"./Echarts/Bar/Simple.jsx\": 191,\n\t\"./Echarts/Bar/Stacked\": 192,\n\t\"./Echarts/Bar/Stacked.jsx\": 192,\n\t\"./Echarts/Bar/StackedSeries\": 193,\n\t\"./Echarts/Bar/StackedSeries.jsx\": 193,\n\t\"./Echarts/Bar/VerticalSeries\": 194,\n\t\"./Echarts/Bar/VerticalSeries.jsx\": 194,\n\t\"./Echarts/Bar/config\": 195,\n\t\"./Echarts/Bar/config.json\": 195,\n\t\"./Echarts/Boxplot/AllSamples\": 196,\n\t\"./Echarts/Boxplot/AllSamples.jsx\": 196,\n\t\"./Echarts/Boxplot/AllSamplesGrouped\": 197,\n\t\"./Echarts/Boxplot/AllSamplesGrouped.jsx\": 197,\n\t\"./Echarts/Boxplot/FilteredOverlay\": 198,\n\t\"./Echarts/Boxplot/FilteredOverlay.jsx\": 198,\n\t\"./Echarts/Boxplot/Simple\": 199,\n\t\"./Echarts/Boxplot/Simple.jsx\": 199,\n\t\"./Echarts/Boxplot/config\": 200,\n\t\"./Echarts/Boxplot/config.json\": 200,\n\t\"./Echarts/Custom/HorizontalLine\": 201,\n\t\"./Echarts/Custom/HorizontalLine.jsx\": 201,\n\t\"./Echarts/Custom/Selection\": 202,\n\t\"./Echarts/Custom/Selection.jsx\": 202,\n\t\"./Echarts/Custom/Simple\": 203,\n\t\"./Echarts/Custom/Simple.jsx\": 203,\n\t\"./Echarts/Custom/Style\": 204,\n\t\"./Echarts/Custom/Style.jsx\": 204,\n\t\"./Echarts/Custom/Zoom\": 205,\n\t\"./Echarts/Custom/Zoom.jsx\": 205,\n\t\"./Echarts/Custom/ZoomSlider\": 206,\n\t\"./Echarts/Custom/ZoomSlider.jsx\": 206,\n\t\"./Echarts/Custom/ZoomVertical\": 207,\n\t\"./Echarts/Custom/ZoomVertical.jsx\": 207,\n\t\"./Echarts/Custom/config\": 208,\n\t\"./Echarts/Custom/config.json\": 208,\n\t\"./Echarts/Custom/onClick\": 209,\n\t\"./Echarts/Custom/onClick.jsx\": 209,\n\t\"./Echarts/Format/Legend\": 210,\n\t\"./Echarts/Format/Legend.jsx\": 210,\n\t\"./Echarts/Format/ToolboxExample\": 211,\n\t\"./Echarts/Format/ToolboxExample.jsx\": 211,\n\t\"./Echarts/Format/config\": 212,\n\t\"./Echarts/Format/config.json\": 212,\n\t\"./Echarts/Heatmap/Simple\": 213,\n\t\"./Echarts/Heatmap/Simple.jsx\": 213,\n\t\"./Echarts/Heatmap/config\": 214,\n\t\"./Echarts/Heatmap/config.json\": 214,\n\t\"./Echarts/Line/ErrorBars\": 215,\n\t\"./Echarts/Line/ErrorBars.jsx\": 215,\n\t\"./Echarts/Line/Highlight\": 216,\n\t\"./Echarts/Line/Highlight.jsx\": 216,\n\t\"./Echarts/Line/Simple\": 217,\n\t\"./Echarts/Line/Simple.jsx\": 217,\n\t\"./Echarts/Line/config\": 218,\n\t\"./Echarts/Line/config.json\": 218,\n\t\"./Echarts/Pie/FromSeries\": 219,\n\t\"./Echarts/Pie/FromSeries.jsx\": 219,\n\t\"./Echarts/Pie/Simple\": 220,\n\t\"./Echarts/Pie/Simple.jsx\": 220,\n\t\"./Echarts/Pie/config\": 221,\n\t\"./Echarts/Pie/config.json\": 221,\n\t\"./Echarts/Radar/Simple\": 222,\n\t\"./Echarts/Radar/Simple.jsx\": 222,\n\t\"./Echarts/Radar/config\": 223,\n\t\"./Echarts/Radar/config.json\": 223,\n\t\"./Echarts/Radar/modified\": 224,\n\t\"./Echarts/Radar/modified.jsx\": 224,\n\t\"./Echarts/RectGrid/Custom\": 225,\n\t\"./Echarts/RectGrid/Custom.jsx\": 225,\n\t\"./Echarts/RectGrid/Simple\": 226,\n\t\"./Echarts/RectGrid/Simple.jsx\": 226,\n\t\"./Echarts/RectGrid/config\": 227,\n\t\"./Echarts/RectGrid/config.json\": 227,\n\t\"./Echarts/Scatter/ColorBy\": 228,\n\t\"./Echarts/Scatter/ColorBy.jsx\": 228,\n\t\"./Echarts/Scatter/Labeled\": 229,\n\t\"./Echarts/Scatter/Labeled.jsx\": 229,\n\t\"./Echarts/Scatter/Simple\": 230,\n\t\"./Echarts/Scatter/Simple.jsx\": 230,\n\t\"./Echarts/Scatter/config\": 231,\n\t\"./Echarts/Scatter/config.json\": 231,\n\t\"./Echarts/Selection/SelectionScatter\": 232,\n\t\"./Echarts/Selection/SelectionScatter.jsx\": 232,\n\t\"./Echarts/Selection/config\": 233,\n\t\"./Echarts/Selection/config.json\": 233,\n\t\"./Echarts/Tooltips/config\": 234,\n\t\"./Echarts/Tooltips/config.json\": 234,\n\t\"./Echarts/Tooltips/tooltips\": 235,\n\t\"./Echarts/Tooltips/tooltips.jsx\": 235,\n\t\"./Echarts/Waterfall/Basic\": 236,\n\t\"./Echarts/Waterfall/Basic.jsx\": 236,\n\t\"./Echarts/Waterfall/Completion\": 237,\n\t\"./Echarts/Waterfall/Completion.jsx\": 237,\n\t\"./Echarts/Waterfall/config\": 238,\n\t\"./Echarts/Waterfall/config.json\": 238,\n\t\"./Echarts/config\": 239,\n\t\"./Echarts/config.js\": 239,\n\t\"./Series/BasicFunctions/IndexAndValues\": 240,\n\t\"./Series/BasicFunctions/IndexAndValues.jsx\": 240,\n\t\"./Series/BasicFunctions/SortValues\": 241,\n\t\"./Series/BasicFunctions/SortValues.jsx\": 241,\n\t\"./Series/BasicFunctions/Unique\": 242,\n\t\"./Series/BasicFunctions/Unique.jsx\": 242,\n\t\"./Series/BasicFunctions/ValueCounts\": 243,\n\t\"./Series/BasicFunctions/ValueCounts.jsx\": 243,\n\t\"./Series/BasicFunctions/arithmetic\": 244,\n\t\"./Series/BasicFunctions/arithmetic.jsx\": 244,\n\t\"./Series/BasicFunctions/config\": 245,\n\t\"./Series/BasicFunctions/config.json\": 245,\n\t\"./Series/BasicFunctions/duplicates\": 246,\n\t\"./Series/BasicFunctions/duplicates.jsx\": 246,\n\t\"./Series/BasicFunctions/insert\": 247,\n\t\"./Series/BasicFunctions/insert.jsx\": 247,\n\t\"./Series/BasicFunctions/replace\": 248,\n\t\"./Series/BasicFunctions/replace.jsx\": 248,\n\t\"./Series/BasicFunctions/toObject\": 249,\n\t\"./Series/BasicFunctions/toObject.jsx\": 249,\n\t\"./Series/Echarts/Pareto\": 250,\n\t\"./Series/Echarts/Pareto.jsx\": 250,\n\t\"./Series/Echarts/Pie\": 251,\n\t\"./Series/Echarts/Pie.jsx\": 251,\n\t\"./Series/Echarts/config\": 252,\n\t\"./Series/Echarts/config.json\": 252,\n\t\"./Series/Pareto/config\": 253,\n\t\"./Series/Pareto/config.json\": 253,\n\t\"./Series/Pareto/crop\": 254,\n\t\"./Series/Pareto/crop.jsx\": 254,\n\t\"./Series/Table/Table\": 255,\n\t\"./Series/Table/Table.jsx\": 255,\n\t\"./Series/Table/config\": 256,\n\t\"./Series/Table/config.json\": 256,\n\t\"./Series/config\": 257,\n\t\"./Series/config.js\": 257,\n\t\"./Series/toDataFrame/config\": 258,\n\t\"./Series/toDataFrame/config.json\": 258,\n\t\"./Series/toDataFrame/merge\": 259,\n\t\"./Series/toDataFrame/merge.jsx\": 259,\n\t\"./Table/Accordian/AccordianTable\": 260,\n\t\"./Table/Accordian/AccordianTable.jsx\": 260,\n\t\"./Table/Accordian/config\": 261,\n\t\"./Table/Accordian/config.json\": 261,\n\t\"./Table/Filtering/ColumnFilters\": 262,\n\t\"./Table/Filtering/ColumnFilters.jsx\": 262,\n\t\"./Table/Filtering/config\": 263,\n\t\"./Table/Filtering/config.json\": 263,\n\t\"./Table/Header/MultiRow\": 264,\n\t\"./Table/Header/MultiRow.jsx\": 264,\n\t\"./Table/Header/NoHeader\": 265,\n\t\"./Table/Header/NoHeader.jsx\": 265,\n\t\"./Table/Header/config\": 266,\n\t\"./Table/Header/config.json\": 266,\n\t\"./Table/LazyLoading/LazyLoading\": 267,\n\t\"./Table/LazyLoading/LazyLoading.jsx\": 267,\n\t\"./Table/LazyLoading/config\": 268,\n\t\"./Table/LazyLoading/config.json\": 268,\n\t\"./Table/MultiRow/MultiRowCol\": 269,\n\t\"./Table/MultiRow/MultiRowCol.jsx\": 269,\n\t\"./Table/MultiRow/MultirowTable\": 270,\n\t\"./Table/MultiRow/MultirowTable.jsx\": 270,\n\t\"./Table/MultiRow/config\": 271,\n\t\"./Table/MultiRow/config.json\": 271,\n\t\"./Table/ParentFilterCol\": 272,\n\t\"./Table/ParentFilterCol.jsx\": 272,\n\t\"./Table/ParentSortCol\": 273,\n\t\"./Table/ParentSortCol.jsx\": 273,\n\t\"./Table/SpecialContent/Checkbox\": 274,\n\t\"./Table/SpecialContent/Checkbox.jsx\": 274,\n\t\"./Table/SpecialContent/config\": 275,\n\t\"./Table/SpecialContent/config.json\": 275,\n\t\"./Table/Style/AlternatingStyle\": 276,\n\t\"./Table/Style/AlternatingStyle.jsx\": 276,\n\t\"./Table/Style/CustomCss\": 277,\n\t\"./Table/Style/CustomCss.jsx\": 277,\n\t\"./Table/Style/CustomeCellColoring\": 278,\n\t\"./Table/Style/CustomeCellColoring.jsx\": 278,\n\t\"./Table/Style/DataDrivenColoring\": 279,\n\t\"./Table/Style/DataDrivenColoring.jsx\": 279,\n\t\"./Table/Style/Hyperlinking\": 280,\n\t\"./Table/Style/Hyperlinking.jsx\": 280,\n\t\"./Table/Style/RenamingColumns\": 281,\n\t\"./Table/Style/RenamingColumns.jsx\": 281,\n\t\"./Table/Style/SimpleTable\": 282,\n\t\"./Table/Style/SimpleTable.jsx\": 282,\n\t\"./Table/Style/TableFormat\": 283,\n\t\"./Table/Style/TableFormat.jsx\": 283,\n\t\"./Table/Style/config\": 284,\n\t\"./Table/Style/config.json\": 284,\n\t\"./Table/config\": 285,\n\t\"./Table/config.js\": 285,\n\t\"./data/jsonArray/data\": 166,\n\t\"./data/jsonArray/data.json\": 166,\n\t\"./data/jsonArray/errorbars\": 167,\n\t\"./data/jsonArray/errorbars.json\": 167,\n\t\"./getData\": 12,\n\t\"./getData.js\": 12\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 864;","/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nvar SemanticUI\r\ntry{ SemanticUI = require('semantic-ui-react') }catch{}\r\n\r\n\r\nexport default class SemanticUILibrary extends ReactLibraryFramework{\r\n  constructor(data, props={}){\r\n    super(data, props)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Excel = this.Excel.bind(this)\r\n    this.Table = this.Table.bind(this)\r\n    this.Dropdown = this.Dropdown.bind(this)\r\n    this.ToCsv = this.ToCsv.bind(this)\r\n\r\n  }\r\n\r\n  Excel( props ){\r\n    return Excel( this.format_props(props) )\r\n  }\r\n\r\n  Table( props ){\r\n    return Table( this.format_props(props) )\r\n  }\r\n\r\n  Dropdown( props ){\r\n    return Dropdown( this.format_props(props) )\r\n  }\r\n\r\n  ToCsv( props ){\r\n    const fileIO = require('../plugins/fileIO')\r\n    return fileIO.ToCsv( {...this.format_props(props), ...{button: SemanticUI.Button}})\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n// returns the excel reader using teh Semantic UI Framework for input controls\r\nexport function Excel( props ){\r\n\r\n  var Excel = props.data.react.Excel\r\n\r\n  if( SemanticUI === undefined ){\r\n    return <Excel />\r\n  }\r\n\r\n  return(\r\n    <Excel\r\n      {...props}\r\n      button = {SemanticUI.Button}\r\n      buttonStyle = {{margin:0}}\r\n      buttonProps = {{...{color: 'blue'}, ...props.buttonProps}}\r\n\r\n      input = {SemanticUI.Input}\r\n      inputStyle = {{margin:0}}\r\n      inputProps = {{icon: 'file', placeholder: 'xlsx, csv, ...' }}\r\n      />\r\n    )\r\n}\r\n\r\n\r\n\r\n// returns a table formatted using the Semantic UI table Framework\r\nexport function Table(props){\r\n\r\n  var Table = props.data.react.Table\r\n\r\n  if( SemanticUI === undefined ) return Table\r\n\r\n  return(\r\n    <Table\r\n      {...props}\r\n      table = {SemanticUI.Table}\r\n      th = {SemanticUI.Table.HeaderCell}\r\n      thead = {SemanticUI.Table.Header}\r\n      td = {SemanticUI.Table.Cell}\r\n      tr = {SemanticUI.Table.Row}\r\n      body = {SemanticUI.Table.Body}\r\n\r\n      button = {SemanticUI.Table.Button}\r\n      image = {SemanticUI.Table.Image}\r\n      icon = {SemanticUI.Icon}\r\n      checkbox = {SemanticUI.Checkbox}\r\n      />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function Dropdown( props ){\r\n\r\n  // set ascending order as a default for dropdown content\r\n  var ascending = true\r\n  if( props.ascending !== undefined ) ascending = props.ascending\r\n\r\n\r\n  // retrieve the unique calues from the specified column\r\n  var values\r\n  switch( props.plottype ){\r\n    case 'column':\r\n      values = props.data.columns\r\n      break\r\n\r\n    case 'value' :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n\r\n    default :\r\n      values = props.data\r\n        .filter(r => r[props.column] !== undefined )\r\n        .unique( props.column, ascending )\r\n      break\r\n  }\r\n\r\n  var options = []\r\n\r\n  // push the values into the array formatted for the dropdown menu\r\n  values.forEach( element => options.push({\r\n     key:  element, text: element, value: element\r\n  }) )\r\n\r\n  const child_props = props\r\n  delete child_props.data\r\n\r\n  return(\r\n    <SemanticUI.Form.Field\r\n      {...child_props}\r\n      key={`dropdown-${props.column}`}\r\n      control={SemanticUI.Select}\r\n      label={props.column}\r\n      options={options}\r\n      search={true}\r\n      clearable={true}\r\n      multiple={(props.multiple === undefined) ? false : props.multiple}\r\n      placeholder={props.column}\r\n      onChange={(e, d) => (props.callback !== undefined) ? props.callback({[props.column]: d.value}) : null}\r\n    />\r\n  )\r\n}\r\n\r\n// <SemanticUI.Dropdown\r\n//   {...child_props}\r\n//   options={options}\r\n//   key={`dropdown-${props.column}`}\r\n//   />\r\n","/*!\r\n\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport {ExcelRenderer} from 'react-excel-renderer';\r\n\r\nimport {Button, Input} from '../framework/Components'\r\n\r\nimport jsonArray from '../../../jsonArray'\r\n\r\n// export default function DefaultFunction(){ console.log('not implemented')}\r\n\r\nexport default class Excel extends React.Component{\r\n\r\n\r\n  constructor( props ) {\r\n    super(props)\r\n\r\n    this.state = { name: 'excel', filename: '' }\r\n  }\r\n\r\n  // returns the React components used to select the csv file for parsing\r\n  // and to display the name of the file in an input component\r\n  render(){\r\n\r\n    var fileInputRef = React.createRef();\r\n\r\n    console.log( 'button props', this.props)\r\n    return (\r\n      <>\r\n        <Button\r\n          {...this.props.buttonProps}\r\n          component= {this.props.button}\r\n          key={`${this.state.name}-Button`}\r\n          style={this.props.buttonStyle}\r\n          onClick={() => fileInputRef.current.click()}\r\n          defaultValue={this.props.defaultValue === undefined ? 'Upload' : this.props.defaultValue}\r\n          />\r\n\r\n        <input\r\n          key={`${this.state.name}-hidden-input`}\r\n          type=\"file\"\r\n          hidden\r\n          ref={fileInputRef}\r\n          onChange={(event) => this.fileHandler(event) }\r\n          onClick={(event)=> { event.target.value = null }}\r\n          style={{\"padding\":\"10px\"}} />\r\n\r\n\r\n        <Input\r\n          {...this.props.inputProps}\r\n          component= {this.props.input}\r\n          style={{...this.props.inputStyle, ...{\"paddingTop\":\"0px\"}}}\r\n          key={`${this.state.name}-input`}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={this.state.filename}\r\n          readOnly\r\n          />\r\n      </>\r\n    )\r\n\r\n  }\r\n\r\n  // parses the selected file. An error is thrown when this\r\n  // routine fails. Otherwise a jsonArray object is returned\r\n  // via the callback function\r\n  fileHandler( event ){\r\n\r\n    if(event.target.files.length){\r\n\r\n      const fileObj = event.target.files[0];\r\n      this.setState( {filename: fileObj.name} )\r\n\r\n      ExcelRenderer(fileObj, (err, response) => {\r\n\r\n        if(err){\r\n          alert('csv parsing error: ' + err);\r\n        }\r\n        else{\r\n\r\n          var data = response.rows\r\n          var columns\r\n\r\n          // assume that the first row contains a header\r\n          if( this.props.header !== false ){\r\n              columns = data[0]\r\n              data = data.splice(1)\r\n          }\r\n\r\n          // convert the data to a json array\r\n          const json_array = new jsonArray(data)\r\n\r\n          // set the column names when defined\r\n          if( columns !== undefined ) json_array.columns = columns\r\n\r\n\r\n          if( this.props.callback !== undefined ){\r\n            this.props.callback( json_array )\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * cSV to jsonArray\r\n * ==================\r\n *\r\n * pluggin that supports the json to csv module. This converts the a\r\n * csv file stored remotely into a json Array\r\n *\r\n * @author Nik Sumikawa\r\n * @date Aug 20, 2020\r\n */\r\n\r\nimport jsonArray from '../../jsonArray'\r\nimport toCsv from './extract'\r\n\r\n// import papaparser when available\r\nvar parser\r\ntry{ parser = require(\"papaparse\"); }catch{}\r\n\r\nvar http = require(\"http\"), zlib = require(\"zlib\");\r\n\r\n\r\nexport default class fromFileLibrary{\r\n  constructor(data){\r\n\r\n    this.json_array = data\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.fromUrl = this.fromUrl.bind(this)\r\n    this.toCsv = this.toCsv.bind(this)\r\n  }\r\n\r\n  async fromUrl( url, callback, params={} ){\r\n\r\n    // // retrieve the data from the url and parse out the text\r\n    // const res = await fetch( url )\r\n    // var text = await res.text();\r\n    //\r\n    // // parse the csv and return a json array containing the data\r\n    // return from_file(text, {header: true})\r\n\r\n    return from_url( url, callback, params )\r\n  }\r\n\r\n  toCsv( filename='file.csv' ){\r\n    toCsv(this.json_array, filename)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Returns a json array with the contents of the csv file\r\n * provided at the url address\r\n * @param  {string} url url address where the data is stored\r\n * @return {Array}     jsonArray containing the csv data\r\n */\r\nexport function from_file( file, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  const data = parser.parse(\r\n    file,\r\n    { ...{params},\r\n      ...{\r\n        header: true\r\n      }\r\n  })\r\n\r\n  // console.log( data )\r\n  return new jsonArray( data.data )\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n\r\n  // var data\r\n\r\n  return await parser.parse(\r\n    url,\r\n    { ...{params},\r\n      ...{\r\n        download: true,\r\n        header: true,\r\n        complete: function(results) {\r\n          if( callback !== undefined ){\r\n\r\n            // convert to a json Array and remove all missing rows\r\n            var json_array = new jsonArray( results.data )\r\n            json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n            // perform callback to update parent state\r\n            callback( json_array )\r\n          }\r\n        }\r\n\r\n      }\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n* Returns a json array with the contents of the csv file\r\n* provided at the url address\r\n* @param  {string} url url address where the data is stored\r\n* @return {Array}     jsonArray containing the csv data\r\n*/\r\nexport async function from_gz_url( url, callback, params={} ){\r\n\r\n  if( parser === undefined ){\r\n    console.log( 'papaparser not installed' )\r\n    return\r\n  }\r\n\r\n  // buffer to store the streamed decompression\r\n  var buffer = [];\r\n\r\n  http.get(url, function(res) {\r\n      // pipe the response into the gunzip to decompress\r\n      var gunzip = zlib.createGunzip();\r\n      res.pipe(gunzip);\r\n\r\n      gunzip.on('data', function(data) {\r\n          // decompression chunk ready, add it to the buffer\r\n          buffer.push(data.toString())\r\n\r\n      }).on(\"end\", function() {\r\n        parser.parse(\r\n          buffer.join(\"\"),\r\n          { ...{params},\r\n            ...{\r\n              header: true,\r\n              complete: function(results) {\r\n                // console.log( results )\r\n\r\n                var data = results.data\r\n                data = data.filter( row => row.VALUE !== '1')\r\n\r\n\r\n                if( callback !== undefined ){\r\n                  // convert to a json Array and remove all missing rows\r\n                  var json_array = new jsonArray( data )\r\n                  // json_array = json_array.filter(row => Object.keys(row).length > 2)\r\n\r\n                  // perform callback to update parent state\r\n                  callback( json_array )\r\n                }\r\n              }\r\n\r\n            }\r\n        })\r\n\r\n      }).on(\"error\", function(e) {\r\n        console.log( 'failed' )\r\n          callback(e);\r\n      })\r\n  }).on('error', function(e) {\r\n    console.log( 'failed' )\r\n      callback(e)\r\n  });\r\n\r\n}\r\n","var map = {\n\t\"./jsonArray/data\": 166,\n\t\"./jsonArray/data.json\": 166,\n\t\"./jsonArray/errorbars\": 167,\n\t\"./jsonArray/errorbars.json\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1288;","var map = {\n\t\"./BasicFunctions/Slice\": 154,\n\t\"./BasicFunctions/Slice.jsx\": 154,\n\t\"./BasicFunctions/SortIndex\": 168,\n\t\"./BasicFunctions/SortIndex.jsx\": 168,\n\t\"./BasicFunctions/SortValues\": 169,\n\t\"./BasicFunctions/SortValues.jsx\": 169,\n\t\"./BasicFunctions/Transpose\": 170,\n\t\"./BasicFunctions/Transpose.jsx\": 170,\n\t\"./BasicFunctions/config\": 171,\n\t\"./BasicFunctions/config.json\": 171,\n\t\"./BasicFunctions/insert\": 172,\n\t\"./BasicFunctions/insert.jsx\": 172,\n\t\"./BasicFunctions/replace\": 173,\n\t\"./BasicFunctions/replace.jsx\": 173,\n\t\"./Extract/config\": 174,\n\t\"./Extract/config.json\": 174,\n\t\"./Extract/toCsv\": 175,\n\t\"./Extract/toCsv.jsx\": 175,\n\t\"./ValueCounts/config\": 176,\n\t\"./ValueCounts/config.json\": 176,\n\t\"./ValueCounts/multipleColumns\": 177,\n\t\"./ValueCounts/multipleColumns.jsx\": 177,\n\t\"./config\": 178,\n\t\"./config.js\": 178,\n\t\"./datetime/arithmetic\": 179,\n\t\"./datetime/arithmetic.jsx\": 179,\n\t\"./datetime/config\": 180,\n\t\"./datetime/config.json\": 180,\n\t\"./datetime/date\": 181,\n\t\"./datetime/date.jsx\": 181,\n\t\"./datetime/fillDays\": 182,\n\t\"./datetime/fillDays.jsx\": 182,\n\t\"./datetime/fillWeek\": 183,\n\t\"./datetime/fillWeek.jsx\": 183,\n\t\"./datetime/week\": 184,\n\t\"./datetime/week.jsx\": 184,\n\t\"./toSeries/config\": 185,\n\t\"./toSeries/config.json\": 185,\n\t\"./toSeries/toSeries\": 186,\n\t\"./toSeries/toSeries.jsx\": 186\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1289;","var map = {\n\t\"./Area/Simple\": 187,\n\t\"./Area/Simple.jsx\": 187,\n\t\"./Area/config\": 188,\n\t\"./Area/config.json\": 188,\n\t\"./Bar/HorizontalSeries\": 189,\n\t\"./Bar/HorizontalSeries.jsx\": 189,\n\t\"./Bar/Pareto\": 190,\n\t\"./Bar/Pareto.jsx\": 190,\n\t\"./Bar/Simple\": 191,\n\t\"./Bar/Simple.jsx\": 191,\n\t\"./Bar/Stacked\": 192,\n\t\"./Bar/Stacked.jsx\": 192,\n\t\"./Bar/StackedSeries\": 193,\n\t\"./Bar/StackedSeries.jsx\": 193,\n\t\"./Bar/VerticalSeries\": 194,\n\t\"./Bar/VerticalSeries.jsx\": 194,\n\t\"./Bar/config\": 195,\n\t\"./Bar/config.json\": 195,\n\t\"./Boxplot/AllSamples\": 196,\n\t\"./Boxplot/AllSamples.jsx\": 196,\n\t\"./Boxplot/AllSamplesGrouped\": 197,\n\t\"./Boxplot/AllSamplesGrouped.jsx\": 197,\n\t\"./Boxplot/FilteredOverlay\": 198,\n\t\"./Boxplot/FilteredOverlay.jsx\": 198,\n\t\"./Boxplot/Simple\": 199,\n\t\"./Boxplot/Simple.jsx\": 199,\n\t\"./Boxplot/config\": 200,\n\t\"./Boxplot/config.json\": 200,\n\t\"./Custom/HorizontalLine\": 201,\n\t\"./Custom/HorizontalLine.jsx\": 201,\n\t\"./Custom/Selection\": 202,\n\t\"./Custom/Selection.jsx\": 202,\n\t\"./Custom/Simple\": 203,\n\t\"./Custom/Simple.jsx\": 203,\n\t\"./Custom/Style\": 204,\n\t\"./Custom/Style.jsx\": 204,\n\t\"./Custom/Zoom\": 205,\n\t\"./Custom/Zoom.jsx\": 205,\n\t\"./Custom/ZoomSlider\": 206,\n\t\"./Custom/ZoomSlider.jsx\": 206,\n\t\"./Custom/ZoomVertical\": 207,\n\t\"./Custom/ZoomVertical.jsx\": 207,\n\t\"./Custom/config\": 208,\n\t\"./Custom/config.json\": 208,\n\t\"./Custom/onClick\": 209,\n\t\"./Custom/onClick.jsx\": 209,\n\t\"./Format/Legend\": 210,\n\t\"./Format/Legend.jsx\": 210,\n\t\"./Format/ToolboxExample\": 211,\n\t\"./Format/ToolboxExample.jsx\": 211,\n\t\"./Format/config\": 212,\n\t\"./Format/config.json\": 212,\n\t\"./Heatmap/Simple\": 213,\n\t\"./Heatmap/Simple.jsx\": 213,\n\t\"./Heatmap/config\": 214,\n\t\"./Heatmap/config.json\": 214,\n\t\"./Line/ErrorBars\": 215,\n\t\"./Line/ErrorBars.jsx\": 215,\n\t\"./Line/Highlight\": 216,\n\t\"./Line/Highlight.jsx\": 216,\n\t\"./Line/Simple\": 217,\n\t\"./Line/Simple.jsx\": 217,\n\t\"./Line/config\": 218,\n\t\"./Line/config.json\": 218,\n\t\"./Pie/FromSeries\": 219,\n\t\"./Pie/FromSeries.jsx\": 219,\n\t\"./Pie/Simple\": 220,\n\t\"./Pie/Simple.jsx\": 220,\n\t\"./Pie/config\": 221,\n\t\"./Pie/config.json\": 221,\n\t\"./Radar/Simple\": 222,\n\t\"./Radar/Simple.jsx\": 222,\n\t\"./Radar/config\": 223,\n\t\"./Radar/config.json\": 223,\n\t\"./Radar/modified\": 224,\n\t\"./Radar/modified.jsx\": 224,\n\t\"./RectGrid/Custom\": 225,\n\t\"./RectGrid/Custom.jsx\": 225,\n\t\"./RectGrid/Simple\": 226,\n\t\"./RectGrid/Simple.jsx\": 226,\n\t\"./RectGrid/config\": 227,\n\t\"./RectGrid/config.json\": 227,\n\t\"./Scatter/ColorBy\": 228,\n\t\"./Scatter/ColorBy.jsx\": 228,\n\t\"./Scatter/Labeled\": 229,\n\t\"./Scatter/Labeled.jsx\": 229,\n\t\"./Scatter/Simple\": 230,\n\t\"./Scatter/Simple.jsx\": 230,\n\t\"./Scatter/config\": 231,\n\t\"./Scatter/config.json\": 231,\n\t\"./Selection/SelectionScatter\": 232,\n\t\"./Selection/SelectionScatter.jsx\": 232,\n\t\"./Selection/config\": 233,\n\t\"./Selection/config.json\": 233,\n\t\"./Tooltips/config\": 234,\n\t\"./Tooltips/config.json\": 234,\n\t\"./Tooltips/tooltips\": 235,\n\t\"./Tooltips/tooltips.jsx\": 235,\n\t\"./Waterfall/Basic\": 236,\n\t\"./Waterfall/Basic.jsx\": 236,\n\t\"./Waterfall/Completion\": 237,\n\t\"./Waterfall/Completion.jsx\": 237,\n\t\"./Waterfall/config\": 238,\n\t\"./Waterfall/config.json\": 238,\n\t\"./config\": 239,\n\t\"./config.js\": 239\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1290;","var map = {\n\t\"./BasicFunctions/IndexAndValues\": 240,\n\t\"./BasicFunctions/IndexAndValues.jsx\": 240,\n\t\"./BasicFunctions/SortValues\": 241,\n\t\"./BasicFunctions/SortValues.jsx\": 241,\n\t\"./BasicFunctions/Unique\": 242,\n\t\"./BasicFunctions/Unique.jsx\": 242,\n\t\"./BasicFunctions/ValueCounts\": 243,\n\t\"./BasicFunctions/ValueCounts.jsx\": 243,\n\t\"./BasicFunctions/arithmetic\": 244,\n\t\"./BasicFunctions/arithmetic.jsx\": 244,\n\t\"./BasicFunctions/config\": 245,\n\t\"./BasicFunctions/config.json\": 245,\n\t\"./BasicFunctions/duplicates\": 246,\n\t\"./BasicFunctions/duplicates.jsx\": 246,\n\t\"./BasicFunctions/insert\": 247,\n\t\"./BasicFunctions/insert.jsx\": 247,\n\t\"./BasicFunctions/replace\": 248,\n\t\"./BasicFunctions/replace.jsx\": 248,\n\t\"./BasicFunctions/toObject\": 249,\n\t\"./BasicFunctions/toObject.jsx\": 249,\n\t\"./Echarts/Pareto\": 250,\n\t\"./Echarts/Pareto.jsx\": 250,\n\t\"./Echarts/Pie\": 251,\n\t\"./Echarts/Pie.jsx\": 251,\n\t\"./Echarts/config\": 252,\n\t\"./Echarts/config.json\": 252,\n\t\"./Pareto/config\": 253,\n\t\"./Pareto/config.json\": 253,\n\t\"./Pareto/crop\": 254,\n\t\"./Pareto/crop.jsx\": 254,\n\t\"./Table/Table\": 255,\n\t\"./Table/Table.jsx\": 255,\n\t\"./Table/config\": 256,\n\t\"./Table/config.json\": 256,\n\t\"./config\": 257,\n\t\"./config.js\": 257,\n\t\"./toDataFrame/config\": 258,\n\t\"./toDataFrame/config.json\": 258,\n\t\"./toDataFrame/merge\": 259,\n\t\"./toDataFrame/merge.jsx\": 259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1291;","var map = {\n\t\"./Accordian/AccordianTable\": 260,\n\t\"./Accordian/AccordianTable.jsx\": 260,\n\t\"./Accordian/config\": 261,\n\t\"./Accordian/config.json\": 261,\n\t\"./Filtering/ColumnFilters\": 262,\n\t\"./Filtering/ColumnFilters.jsx\": 262,\n\t\"./Filtering/config\": 263,\n\t\"./Filtering/config.json\": 263,\n\t\"./Header/MultiRow\": 264,\n\t\"./Header/MultiRow.jsx\": 264,\n\t\"./Header/NoHeader\": 265,\n\t\"./Header/NoHeader.jsx\": 265,\n\t\"./Header/config\": 266,\n\t\"./Header/config.json\": 266,\n\t\"./LazyLoading/LazyLoading\": 267,\n\t\"./LazyLoading/LazyLoading.jsx\": 267,\n\t\"./LazyLoading/config\": 268,\n\t\"./LazyLoading/config.json\": 268,\n\t\"./MultiRow/MultiRowCol\": 269,\n\t\"./MultiRow/MultiRowCol.jsx\": 269,\n\t\"./MultiRow/MultirowTable\": 270,\n\t\"./MultiRow/MultirowTable.jsx\": 270,\n\t\"./MultiRow/config\": 271,\n\t\"./MultiRow/config.json\": 271,\n\t\"./ParentFilterCol\": 272,\n\t\"./ParentFilterCol.jsx\": 272,\n\t\"./ParentSortCol\": 273,\n\t\"./ParentSortCol.jsx\": 273,\n\t\"./SpecialContent/Checkbox\": 274,\n\t\"./SpecialContent/Checkbox.jsx\": 274,\n\t\"./SpecialContent/config\": 275,\n\t\"./SpecialContent/config.json\": 275,\n\t\"./Style/AlternatingStyle\": 276,\n\t\"./Style/AlternatingStyle.jsx\": 276,\n\t\"./Style/CustomCss\": 277,\n\t\"./Style/CustomCss.jsx\": 277,\n\t\"./Style/CustomeCellColoring\": 278,\n\t\"./Style/CustomeCellColoring.jsx\": 278,\n\t\"./Style/DataDrivenColoring\": 279,\n\t\"./Style/DataDrivenColoring.jsx\": 279,\n\t\"./Style/Hyperlinking\": 280,\n\t\"./Style/Hyperlinking.jsx\": 280,\n\t\"./Style/RenamingColumns\": 281,\n\t\"./Style/RenamingColumns.jsx\": 281,\n\t\"./Style/SimpleTable\": 282,\n\t\"./Style/SimpleTable.jsx\": 282,\n\t\"./Style/TableFormat\": 283,\n\t\"./Style/TableFormat.jsx\": 283,\n\t\"./Style/config\": 284,\n\t\"./Style/config.json\": 284,\n\t\"./config\": 285,\n\t\"./config.js\": 285\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1292;","export default __webpack_public_path__ + \"static/media/Slice.4b09f135.doc\";","export default __webpack_public_path__ + \"static/media/SortValues.95e09a5b.doc\";","export default __webpack_public_path__ + \"static/media/Transpose.f0abc1ed.doc\";","export default __webpack_public_path__ + \"static/media/insert.7f09153e.doc\";","export default __webpack_public_path__ + \"static/media/replace.23118564.doc\";","export default __webpack_public_path__ + \"static/media/toCsv.42dd3c67.doc\";","export default __webpack_public_path__ + \"static/media/multipleColumns.4cb9d48a.doc\";","export default __webpack_public_path__ + \"static/media/arithmetic.f4d7e558.doc\";","export default __webpack_public_path__ + \"static/media/date.a307352b.doc\";","export default __webpack_public_path__ + \"static/media/fillDays.8e6d1bcb.doc\";","export default __webpack_public_path__ + \"static/media/fillWeek.41d16c14.doc\";","export default __webpack_public_path__ + \"static/media/week.e3138f03.doc\";","export default __webpack_public_path__ + \"static/media/toSeries.61cd4014.doc\";","export default __webpack_public_path__ + \"static/media/BasicExample.ac843189.doc\";","export default __webpack_public_path__ + \"static/media/Simple.a46b459b.doc\";","export default __webpack_public_path__ + \"static/media/HorizontalSeries.5d8e37af.doc\";","export default __webpack_public_path__ + \"static/media/Pareto.3f381510.doc\";","export default __webpack_public_path__ + \"static/media/Simple.43fbfd31.doc\";","export default __webpack_public_path__ + \"static/media/Stacked.16426c62.doc\";","export default __webpack_public_path__ + \"static/media/StackedSeries.32389ae8.doc\";","export default __webpack_public_path__ + \"static/media/VerticalSeries.376b9b01.doc\";","export default __webpack_public_path__ + \"static/media/AllSamples.d2ca8046.doc\";","export default __webpack_public_path__ + \"static/media/AllSamplesGrouped.e14389c9.doc\";","export default __webpack_public_path__ + \"static/media/FilteredOverlay.0a919588.doc\";","export default __webpack_public_path__ + \"static/media/Simple.0998509d.doc\";","export default __webpack_public_path__ + \"static/media/HorizontalLine.01d045fc.doc\";","export default __webpack_public_path__ + \"static/media/Selection.ca287540.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ac9d6926.doc\";","export default __webpack_public_path__ + \"static/media/Style.1c3a8c53.doc\";","export default __webpack_public_path__ + \"static/media/Zoom.aa973c04.doc\";","export default __webpack_public_path__ + \"static/media/ZoomSlider.1dad555e.doc\";","export default __webpack_public_path__ + \"static/media/ZoomVertical.68b7fd34.doc\";","export default __webpack_public_path__ + \"static/media/onClick.c318e611.doc\";","export default __webpack_public_path__ + \"static/media/Legend.0e207468.doc\";","export default __webpack_public_path__ + \"static/media/ToolboxExample.dd92f223.doc\";","export default __webpack_public_path__ + \"static/media/Simple.2d862a29.doc\";","export default __webpack_public_path__ + \"static/media/ErrorBars.5d0c2293.doc\";","export default __webpack_public_path__ + \"static/media/Highlight.e40abc5f.doc\";","export default __webpack_public_path__ + \"static/media/Simple.ed38691e.doc\";","export default __webpack_public_path__ + \"static/media/FromSeries.fb55d306.doc\";","export default __webpack_public_path__ + \"static/media/Simple.4ef4ef49.doc\";","export default __webpack_public_path__ + \"static/media/Simple.211793d8.doc\";","export default __webpack_public_path__ + \"static/media/modified.4fb4f6e7.doc\";","export default __webpack_public_path__ + \"static/media/Custom.98cc15c8.doc\";","export default __webpack_public_path__ + \"static/media/Simple.9398ba11.doc\";","export default __webpack_public_path__ + \"static/media/ColorBy.aedf42bd.doc\";","export default __webpack_public_path__ + \"static/media/Labeled.fffca27c.doc\";","export default __webpack_public_path__ + \"static/media/Simple.d6531c7d.doc\";","export default __webpack_public_path__ + \"static/media/SelectionScatter.98d21352.doc\";","export default __webpack_public_path__ + \"static/media/tooltips.6c82abc1.doc\";","export default __webpack_public_path__ + \"static/media/Basic.7670b462.doc\";","export default __webpack_public_path__ + \"static/media/Completion.baf49586.doc\";","export default __webpack_public_path__ + \"static/media/IndexAndValues.276ad29f.doc\";","export default __webpack_public_path__ + \"static/media/SortValues.f68372e3.doc\";","export default __webpack_public_path__ + \"static/media/Unique.e70b8790.doc\";","export default __webpack_public_path__ + \"static/media/ValueCounts.3de5ea70.doc\";","export default __webpack_public_path__ + \"static/media/arithmetic.c5daf41b.doc\";","export default __webpack_public_path__ + \"static/media/duplicates.5aae440e.doc\";","export default __webpack_public_path__ + \"static/media/insert.c92d23cd.doc\";","export default __webpack_public_path__ + \"static/media/replace.0a689f6c.doc\";","export default __webpack_public_path__ + \"static/media/toObject.6f10958d.doc\";","export default __webpack_public_path__ + \"static/media/Pareto.a3c3c0fc.doc\";","export default __webpack_public_path__ + \"static/media/Pie.4e66c3a0.doc\";","export default __webpack_public_path__ + \"static/media/crop.cf68d327.doc\";","export default __webpack_public_path__ + \"static/media/Table.565bed6c.doc\";","export default __webpack_public_path__ + \"static/media/merge.682828b7.doc\";","export default __webpack_public_path__ + \"static/media/AccordianTable.c6c79840.doc\";","export default __webpack_public_path__ + \"static/media/AccordianTable.c6c79840.doc\";","export default __webpack_public_path__ + \"static/media/AlternatingStyle.722b45d1.doc\";","export default __webpack_public_path__ + \"static/media/Checkbox.41c2605e.doc\";","export default __webpack_public_path__ + \"static/media/ColumnFilters.1274a36a.doc\";","export default __webpack_public_path__ + \"static/media/ColumnFilters.1274a36a.doc\";","export default __webpack_public_path__ + \"static/media/MultiRow.94aa2d04.doc\";","export default __webpack_public_path__ + \"static/media/NoHeader.7670f9ba.doc\";","export default __webpack_public_path__ + \"static/media/LazyLoading.436accb3.doc\";","export default __webpack_public_path__ + \"static/media/LazyLoading.436accb3.doc\";","export default __webpack_public_path__ + \"static/media/MultiRowCol.38989a59.doc\";","export default __webpack_public_path__ + \"static/media/MultirowTable.a14bcb9f.doc\";","export default __webpack_public_path__ + \"static/media/MultiRowCol.38989a59.doc\";","export default __webpack_public_path__ + \"static/media/MultirowTable.a14bcb9f.doc\";","export default __webpack_public_path__ + \"static/media/NoHeader.7670f9ba.doc\";","export default __webpack_public_path__ + \"static/media/ParentFilterCol.52b459ec.doc\";","export default __webpack_public_path__ + \"static/media/ParentSortCol.5d0b7307.doc\";","export default __webpack_public_path__ + \"static/media/SimpleTable.e51e24b8.doc\";","export default __webpack_public_path__ + \"static/media/Checkbox.41c2605e.doc\";","export default __webpack_public_path__ + \"static/media/AlternatingStyle.722b45d1.doc\";","export default __webpack_public_path__ + \"static/media/CustomCss.869461bb.doc\";","export default __webpack_public_path__ + \"static/media/CustomeCellColoring.6635a0a2.doc\";","export default __webpack_public_path__ + \"static/media/DataDrivenColoring.a6eff217.doc\";","export default __webpack_public_path__ + \"static/media/Hyperlinking.e30102a4.doc\";","export default __webpack_public_path__ + \"static/media/RenamingColumns.cb5591ee.doc\";","export default __webpack_public_path__ + \"static/media/RenamingHeaders.701b86f4.doc\";","export default __webpack_public_path__ + \"static/media/SimpleTable.e51e24b8.doc\";","export default __webpack_public_path__ + \"static/media/TableFormat.1fa82fe0.doc\";","export default __webpack_public_path__ + \"static/media/TableFormat.1fa82fe0.doc\";","export default __webpack_public_path__ + \"static/media/install.727080ea.py\";","\r\n/// convert the column group object to an array of columns\r\nexport default function toColumns(columnGroups, header=false){\r\n\r\n  var columns = Object.values(columnGroups)\r\n\r\n  /// remove the string values (these will be merged across header rows)\r\n  if( header === true ) columns = columns.filter(r => typeof r !== 'string' )\r\n\r\n  // flatten the arrays into a single array\r\n  return columns.flat()\r\n}\r\n","/**\r\n * Column Filter\r\n * ==============\r\n *\r\n * adds a dropdown menu to the column header, that can\r\n * be used to filter the column contents\r\n *\r\n * @author Nik Sumikawa\r\n * @Date Dec 1, 2020\r\n *\r\n */\r\n\r\nimport React from 'react';\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { Dropdown, Segment } from 'semantic-ui-react'\r\n\r\nexport default function ColumnFilter( props ){\r\n\r\n  const unique_values = props.data.unique(props.col, true)\r\n  const options = unique_values.map(r => {\r\n    return {\r\n      key:`${r}-${_.uniqueId()}`,\r\n      text:`${r}`,\r\n      value:`${r}`,\r\n      style: {fontSize:'12px', padding: '0px', margin:0}\r\n    }})\r\n\r\n  var headerCellOnClick = null\r\n  if( props.columnOnClick !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    headerCellOnClick = () => props.columnOnClick({\r\n      col_name: props.col,\r\n      col_number: props.col_number\r\n    })\r\n  }\r\n\r\n\r\n  var columnFilterOnChange = null\r\n  if( props.columnFilterOnChange !== undefined ){\r\n    // persist the onClick inputs to avoid mutation\r\n    columnFilterOnChange = (e, val) => props.columnFilterOnChange({\r\n      col_name: props.col,\r\n      col_number: props.col_number,\r\n      value: val.value\r\n    })\r\n  }\r\n\r\n  var filterValues\r\n  if( props.filters !== undefined ){\r\n    filterValues = (props.filters\r\n      .filter(r => r.col_name === props.col)\r\n      .map(r => r.value)\r\n    )\r\n\r\n    if( filterValues.length === 0 ){\r\n      filterValues = undefined\r\n    }else{\r\n      filterValues = filterValues[0]\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <Segment.Group\r\n      key={`Header-SeggyGroup-${props.col}`}\r\n      raised={false}\r\n      compact\r\n\r\n      style={{\r\n        width:'100%',\r\n        padding:0,\r\n        margin:0,\r\n        boxShadow: 'none',\r\n        border: '0',\r\n        backgroundColor:'transparent'}}>\r\n\r\n      <Segment\r\n        key={`Header-Title-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        onClick={headerCellOnClick}\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}} >\r\n        {props.col}\r\n      </Segment>\r\n\r\n      <Segment\r\n        key={`Header-Filter-${props.col}`}\r\n        basic\r\n        textAlign='center'\r\n        style={{\r\n          padding:0,\r\n          margin:0,\r\n          backgroundColor:'transparent',\r\n          border: '0'}}\r\n        >\r\n\r\n        <Dropdown\r\n          key={`Header-Dropdown-${props.col}}`}\r\n          style={{\r\n            margin:0,\r\n            padding:'0',\r\n            maxWidth: '100px',\r\n            minHeight: '10px',\r\n            fontSize: '10px',\r\n            color: '#212121'\r\n          }}\r\n          placeholder={'filter...'}\r\n          multiple\r\n          selection\r\n          fluid\r\n          value={filterValues}\r\n          onChange={columnFilterOnChange}\r\n          options={options}\r\n          icon= {null}\r\n\r\n\r\n          />\r\n      </Segment>\r\n    </Segment.Group>\r\n\r\n\r\n  )\r\n}\r\n","/**\r\n * Table Cell Framework\r\n * =======================\r\n *\r\n * Component used to render table cells\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell} from '../../../framework/Components'\r\n\r\nimport ColumnFilter from '../Filter/ColumnFilter'\r\n\r\n\r\n/**\r\n * [Cell description]\r\n * @param       {string} col column name\r\n * @param       {integer} colNumber column number\r\n * @constructor\r\n */\r\nexport default function Cell( props ) {\r\n\r\n  var col = props.col\r\n\r\n  //map the column name when the mapping exists\r\n  if( props.columnNames !== undefined ){\r\n    if( Object.keys(props.columnNames).includes(col) ){\r\n      col = props.columnNames[col]\r\n    }\r\n  }\r\n\r\n  // generate the standard Header onClick function\r\n  var headerCellOnClick = null\r\n  if( props.columnOnClick !== undefined ){\r\n    headerCellOnClick = () => props.columnOnClick({\r\n      col_name: col,\r\n      colNumber: props.colNumber\r\n    })\r\n  }\r\n\r\n  // replace the column component with a filter when filters are specified\r\n  var ColComponent = col\r\n  if( props.columnFilterOnChange !== undefined ){\r\n    headerCellOnClick = null\r\n\r\n    ColComponent = (\r\n      <ColumnFilter\r\n        {...props}\r\n        key = {`Header-ColFilter-${col}`}\r\n        col = {col}\r\n        colNumber = {props.colNumber}\r\n        />\r\n    )\r\n  }\r\n\r\n  // sorted={value === props.sortBy ? direction : null}\r\n\r\n  //populate the header cell\r\n  return(\r\n    <HeaderCell\r\n      {...props.thProps}\r\n      style={{...{textAlign:'center'}, ...props.thStyle}}\r\n      component={props.th}\r\n      defaultValue = {ColComponent}\r\n      key = {`${props.tableName}-th-${props.colNumber}`}\r\n      onClick={headerCellOnClick}\r\n      />\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Row Framework\r\n * =======================\r\n *\r\n * Component used to render table Rows\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Row} from '../../../framework/Components'\r\nimport Cell from '../Cell'\r\n\r\nexport default function ColumnRow( props ) {\r\n\r\n  var col_offset = 0\r\n  var colCells = []\r\n\r\n  // add a leading column when specific parameters are provided\r\n  // in the table object\r\n  if( props.accordian === true ){\r\n    colCells.push(\r\n      <HeaderCell\r\n        {...props.thProps}\r\n        style={{...{textAlign:'center'}, ...props.thStyle}}\r\n        component={props.th}\r\n        defaultValue = {''}\r\n        key = {`${props.tableName}-th-0-ColRow`}\r\n        />\r\n    )\r\n    col_offset = col_offset + 1\r\n  }\r\n\r\n\r\n  // when no columns are provided as props, pull them from the data source\r\n  var columns = props.columns\r\n  if( columns === undefined ) columns = props.table_data.columns\r\n\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n      const colNumber = i + col_offset\r\n\r\n      //populate the header cell\r\n      colCells.push(\r\n        <Cell\r\n          {...props}\r\n          col = {col}\r\n          colNumber = {colNumber}\r\n          key = {`${props.tableName}-th-${colNumber}-ColRow`}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n\r\n  // define the header row\r\n  return (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={colCells}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {Header} from '../../../framework/Components'\r\nimport ColumnRow from './ColumnRow'\r\n\r\nexport default function DataFrameHeader( props ) {\r\n\r\n  // define the header row\r\n  const headerrow = <ColumnRow {...props} />\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n","/**\r\n * Table Row Framework\r\n * =======================\r\n *\r\n * Component used to render table Rows\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Sept 18, 2021\r\n */\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Row} from '../../../framework/Components'\r\nimport Cell from '../Cell'\r\n\r\nexport default function TableRow( props ) {\r\n\r\n  var col_offset = 0\r\n  var catCells = []\r\n\r\n  // add a leading column when specific parameters are provided\r\n  // in the table object\r\n  if( props.accordian === true ){\r\n    catCells.push(\r\n      <HeaderCell\r\n        {...props.thProps}\r\n        style={{...{textAlign:'center'}, ...props.thStyle}}\r\n        component={props.th}\r\n        defaultValue = {''}\r\n        key = {`${props.tableName}-th-0-CategoryRow`}\r\n        />\r\n    )\r\n    col_offset = col_offset + 1\r\n  }\r\n\r\n\r\n  // when no columns are provided as props, pull them from the data source\r\n  var categories = Object.keys(props.columnGroups)\r\n\r\n  for (var i=0; i < categories.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var cat = categories[i]\r\n      const colNumber = i + col_offset\r\n\r\n      // determine the col/row spanning based on the col group types\r\n      var thProps = {...props.thProps, ...{}}\r\n      if( typeof props.columnGroups[cat] === 'string' ){\r\n        thProps['rowSpan'] = 2\r\n      } else{\r\n        thProps['colSpan'] = props.columnGroups[cat].length\r\n      }\r\n\r\n      //populate the header cell\r\n      catCells.push(\r\n        <Cell\r\n          {...props}\r\n          col = {cat}\r\n          colNumber = {colNumber}\r\n          thProps={thProps}\r\n          key = {`${props.tableName}-th-${colNumber}-CategoryRow`}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n\r\n  // define the header row\r\n  return (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={catCells}\r\n      key={`${props.tableName}-CategoryRow`}\r\n      />\r\n  )\r\n\r\n\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport toColumn from '../../utilities/ColGroupsToCol'\r\nimport { Table as SemanticTable } from 'semantic-ui-react'\r\n\r\n// import {Header} from '../../../framework/Components'\r\nimport ColumnRow from '../SingleRow/ColumnRow'\r\nimport CategoryRow from './CategoryRow'\r\n\r\nexport default function MultiRowHeader( props ) {\r\n\r\n  const columns = toColumn(props.columnGroups, true)\r\n\r\n  return (\r\n      <SemanticTable.Header>\r\n        <CategoryRow\r\n          key={`${props.tableName}-CombinedRow1`}\r\n          {...props}\r\n          />\r\n\r\n        <ColumnRow\r\n          key={`${props.tableName}-CombinedRow2`}\r\n          {...props}\r\n          columns = {columns}\r\n          />\r\n      </SemanticTable.Header>\r\n\r\n    );\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport SingleRow from './SingleRow'\r\nimport MultiRow from './MultiRow'\r\n// import TableRow from './Row'\r\n\r\nexport default function DataFrameHeader( props ) {\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n\r\n  if( props.columnGroups !== undefined ) return <MultiRow {...props}/>\r\n\r\n  // // return the standard single row\r\n  return <SingleRow {...props}/>\r\n\r\n}\r\n","/**\r\n * Table Column Framework\r\n * =======================\r\n *\r\n * Add functionality to the base table driver to allow for\r\n * column header generation\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 4, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {HeaderCell, Header, Row} from '../../framework/Components'\r\n\r\n\r\n\r\n/**\r\n * Returns the Table Header for data in Series Format\r\n * @param       {Object} props Parameter object\r\n * @constructor\r\n */\r\nexport default function SeriesHeader( props ) {\r\n\r\n  // do not render header when visible is turned off\r\n  if( props.showHeader === false ) return null\r\n\r\n  var data = props.table_data\r\n\r\n  // attempt to pull the name out of the series. Default to\r\n  // value when it's not available\r\n  var name = data.name\r\n  if( name === undefined ) name = 'value'\r\n\r\n  var row = []\r\n  const columns = ['', name]\r\n\r\n  for (var i=0; i < columns.length; i++ ){\r\n      //retrieve the column name from the data structure\r\n      var col = columns[i]\r\n\r\n\r\n      var headerCellOnClick = null\r\n      if( props.columnOnClick !== undefined ){\r\n        // persist the onClick inputs to avoid mutation\r\n        const col_name = col\r\n        const col_number = i\r\n        headerCellOnClick = () => props.columnOnClick({\r\n          col_name: col_name,\r\n          col_number: col_number\r\n        })\r\n      }\r\n\r\n      //populate the header cell\r\n      row.push(\r\n        <HeaderCell\r\n          {...props.thProps}\r\n          style={{...{textAlign:'center'}, ...props.thStyle}}\r\n          component={props.th}\r\n          defaultValue = {col}\r\n          key = {`${props.tableName}-th-${i}`}\r\n          onClick={headerCellOnClick}\r\n          />\r\n      )\r\n\r\n  }\r\n\r\n  // define the header row\r\n  const headerrow = (\r\n    <Row\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      defaultValue={row}\r\n      key={`${props.tableName}-headerrow`}\r\n      />\r\n  )\r\n\r\n\r\n  return (\r\n      <Header\r\n        {...props.theadProps}\r\n        style={{...{textAlign:'center'}, ...props.theadStyle}}\r\n        component={props.thead}\r\n        defaultValue={headerrow}\r\n        key = {`${props.tableName}-thead`}\r\n        />\r\n    );\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {fillAndEdge} from '../../../colors/Colors'\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns a svg object containing a colored square\r\n * @param       {string} colorHex string containing the hex color value\r\n * @constructor\r\n */\r\nexport default function coloredSquare( colorHex, props ){\r\n\r\n  if( colorHex === undefined ) colorHex = '#B0B0B0'\r\n\r\n  const colors = fillAndEdge(colorHex)\r\n\r\n  return(\r\n    <svg preserveAspectRatio=\"xMinYMin meet\"\r\n      viewBox=\"0, 0, 40, 20\"\r\n      transform=\"scale(1, -1)\"\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"40px\",\r\n        height: '100%',\r\n        overflow: \"visible\",\r\n      }}>\r\n\r\n      <rect\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"40\"\r\n        height=\"100%\"\r\n        stroke={colors.edge}\r\n        strokeWidth=\"1\"\r\n        fill={colors.fill}\r\n        />\r\n\r\n    </svg>\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n/**\r\n * returns the onClick function when specified. Defaults to undefined\r\n * @param  {object} json_table  jsonTable object\r\n * @param  {string} col         column name\r\n * @param  {integer} row        row number\r\n * @return {function}           onClick function\r\n */\r\nexport default function onClickFunc( props ){\r\n\r\n  var onClick\r\n\r\n  // select the onClick function when provided globally\r\n  if( props.onClick !== undefined ){\r\n    onClick = () => props.onClick({\r\n      row: props.row_idx,\r\n      col: props.col,\r\n      value: props.value,\r\n      row_data: props.row\r\n      })\r\n  }\r\n\r\n  // extract the onClick function for the specific cell\r\n  if( props.cellOnClick !== undefined ){\r\n\r\n    // add the onClick function when one exists for the column\r\n    const onClickColumns = Object.keys(props.cellOnClick)\r\n    if( onClickColumns.includes(props.col) ){\r\n      onClick = () => props.cellOnClick[props.col]({\r\n        row: props.row_idx,\r\n        col: props.col,\r\n        value: props.value,\r\n        row_data: props.row\r\n        })\r\n    }\r\n  }\r\n\r\n  return onClick\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport {Button, Image, Icon, Checkbox} from '../../framework/Components'\r\n\r\nimport valueToString from '../../../../data_types/format/valueToString'\r\n\r\nimport booleanCircle from './booleanCircle'\r\nimport coloredSquare from './coloredSquare'\r\nimport onClickFunc from './onClickFunc'\r\n\r\n\r\nexport default function cellType( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n\r\n  const format = new valueToString()\r\n\r\n  //add the onclick fundtion. Default to do nothing when the function does not exist\r\n  var cellOnClick = onClickFunc( props )\r\n  var componentOnClick = onClickFunc( props )\r\n\r\n  var value = props.value\r\n  var cellContent\r\n\r\n  switch( props.dtype ){\r\n\r\n    case 'button':\r\n      cellOnClick = null\r\n\r\n      cellContent = (\r\n        <Button\r\n          {...props.buttonProps}\r\n          style={{...{textAlign:'center'}, ...props.buttonStyle}}\r\n          component={props.button}\r\n          key={`${props.tableName}-button-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'image':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Image\r\n          {...props.imageProps}\r\n          style={{...{textAlign:'center'}, ...props.imageStyle}}\r\n          component={props.image}\r\n          key={`${props.tableName}-image-${props.col}-${props.row_idx}`}\r\n          defaultValue={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'icon':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Icon\r\n          {...props.IconProps}\r\n          key={`${props.tableName}-icon-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.iconStyle}}\r\n          component={props.icon}\r\n          name={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    case 'checkbox':\r\n      cellOnClick = null\r\n      cellContent = (\r\n        <Checkbox\r\n          {...props.CheckboxProps}\r\n          key={`${props.tableName}-checkbox-${props.col}-${props.row_idx}`}\r\n          style={{...{textAlign:'center'}, ...props.checkboxStyle}}\r\n          component={props.checkbox}\r\n          checked={value}\r\n          onClick={componentOnClick}\r\n          />\r\n      )\r\n      break;\r\n\r\n    // case 'function':\r\n    //   return props.table.function[col_name](props)\r\n\r\n    case 'boolean':\r\n      cellOnClick = null\r\n      cellContent = booleanCircle(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'square':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'hexcolor':\r\n      cellOnClick = null\r\n      cellContent = coloredSquare(value, componentOnClick, props)\r\n      break\r\n\r\n    case 'text':\r\n      cellContent = <p style={{whiteSpace:'pre'}}>{value}</p>\r\n      break\r\n\r\n    case 'hyperlink':\r\n      cellContent = <a href={value}>{value}</a>\r\n      break\r\n\r\n    case 'float':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'percent':\r\n    case 'percentage':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'scientific':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'datetime':\r\n      cellContent = format.toString(value, props.dtype)\r\n      break\r\n\r\n    case 'table':\r\n      cellContent = value\r\n      break\r\n\r\n    default:\r\n      cellContent = <p style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}}>{value}</p>\r\n  }\r\n\r\n\r\n  return {\r\n    cellContent: cellContent,\r\n    cellOnClick: cellOnClick\r\n  }\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {booleanColor} from '../../../colors/Colors'\r\n\r\n\r\n/**\r\n * Creates a green or red circle based on the value of the cell\r\n * @constructor\r\n */\r\nexport default function booleanCircle(value, onClick, props){\r\n\r\n  var colors = booleanColor( value )\r\n\r\n  var radius = 20\r\n  if( props.radius !== undefined ) radius = props.radius\r\n\r\n  return (\r\n\r\n      <svg preserveAspectRatio=\"xMinYMin meet\"\r\n           viewBox={`0, 0, ${radius}, ${radius}`}\r\n           transform=\"scale(1, -1)\"\r\n           style={{display: \"inline-block\",\r\n                   width: `${radius+4}px`,\r\n                   overflow: \"visible\",\r\n           }}>\r\n\r\n        <circle\r\n          cx={`${radius/2 - 2}`}\r\n          cy={`${radius/2 - 2}`}\r\n          r={`${radius/2}`}\r\n          stroke={colors.edge}\r\n          strokeWidth=\"1\"\r\n          fill={colors.fill}\r\n          onClick={onClick}\r\n          />\r\n\r\n       </svg>\r\n )\r\n\r\n\r\n}\r\n","/**\r\n * Cells\r\n * =================\r\n * Routines for generating different Cell formats\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Jan 13, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport {Cell as TableCell} from '../../framework/Components'\r\n\r\nimport cellType from './cellType'\r\n\r\n\r\nexport default function Cell( props ) {\r\n  // populute each cell based on the specified column type. When no\r\n  // column type is provided, default to text format\r\n\r\n  const cell = cellType(props)\r\n\r\n  var style = {textAlign:'center'}\r\n\r\n  // the background color can be provided as a field of table object.\r\n  // The background color parameter requires a json array with the\r\n  // same fields as the data table. What would normally contain the\r\n  // data now contains colors\r\n  if( props.cellBackgroundColor !== undefined ){\r\n    try{\r\n      const color = props.cellBackgroundColor[props.row_idx][props.col]\r\n      if( color !== undefined ) style['backgroundColor'] = color\r\n    }catch{}\r\n  }\r\n\r\n  if( props.cellStyle !== undefined ){\r\n    try{\r\n      style = {\r\n        ...style,\r\n        ...props.cellStyle[props.row_idx][props.col]\r\n\r\n      }\r\n    }catch{}\r\n  }\r\n\r\n  return (\r\n    <TableCell\r\n      {...props.tdProps}\r\n      style={{...props.tdStyle, ...style}}\r\n      component={props.td}\r\n      key = {`${props.tableName}-cell-${props.col}-${props.row_idx}`}\r\n      onClick={cell.cellOnClick}\r\n      defaultValue= {cell.cellContent}\r\n      />\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n\r\n\r\nexport default function Row( props ) {\r\n\r\n    const row_data = props.table_data[props.row_idx]\r\n    const row = []\r\n    for (var i=0; i < props.columns.length; i++ ){\r\n      const col = props.columns[i]\r\n\r\n      var tdProps = {...props.tdProps, ...{}}\r\n      if( props.col_span !== undefined ) tdProps['colSpan'] = props.col_span[col]\r\n      if( props.row_span !== undefined){\r\n        if (Object.keys(props.row_span).includes(col)) tdProps['rowSpan'] = props.row_span[col]\r\n      }\r\n\r\n\r\n      row.push(\r\n        <Cell\r\n          {...props}\r\n          row={row_data}\r\n          value={row_data[col]}\r\n          dtype={props.table_data.dtypes[col]}\r\n          key={`${props.tableName}-cell-${props.row_idx}-${i}`}\r\n          col = {col}\r\n          tdProps={tdProps}\r\n          />\r\n      )\r\n    }\r\n\r\n\r\n    // define the rowOnClick function to standardize the returned data\r\n    var rowOnClick = null\r\n    if( props.rowOnClick !== undefined ){\r\n      rowOnClick = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // set the background color when the row is selected\r\n    var rowStyle = {textAlign:'center'}\r\n\r\n    if((props.alternateStyle === true)&(props.row_idx % 2 === 0) ){\r\n      rowStyle['backgroundColor'] = '#f6fcfe'\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowColor !== undefined ){\r\n      const rows = Object.keys(props.rowColor)\r\n      const idx = row_data.__index__.toString()\r\n      if( rows.includes(idx) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: props.rowColor[idx]}\r\n      }\r\n    }\r\n\r\n    // Add custom row style\r\n    if( props.rowStyle !== undefined ){\r\n      if( props.rowStyle.length > props.row_idx ){\r\n        rowStyle = {...rowStyle, ...props.rowStyle[props.row_idx]}\r\n      }\r\n    }\r\n\r\n    // Row background color allows for the control of the background\r\n    // color of multiple rows based on the index number\r\n    if( props.rowBackgroundColor !== undefined ){\r\n      if( props.rowBackgroundColor.includes(row_data.__index__) ){\r\n        rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n      }\r\n    }\r\n\r\n    if( props.row_idx === props.selectedRow ){\r\n      rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n    }\r\n\r\n    // return the cell content not wrapped in a row element. This\r\n    // is needed for row extensions such as the accordian rows.\r\n    if( props.cellContentOnly === true ){\r\n      return row\r\n    }\r\n\r\n\r\n    return (\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}--${props.multirow_idx}`}\r\n        onClick={rowOnClick}\r\n        defaultValue={row}\r\n        />\r\n    )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\n\r\n/**\r\n * Returns a Row of Cell components based on data Formatted\r\n * as a Series\r\n * @param       {Object} props data and style parameters\r\n */\r\nexport default function SeriesRow( props ) {\r\n\r\n  const index = props.table_data.index\r\n  const values = props.table_data.values\r\n\r\n  // format the row data to return in onClick functions\r\n  const row_data = {\r\n    __index__: index[props.row_idx],\r\n    __value__: values[props.row_idx],\r\n  }\r\n\r\n  // default the data type unless the table contains a datatype array\r\n  // which is provided manually for table customization\r\n  var dtype = props.table_data.dtype\r\n  if( props.table_data.dtypes !== undefined ) dtype = props.table_data.dtypes[row_data['__index__']]\r\n\r\n  const row = [\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__index__']}\r\n      dtype={'string'}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${0}`}\r\n      col = {'__index__'}\r\n      />,\r\n\r\n    <Cell\r\n      {...props}\r\n      row={row_data}\r\n      value={row_data['__value__']}\r\n      dtype={dtype}\r\n      key={`${props.tableName}-cell-${props.row_idx}-${1}`}\r\n      col = {'__value__'}\r\n      />\r\n\r\n  ]\r\n\r\n\r\n\r\n  // define the rowOnClick function to standardize the returned data\r\n  var rowOnClick = null\r\n  if( props.rowOnClick !== undefined ){\r\n    rowOnClick = () => props.rowOnClick({\r\n      row: props.row_idx,\r\n      row_data: row_data\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      {...props.trProps}\r\n      style={{...{textAlign:'center'}, ...props.trStyle}}\r\n      component={props.tr}\r\n      key={`${props.tableName}-row--${props.row_idx}`}\r\n      onClick={rowOnClick}\r\n      defaultValue={row}\r\n      />\r\n  )\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Cell from '../cell'\r\nimport {Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\n\r\n/**\r\n * Accordian Tables are available after performing the groupby\r\n * function, where both metadata and the json object are available\r\n * based on the split.\r\n *\r\n * The accordian table shows the data based on the split described\r\n * by the parent table\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport default function AccordianRow( props ){\r\n\r\n  // state variable to track the visibility state of the accordian\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const row_data = props.table_data[props.row_idx]\r\n\r\n  // map the rowOnClick function to cellonClick to\r\n  // disable the onClick function of the icon row\r\n  var cellOnClick = {}\r\n  if( props.rowOnClick !== undefined ){\r\n    for( var i=0; i < props.columns.length; i++ ){\r\n      cellOnClick[props.columns[i]] = () => {\r\n        props.setSelectedRow( props.row_idx );\r\n        props.rowOnClick({\r\n          row: props.row_idx,\r\n          row_data: row_data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // console.log( props.selectedRow, props)\r\n  // set the background color when the row is selected\r\n  var rowStyle = {textAlign:'center'}\r\n  if( props.row_idx === props.selectedRow ){\r\n    rowStyle = {textAlign:'center', backgroundColor: '#8c9ac0'}\r\n  }\r\n\r\n\r\n\r\n  var AccordianTable = row_data.json_obj\r\n\r\n  // when provided, apply the the function to transform the subgroup\r\n  if( props.accordianFunc !== undefined) AccordianTable = props.accordianFunc(AccordianTable)\r\n\r\n  var columns = AccordianTable.columns\r\n  if( props.accordianColumns !== undefined ) columns = props.accordianColumns\r\n\r\n  // select an icon based on the visible flag\r\n  var iconOnClick = () => {setVisible(!visible)}\r\n  var icon = 'caret right'\r\n  var iconColor = 'black'\r\n  if( visible === true ) icon = 'caret down'\r\n  if( AccordianTable.length === 0 ){\r\n    icon = 'ellipsis horizontal'\r\n    iconColor = '#D0D0D0'\r\n    iconOnClick = () => {console.log('no data to unfold')}\r\n  }\r\n\r\n  var AccordianComponent\r\n  if( props.accordianComponent !== undefined ){\r\n\r\n    AccordianComponent = (\r\n      <props.accordianComponent\r\n        {...props}\r\n        row={props.row_idx}\r\n        row_data={row_data}\r\n        />\r\n    )\r\n\r\n  }else{\r\n\r\n    AccordianComponent = (\r\n      <AccordianTable.react.semanticUI.Table\r\n        tableName={`accordianTable - ${props.tableName} - ${props.row_idx}`}\r\n        tableStyle={{padding:0, margin:0}}\r\n        columns={columns}\r\n        thStyle={{margin:0, padding:0}}\r\n        tdStyle={{margin:0, padding:0}}\r\n        showHeader={props.accordianHeader}\r\n        radius={10}\r\n        {...props.accordianProps}\r\n        />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...rowStyle, ...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--${props.row_idx}`}\r\n        defaultValue={\r\n          <>\r\n            <Cell\r\n              {...props}\r\n              tdProps={{rowSpan:(visible) ? 2 : 1}}\r\n              style={{maxWidth:'50px'}}\r\n              row={props.row_idx}\r\n              value={icon}\r\n              dtype={'icon'}\r\n              key={`${props.tableName}-accordian-control-${props.row_idx}`}\r\n              col = {'accordianEnable'}\r\n              onClick={iconOnClick}\r\n              iconStyle={{color:iconColor}}\r\n              />\r\n\r\n            <Row\r\n              {...props}\r\n              cellContentOnly={true}\r\n              cellOnClick={cellOnClick}\r\n              />\r\n          </>\r\n        }\r\n        />\r\n\r\n\r\n\r\n        { visible ?\r\n          <TableRow\r\n            {...props.trProps}\r\n            component={props.tr}\r\n            key={`${props.tableName}-accordian-row-${props.row_idx}`}\r\n            defaultValue={\r\n              <Cell\r\n                {...props}\r\n                tdProps={{colSpan:props.columns.length}}\r\n                tdStyle={{margin:0, padding:0}}\r\n                row={props.row_idx}\r\n                dtype={'table'}\r\n                key={`${props.tableName}-accordian-dropodwn-${props.row_idx}-${-1}`}\r\n                col = {'accordianTable'}\r\n                value={AccordianComponent}\r\n                />\r\n\r\n\r\n            }\r\n            />\r\n          : null\r\n        }\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\n\r\nimport Row from './Row'\r\n\r\n\r\nexport default function MultiRow( props ) {\r\n\r\n  const modProps = rowSpan(props)\r\n\r\n  var MultiRow = [Row(modProps)]\r\n\r\n  for( var i=0; i < props.multirow.length; i++ ){\r\n    const columns = props.multirow[i]\r\n\r\n    MultiRow.push(\r\n      Row({\r\n        ...props,\r\n        ...{\r\n          columns: columns,\r\n          multirow_idx: i,\r\n          col_span: colSpan(props, columns),\r\n          tdStyle: {\r\n            ...{textAlign: 'left'},\r\n            ...props.tdStyle,\r\n            ...props.multirowStyle\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n  }\r\n\r\n  return MultiRow\r\n}\r\n\r\n\r\nfunction colSpan( props, columns ){\r\n\r\n  var span_len = props.columns.length\r\n  if( props.multirowSpan !== undefined ) span_len = span_len - props.multirowSpan.length\r\n\r\n  // compute the lower bound on column span width\r\n  const span = Math.ceil(span_len/columns.length)\r\n\r\n  var colSpan = {}\r\n  for( var i=0; i < columns.length; i++ ){\r\n    colSpan[columns[i]] = span\r\n\r\n    // shrink the last column when span does not align properly\r\n    if(  (columns.length - i*span) < 0 ){\r\n      colSpan[columns[i]] = columns.length - (i-1)*span\r\n    }\r\n  }\r\n\r\n  return colSpan\r\n\r\n}\r\n\r\nfunction rowSpan( props ){\r\n\r\n  var modProps = {...props, ...{}}\r\n\r\n\r\n  if( props.multirowSpan !== undefined ){\r\n\r\n    // const multiRowCol = [...new Set(props.multirowSpan.filter(x => props.columns.includes(x)))]\r\n    // const colDiff = [...new Set(props.multirowSpan.filter(x => !props.columns.includes(x)))]\r\n    //\r\n    // modProps.columns = multiRowCol.concat(colDiff)\r\n\r\n    modProps['row_span'] = {}\r\n    props.multirowSpan.map(r => modProps['row_span'][r] = props.multirow.length + 1 )\r\n  }\r\n\r\n  return modProps\r\n\r\n}\r\n","/**\r\n * Table Body\r\n * ================\r\n *\r\n * React components used to generate the Table Body\r\n *\r\n *  @author Nik Sumikawa\r\n *  @date Aug 27, 2020\r\n */\r\n\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport Series from '../../../../Series'\r\n\r\nimport {Body, Row as TableRow} from '../../framework/Components'\r\n\r\nimport Row from './Row'\r\nimport SeriesRow from './SeriesRow'\r\nimport AccordianRow from './AccordianRow'\r\nimport MultiRow from './MultiRow'\r\n\r\nexport default function TableBody( props ) {\r\n\r\n  const [selectedRow, setSelectedRow] = useState(props.selectedRow)\r\n  const [onHover, setOnHover] = useState(false)\r\n\r\n  // default to using the DataFrame Row Format\r\n  var Component = Row\r\n  var rows = props.table_data.length\r\n\r\n  // when lazy loading is implemented, limited the number of rows to render\r\n  if( (props.lazyLoading === true)&(props.renderedRows < rows) ){\r\n    rows = props.renderedRows\r\n  }\r\n\r\n  // overwrite the component with Accordian rows when specified\r\n  if( props.accordian === true ) Component = AccordianRow\r\n\r\n  // change component types when the data is of series type\r\n  if( props.table_data instanceof Series ){\r\n    Component = SeriesRow\r\n    rows = props.table_data.values.length\r\n  }\r\n\r\n  // change component types to MultiRow when the multirow props are present\r\n  if( props.multirow !== undefined ){\r\n    Component = MultiRow\r\n  }\r\n\r\n  const body = []\r\n  for (var i=0; i < rows; i++ ){\r\n\r\n    body.push(\r\n      <Component\r\n        {...props}\r\n        key={`${props.tableName}-Row-${i}`}\r\n        row_idx = {i}\r\n        selectedRow = {selectedRow}\r\n        setSelectedRow = {(value) => setSelectedRow(value)}\r\n        />\r\n    )\r\n  }\r\n\r\n  // add a row to show more rows, when there are more rows to show\r\n  if( (props.lazyLoading === true)&(props.renderedRows < props.table_data.length) ){\r\n    body.push(\r\n      <TableRow\r\n        {...props.trProps}\r\n        style={{...props.trStyle}}\r\n        component={props.tr}\r\n        key={`${props.tableName}-row--lazyloading`}\r\n        onClick={() => {\r\n          const step = (props.lazyLoadingStep === undefined ? 100 : props.lazyLoadingStep)\r\n          props.setRenderedRows(props.renderedRows + step)\r\n        }}\r\n        defaultValue={\r\n          <td\r\n            onMouseOver={()=>setOnHover(true)}\r\n            onMouseOut={()=>setOnHover(false)}\r\n            style={{backgroundColor: (onHover ? '#AFEEEE' : '#F0FFFF')}}\r\n            colSpan={props.columns.length}>\r\n            <h3>show more rows</h3>\r\n          </td>\r\n        }\r\n        />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Body\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.body}\r\n      key={`${props.tableName}-body`}\r\n      defaultValue={body}\r\n      />\r\n  )\r\n\r\n\r\n}\r\n","/**\r\n * Semantic UI Framework\r\n * =======================\r\n *\r\n * Extends the jsonArray functionality to include specific\r\n * functions for formatting semantic UI components\r\n *\r\n * :Author: Nik Sumikawa\r\n * :Date: Aug 4, 2020\r\n */\r\n\r\n\r\nimport React, {useState} from 'react';\r\n\r\nimport jsonArray from '../../../jsonArray'\r\nimport Series from '../../../Series'\r\n\r\nimport ReactLibraryFramework from '../ReactLibraryFramework'\r\n\r\nimport toColumn from './utilities/ColGroupsToCol'\r\nimport {Table as TableComponent} from '../framework/Components'\r\nimport {SeriesHeader, DataFrameHeader} from './header'\r\nimport TableBody from './body'\r\n\r\n\r\n/**\r\n * Integrated table component  build into the jsonArray\r\n * @param       {String} props.tableName\r\n * @param       {Component} props.table base html component that can be overwritten by Framework component\r\n * @param       {Component} props.tr    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.td    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.th    base html component that can be overwritten by Framework component\r\n * @param       {Component} props.body  base html component that can be overwritten by Framework component\r\n * @param       {Component} props.button base html component that can be overwritten by Framework component\r\n * @param       {function} props.columnOnClick  function exectued when a column is selected\r\n * @param       {function} props.rowOnClick     function exectued when a row is selected\r\n * @param       {function} props.cellOnClick    function exectued when a cell is selected\r\n * @param       {Boolean} props.accordian  Not implemented\r\n * @param       {Boolean} props.accordianHeader  Not implemented\r\n * @param       {Boolean} props.accordianColumns  Not implemented\r\n * @param       {Boolean} props.accordianFunc  Not implemented\r\n * @param       {Boolean} props.showHeader when True, the table header will be shown\r\n * @param       {Boolean} props.sortable   When True, the table can be sorted by the columns\r\n * @param       {Array} props.columns     Array of column names\r\n * @param       {Array} props.columnNames Array of column names\r\n * @param       {String} props.sortBy     column name that will be presorted\r\n * @param       {String} props.sortAscending  sort column direction\r\n * @param       {boolean} props.lazingLoading  when True, only part of the table will be rendered with the ability to render in steps (lazy loading)\r\n * @param       {Integer} props.lazyLoadingStart  Number of rows to render on init\r\n * @param       {Integer} props.lazyLoadingStep   Number of rows to add when rerendering\r\n * @param       {Array} props.rowBackgroundColor set the background color of multiple rows based on the index number\r\n * @constructor\r\n */\r\nexport default class Table extends ReactLibraryFramework{\r\n  constructor(data, props={}){\r\n    super(data, props)\r\n\r\n    // must bind this to all internal functions or they will be\r\n    // lost when rendering via react\r\n    this.Table = this.Table.bind(this)\r\n  }\r\n\r\n  Table( props ){\r\n\r\n    // Render the table with a Series data structure\r\n    if( this.data instanceof Series ){\r\n      return SeriesTable( this.format_props(props) )\r\n    }\r\n\r\n    // default to render the table as a DataFrame type\r\n    return Render( this.format_props(props) )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the table based on the data and parameters specified in the\r\n // json table attribute. This was moved to it's own function in order\r\n // to be complient with React's requirement for useState functionality\r\n // to be implemented within a function\r\n * @param       {[type]} props [description]\r\n * @constructor\r\n */\r\nexport function Render( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n  const [filters, setFilters] = useState(props.filters)\r\n  const [renderedRows, setRenderedRows] = useState((props.lazyLoadingStart === undefined) ? 100 : props.lazyLoadingStart)\r\n\r\n  // cast the data to a json_array data type\r\n  var table_data = props.data\r\n  if( !(table_data instanceof jsonArray) ){\r\n    table_data = new jsonArray(table_data)\r\n  }\r\n\r\n  // pull the column names from the props when available. Default\r\n  // to using all columns in the DataFrame\r\n  var columns = props.columns\r\n  if( props.columnGroups !== undefined) columns = toColumn(props.columnGroups, false)\r\n  if( columns === undefined ) columns = table_data.columns\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'Table'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnFilterOnChange = props.columnFilterOnChange\r\n  if( props.filterable === true ){\r\n      columnFilterOnChange = (content) => {\r\n        var temp = filters\r\n        // manage initial conditions\r\n        if( temp === undefined ) temp = []\r\n\r\n        temp = temp.filter(r => r.col_name !== content.col_name)\r\n\r\n        // only push valid values (accounts for dropdown clearing)\r\n        if( content.value.length > 0 ) temp.push( content )\r\n        setFilters( temp )\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  // filter Table based on the values stored in the filter object array\r\n  if( filters !== undefined ){\r\n    for( var i=0; i < filters.length; i ++ ){\r\n\r\n      const filt = filters[i]\r\n      if( !(columns.includes(filt.col_name)) ) continue\r\n      if( filt.value.length === 0 ) continue\r\n\r\n      table_data = table_data.filter(r => filt.value.includes(r[filt.col_name].toString()) )\r\n    }\r\n    // console.log( table_data)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <DataFrameHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          filters = {filters}\r\n          columnOnClick = {columnOnClick}\r\n          columnFilterOnChange = {columnFilterOnChange}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columns = {columns}\r\n          renderedRows = {renderedRows}\r\n          setRenderedRows = {setRenderedRows}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Renders the a table for data of Series type\r\n * @param       {Object} props parameters for rendering Table\r\n * @constructor\r\n */\r\nexport function SeriesTable( props ){\r\n\r\n  // internal variable to tracke the sorted column and sort order\r\n  const [sortBy, setSortBy] = useState(props.sortBy)\r\n  const [sortAscending, setSortAscending] = useState(props.sortAscending)\r\n\r\n  var table_data = props.data\r\n\r\n  // define the table name which will be used to define the keys\r\n  var tableName = props.tableName\r\n  if( tableName === undefined ) tableName = 'SeriesTable'\r\n\r\n  // enable the column onClick to track the selected column, which will\r\n  // be sorted when enabled\r\n  var columnOnClick = props.columnOnClick\r\n  if( props.sortable === true ){\r\n      columnOnClick = (content) => {\r\n        setSortBy( content.col_name );\r\n        setSortAscending( !sortAscending );\r\n      }\r\n  }\r\n\r\n  // sort the data based on the column name specified in the parameters\r\n  // or the internal state variable when selection is enabled\r\n  var sortedColumn = sortBy\r\n  if( sortedColumn !== undefined ){\r\n    table_data = table_data.sort_values( sortedColumn, sortAscending)\r\n  }\r\n\r\n  return (\r\n    <TableComponent\r\n      {...props.bodyProps}\r\n      style={{...{textAlign:'center'}, ...props.bodyStyle}}\r\n      component={props.table}\r\n      key={`${tableName}-table`}\r\n      defaultValue={[\r\n\r\n        <SeriesHeader\r\n          {...props}\r\n          key={`${tableName}-TableHeader`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          columnOnClick = {columnOnClick}\r\n          />,\r\n\r\n        <TableBody\r\n          {...props}\r\n          key={`${tableName}-TableBody`}\r\n          tableName = {tableName}\r\n          table_data={table_data}\r\n          />\r\n        ]}\r\n      />\r\n\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}